schema {
  query: Query
  mutation: Mutation
}

"""
Only include this fragment in the output when the environment variable is set.
"""
directive @env(if: String!) on FRAGMENT_DEFINITION

"""
Defines wheter a Fragment can be injected

```graphql
fragment MyInjectableFragment on Model @injectable {
  id
}
```
"""
directive @injectable on FRAGMENT_DEFINITION

"""
Defines whether a Fragment injects into an @injectable

```graphql
fragment MyFragment on Model @inject(into ["MyInjectableFragment"]) {
  field
}
```
"""
directive @inject(into: [String!]!) on FRAGMENT_DEFINITION

type Query {
  """Fetches an object given its ID"""
  entities(
    """The where parameters to query components"""
    where: [EntityWhereInput!]!
  ): [Entity!]
  """Retrieve multiple rowServiceOptionsMultiple"""
  rowServiceOptionsMultiple(where: RowServiceOptionsWhereInput, orderBy: RowServiceOptionsOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): [RowServiceOptions!]!
  """Retrieve a single rowServiceOptions"""
  rowServiceOptions(where: RowServiceOptionsWhereUniqueInput!, stage: Stage! = PUBLISHED): RowServiceOptions
  """
  Retrieve multiple rowServiceOptionsMultiple using the Relay connection interface
  """
  rowServiceOptionsMultipleConnection(where: RowServiceOptionsWhereInput, orderBy: RowServiceOptionsOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): RowServiceOptionsConnection!
  """Retrieve multiple footers"""
  footers(where: FooterWhereInput, orderBy: FooterOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): [Footer!]!
  """Retrieve a single footer"""
  footer(where: FooterWhereUniqueInput!, stage: Stage! = PUBLISHED): Footer
  """Retrieve multiple footers using the Relay connection interface"""
  footersConnection(where: FooterWhereInput, orderBy: FooterOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): FooterConnection!
  """Retrieve multiple rowQuotes"""
  rowQuotes(where: RowQuoteWhereInput, orderBy: RowQuoteOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): [RowQuote!]!
  """Retrieve a single rowQuote"""
  rowQuote(where: RowQuoteWhereUniqueInput!, stage: Stage! = PUBLISHED): RowQuote
  """Retrieve multiple rowQuotes using the Relay connection interface"""
  rowQuotesConnection(where: RowQuoteWhereInput, orderBy: RowQuoteOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): RowQuoteConnection!
  """Retrieve multiple uspsMultiple"""
  uspsMultiple(where: UspsWhereInput, orderBy: UspsOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): [Usps!]!
  """Retrieve a single usps"""
  usps(where: UspsWhereUniqueInput!, stage: Stage! = PUBLISHED): Usps
  """Retrieve multiple uspsMultiple using the Relay connection interface"""
  uspsMultipleConnection(where: UspsWhereInput, orderBy: UspsOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): UspsConnection!
  """Retrieve multiple pages"""
  pages(where: PageWhereInput, orderBy: PageOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): [Page!]!
  """Retrieve a single page"""
  page(where: PageWhereUniqueInput!, stage: Stage! = PUBLISHED): Page
  """Retrieve multiple pages using the Relay connection interface"""
  pagesConnection(where: PageWhereInput, orderBy: PageOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): PageConnection!
  """Retrieve multiple rowContentLinksMultiple"""
  rowContentLinksMultiple(where: RowContentLinksWhereInput, orderBy: RowContentLinksOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): [RowContentLinks!]!
  """Retrieve a single rowContentLinks"""
  rowContentLinks(where: RowContentLinksWhereUniqueInput!, stage: Stage! = PUBLISHED): RowContentLinks
  """
  Retrieve multiple rowContentLinksMultiple using the Relay connection interface
  """
  rowContentLinksMultipleConnection(where: RowContentLinksWhereInput, orderBy: RowContentLinksOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): RowContentLinksConnection!
  """Retrieve multiple dynamicRows"""
  dynamicRows(where: DynamicRowWhereInput, orderBy: DynamicRowOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): [DynamicRow!]!
  """Retrieve a single dynamicRow"""
  dynamicRow(where: DynamicRowWhereUniqueInput!, stage: Stage! = PUBLISHED): DynamicRow
  """Retrieve multiple dynamicRows using the Relay connection interface"""
  dynamicRowsConnection(where: DynamicRowWhereInput, orderBy: DynamicRowOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): DynamicRowConnection!
  """Retrieve multiple rowButtonLinkLists"""
  rowButtonLinkLists(where: RowButtonLinkListWhereInput, orderBy: RowButtonLinkListOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): [RowButtonLinkList!]!
  """Retrieve a single rowButtonLinkList"""
  rowButtonLinkList(where: RowButtonLinkListWhereUniqueInput!, stage: Stage! = PUBLISHED): RowButtonLinkList
  """
  Retrieve multiple rowButtonLinkLists using the Relay connection interface
  """
  rowButtonLinkListsConnection(where: RowButtonLinkListWhereInput, orderBy: RowButtonLinkListOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): RowButtonLinkListConnection!
  """Retrieve multiple pageLinks"""
  pageLinks(where: PageLinkWhereInput, orderBy: PageLinkOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): [PageLink!]!
  """Retrieve a single pageLink"""
  pageLink(where: PageLinkWhereUniqueInput!, stage: Stage! = PUBLISHED): PageLink
  """Retrieve multiple pageLinks using the Relay connection interface"""
  pageLinksConnection(where: PageLinkWhereInput, orderBy: PageLinkOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): PageLinkConnection!
  """Retrieve multiple rowProductMultiple"""
  rowProductMultiple(where: RowProductWhereInput, orderBy: RowProductOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): [RowProduct!]!
  """Retrieve a single rowProduct"""
  rowProduct(where: RowProductWhereUniqueInput!, stage: Stage! = PUBLISHED): RowProduct
  """
  Retrieve multiple rowProductMultiple using the Relay connection interface
  """
  rowProductMultipleConnection(where: RowProductWhereInput, orderBy: RowProductOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): RowProductConnection!
  """Retrieve multiple rowSpecialBanners"""
  rowSpecialBanners(where: RowSpecialBannerWhereInput, orderBy: RowSpecialBannerOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): [RowSpecialBanner!]!
  """Retrieve a single rowSpecialBanner"""
  rowSpecialBanner(where: RowSpecialBannerWhereUniqueInput!, stage: Stage! = PUBLISHED): RowSpecialBanner
  """
  Retrieve multiple rowSpecialBanners using the Relay connection interface
  """
  rowSpecialBannersConnection(where: RowSpecialBannerWhereInput, orderBy: RowSpecialBannerOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): RowSpecialBannerConnection!
  """Retrieve multiple rowLinksMultiple"""
  rowLinksMultiple(where: RowLinksWhereInput, orderBy: RowLinksOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): [RowLinks!]!
  """Retrieve a single rowLinks"""
  rowLinks(where: RowLinksWhereUniqueInput!, stage: Stage! = PUBLISHED): RowLinks
  """
  Retrieve multiple rowLinksMultiple using the Relay connection interface
  """
  rowLinksMultipleConnection(where: RowLinksWhereInput, orderBy: RowLinksOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): RowLinksConnection!
  """Retrieve multiple rowHeroBanners"""
  rowHeroBanners(where: RowHeroBannerWhereInput, orderBy: RowHeroBannerOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): [RowHeroBanner!]!
  """Retrieve a single rowHeroBanner"""
  rowHeroBanner(where: RowHeroBannerWhereUniqueInput!, stage: Stage! = PUBLISHED): RowHeroBanner
  """Retrieve multiple rowHeroBanners using the Relay connection interface"""
  rowHeroBannersConnection(where: RowHeroBannerWhereInput, orderBy: RowHeroBannerOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): RowHeroBannerConnection!
  """Retrieve multiple rowColumnTwos"""
  rowColumnTwos(where: RowColumnTwoWhereInput, orderBy: RowColumnTwoOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): [RowColumnTwo!]!
  """Retrieve a single rowColumnTwo"""
  rowColumnTwo(where: RowColumnTwoWhereUniqueInput!, stage: Stage! = PUBLISHED): RowColumnTwo
  """Retrieve multiple rowColumnTwos using the Relay connection interface"""
  rowColumnTwosConnection(where: RowColumnTwoWhereInput, orderBy: RowColumnTwoOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): RowColumnTwoConnection!
  """Retrieve multiple rowColumnThrees"""
  rowColumnThrees(where: RowColumnThreeWhereInput, orderBy: RowColumnThreeOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): [RowColumnThree!]!
  """Retrieve a single rowColumnThree"""
  rowColumnThree(where: RowColumnThreeWhereUniqueInput!, stage: Stage! = PUBLISHED): RowColumnThree
  """Retrieve multiple rowColumnThrees using the Relay connection interface"""
  rowColumnThreesConnection(where: RowColumnThreeWhereInput, orderBy: RowColumnThreeOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): RowColumnThreeConnection!
  """Retrieve multiple rowColumnOnes"""
  rowColumnOnes(where: RowColumnOneWhereInput, orderBy: RowColumnOneOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): [RowColumnOne!]!
  """Retrieve a single rowColumnOne"""
  rowColumnOne(where: RowColumnOneWhereUniqueInput!, stage: Stage! = PUBLISHED): RowColumnOne
  """Retrieve multiple rowColumnOnes using the Relay connection interface"""
  rowColumnOnesConnection(where: RowColumnOneWhereInput, orderBy: RowColumnOneOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): RowColumnOneConnection!
  """Retrieve multiple rowBlogContents"""
  rowBlogContents(where: RowBlogContentWhereInput, orderBy: RowBlogContentOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): [RowBlogContent!]!
  """Retrieve a single rowBlogContent"""
  rowBlogContent(where: RowBlogContentWhereUniqueInput!, stage: Stage! = PUBLISHED): RowBlogContent
  """Retrieve multiple rowBlogContents using the Relay connection interface"""
  rowBlogContentsConnection(where: RowBlogContentWhereInput, orderBy: RowBlogContentOrderByInput, skip: Int, first: Int, stage: Stage! = PUBLISHED): RowBlogContentConnection!
  """Get a list of available store views and their config information."""
  availableStores(
    """Filter store views by the current store group."""
    useCurrentGroup: Boolean
  ): [StoreConfig]
  """Return information about the specified shopping cart."""
  cart(
    """The unique ID of the cart to query."""
    cart_id: String!
  ): Cart
  """Return a list of categories that match the specified filter."""
  categories(
    """Identifies which Category filter inputs to search for and return."""
    filters: CategoryFilterInput
    """
    Specifies the maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20
    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1
  ): CategoryResult
  """
  Search for categories that match the criteria specified in the `search` and `filter` attributes.
  """
  category(
    """The category ID to use as the root of the search."""
    id: Int
  ): CategoryTree @deprecated(reason: "Use `categories` instead.")
  """Return an array of categories based on the specified filters."""
  categoryList(
    """Identifies which Category filter inputs to search for and return."""
    filters: CategoryFilterInput
    """
    Specifies the maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20
    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1
  ): [CategoryTree] @deprecated(reason: "Use `categories` instead.")
  """Return Terms and Conditions configuration information."""
  checkoutAgreements: [CheckoutAgreement]
  """Return information about CMS blocks."""
  cmsBlocks(
    """An array of CMS block IDs."""
    identifiers: [String]
  ): CmsBlocks
  """Return details about a CMS page."""
  cmsPage(
    """The ID of the CMS page."""
    id: Int
    """The identifier of the CMS page."""
    identifier: String
  ): CmsPage
  """Return products that have been added to the specified compare list."""
  compareList(
    """The unique ID of the compare list to be queried."""
    uid: ID!
  ): CompareList
  """The countries query provides information for all countries."""
  countries: [Country]
  """The countries query provides information for a single country."""
  country(id: String): Country
  """Return information about the store's currency."""
  currency: Currency
  """Return the attribute type, given an attribute code and entity type."""
  customAttributeMetadata(
    """
    An input object that specifies the attribute code and entity type to search.
    """
    attributes: [AttributeInput!]!
  ): CustomAttributeMetadata
  """Return detailed information about a customer account."""
  customer: Customer
  """Return information about the customer's shopping cart."""
  customerCart: Cart!
  """Return a list of downloadable products the customer has purchased."""
  customerDownloadableProducts: CustomerDownloadableProducts
  customerOrders: CustomerOrders @deprecated(reason: "Use the `customer` query instead.")
  """Return a list of customer payment tokens stored in the vault."""
  customerPaymentTokens: CustomerPaymentTokens
  """
  Retrieve the secure PayPal URL for a Payments Pro Hosted Solution transaction.
  """
  getHostedProUrl(
    """An input object that specifies the cart ID."""
    input: HostedProUrlInput!
  ): HostedProUrl
  """
  Retrieve payment credentials for a transaction. Use this query for Payflow Link and Payments Advanced payment methods.
  """
  getPayflowLinkToken(
    """
    An input object that defines the requirements to receive a payment token.
    """
    input: PayflowLinkTokenInput!
  ): PayflowLinkToken
  """
  Check whether the specified email has already been used to create a customer account.
  """
  isEmailAvailable(
    """The email address to check."""
    email: String!
  ): IsEmailAvailableOutput
  mollieCustomerOrder(
    """The hash added to your custom URL"""
    hash: String
  ): CustomerOrder
  molliePaymentMethods(input: MolliePaymentMethodsInput): MolliePaymentMethodsOutput
  """
  The pickup locations query searches for locations that match the search request requirements.
  """
  pickupLocations(
    """Perform search by location using radius and search term."""
    area: AreaInput
    """Apply filters by attributes."""
    filters: PickupLocationFilterInput
    """
    Specifies which attribute to sort on, and whether to return the results in ascending or descending order.
    """
    sort: PickupLocationSortInput
    """
    The maximum number of pickup locations to return at once. The attribute is optional.
    """
    pageSize: Int = 20
    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1
    """Information about products which should be delivered."""
    productsInfo: [ProductInfoInput]
  ): PickupLocations
  """
  Return the active ratings attributes and the values each rating can have.
  """
  productReviewRatingsMetadata: ProductReviewRatingsMetadata!
  """
  Search for products that match the criteria specified in the `search` and `filter` attributes.
  """
  products(
    """One or more keywords to use in a full-text search."""
    search: String
    """The product attributes to search for and return."""
    filter: ProductAttributeFilterInput
    """
    The maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20
    """The page of results to return. The default value is 1."""
    currentPage: Int = 1
    """
    Specifies which attributes to sort on, and whether to return the results in ascending or descending order.
    """
    sort: ProductAttributeSortInput
  ): Products
  """
  Return the full details for a specified product, category, or CMS page.
  """
  route(
    """A `url_key` appended by the `url_suffix, if one exists."""
    url: String!
  ): RoutableInterface
  """Return details about the store's configuration."""
  storeConfig: StoreConfig
  """Return the relative URL for a specified product, category or CMS page."""
  urlResolver(
    """A `url_key` appended by the `url_suffix, if one exists."""
    url: String!
  ): EntityUrl @deprecated(reason: "Use the `route` query instead.")
  """Return the contents of a customer's wish list."""
  wishlist: WishlistOutput @deprecated(reason: "Moved under `Customer.wishlist`.")
  currentCartId: CurrentCartId
  currentCompareUid: CurrentCompareUid
  customerToken: CustomerToken
  guestWishlist: GuestWishlist
}

type Aggregate {
  count: Int!
}

"""Asset system model"""
type Asset implements Node & Entity {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """The mime type of the file"""
  mimeType: String
  """The file size"""
  size: Float
  """The file width"""
  width: Float
  """The height of the file"""
  height: Float
  """The file name"""
  fileName: String!
  """The file handle"""
  handle: String!
  """The unique identifier"""
  id: ID!
  alt: String
  assetRowHeroBanner(where: RowHeroBannerWhereInput, orderBy: RowHeroBannerOrderByInput, skip: Int, first: Int): [RowHeroBanner!]!
  rowSpecialBannerAsset(where: RowSpecialBannerWhereInput, orderBy: RowSpecialBannerOrderByInput, skip: Int, first: Int): [RowSpecialBanner!]!
  assetRowProduct(where: RowProductWhereInput, orderBy: RowProductOrderByInput, skip: Int, first: Int): [RowProduct!]!
  assetPage(where: PageWhereInput, orderBy: PageOrderByInput, skip: Int, first: Int): [Page!]!
  assetPageLink(where: PageLinkWhereInput, orderBy: PageLinkOrderByInput, skip: Int, first: Int): [PageLink!]!
  """Get the url for the asset with provided transformations applied."""
  url(transformation: AssetTransformationInput): String!
}

"""Transformations for Assets"""
input AssetTransformationInput {
  image: ImageTransformationInput
  document: DocumentTransformationInput
  """Pass true if you want to validate the passed transformation parameters"""
  validateOptions: Boolean = false
}

"""Identifies documents"""
input AssetWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [AssetWhereInput!]
  """Logical OR on all given filters."""
  OR: [AssetWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [AssetWhereInput!]
  mimeType: String
  """Any other value that exists and is not equal to the given value."""
  mimeType_not: String
  """All values that are contained in given list."""
  mimeType_in: [String]
  """All values that are not contained in given list."""
  mimeType_not_in: [String]
  """All values containing the given string."""
  mimeType_contains: String
  """All values not containing the given string."""
  mimeType_not_contains: String
  """All values starting with the given string."""
  mimeType_starts_with: String
  """All values not starting with the given string."""
  mimeType_not_starts_with: String
  """All values ending with the given string."""
  mimeType_ends_with: String
  """All values not ending with the given string"""
  mimeType_not_ends_with: String
  size: Float
  """Any other value that exists and is not equal to the given value."""
  size_not: Float
  """All values that are contained in given list."""
  size_in: [Float]
  """All values that are not contained in given list."""
  size_not_in: [Float]
  """All values less than the given value."""
  size_lt: Float
  """All values less than or equal the given value."""
  size_lte: Float
  """All values greater than the given value."""
  size_gt: Float
  """All values greater than or equal the given value."""
  size_gte: Float
  width: Float
  """Any other value that exists and is not equal to the given value."""
  width_not: Float
  """All values that are contained in given list."""
  width_in: [Float]
  """All values that are not contained in given list."""
  width_not_in: [Float]
  """All values less than the given value."""
  width_lt: Float
  """All values less than or equal the given value."""
  width_lte: Float
  """All values greater than the given value."""
  width_gt: Float
  """All values greater than or equal the given value."""
  width_gte: Float
  height: Float
  """Any other value that exists and is not equal to the given value."""
  height_not: Float
  """All values that are contained in given list."""
  height_in: [Float]
  """All values that are not contained in given list."""
  height_not_in: [Float]
  """All values less than the given value."""
  height_lt: Float
  """All values less than or equal the given value."""
  height_lte: Float
  """All values greater than the given value."""
  height_gt: Float
  """All values greater than or equal the given value."""
  height_gte: Float
  fileName: String
  """Any other value that exists and is not equal to the given value."""
  fileName_not: String
  """All values that are contained in given list."""
  fileName_in: [String]
  """All values that are not contained in given list."""
  fileName_not_in: [String]
  """All values containing the given string."""
  fileName_contains: String
  """All values not containing the given string."""
  fileName_not_contains: String
  """All values starting with the given string."""
  fileName_starts_with: String
  """All values not starting with the given string."""
  fileName_not_starts_with: String
  """All values ending with the given string."""
  fileName_ends_with: String
  """All values not ending with the given string"""
  fileName_not_ends_with: String
  handle: String
  """Any other value that exists and is not equal to the given value."""
  handle_not: String
  """All values that are contained in given list."""
  handle_in: [String]
  """All values that are not contained in given list."""
  handle_not_in: [String]
  """All values containing the given string."""
  handle_contains: String
  """All values not containing the given string."""
  handle_not_contains: String
  """All values starting with the given string."""
  handle_starts_with: String
  """All values not starting with the given string."""
  handle_not_starts_with: String
  """All values ending with the given string."""
  handle_ends_with: String
  """All values not ending with the given string"""
  handle_not_ends_with: String
  id: ID
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  alt: String
  """Any other value that exists and is not equal to the given value."""
  alt_not: String
  """All values that are contained in given list."""
  alt_in: [String]
  """All values that are not contained in given list."""
  alt_not_in: [String]
  """All values containing the given string."""
  alt_contains: String
  """All values not containing the given string."""
  alt_not_contains: String
  """All values starting with the given string."""
  alt_starts_with: String
  """All values not starting with the given string."""
  alt_not_starts_with: String
  """All values ending with the given string."""
  alt_ends_with: String
  """All values not ending with the given string"""
  alt_not_ends_with: String
  assetRowHeroBanner_every: RowHeroBannerWhereInput
  assetRowHeroBanner_some: RowHeroBannerWhereInput
  assetRowHeroBanner_none: RowHeroBannerWhereInput
  rowSpecialBannerAsset_every: RowSpecialBannerWhereInput
  rowSpecialBannerAsset_some: RowSpecialBannerWhereInput
  rowSpecialBannerAsset_none: RowSpecialBannerWhereInput
  assetRowProduct_every: RowProductWhereInput
  assetRowProduct_some: RowProductWhereInput
  assetRowProduct_none: RowProductWhereInput
  assetPage_every: PageWhereInput
  assetPage_some: PageWhereInput
  assetPage_none: PageWhereInput
  assetPageLink_every: PageLinkWhereInput
  assetPageLink_some: PageLinkWhereInput
  assetPageLink_none: PageLinkWhereInput
}

"""All of these conditions must match"""
type ConditionAnd implements Entity {
  """System stage field"""
  stage: Stage!
  """The unique identifier"""
  id: ID!
  conditions(skip: Int, first: Int): [ConditionAndconditionsUnion!]!
}

"""Identifies documents"""
input ConditionAndWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [ConditionAndWhereInput!]
  """Logical OR on all given filters."""
  OR: [ConditionAndWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ConditionAndWhereInput!]
  id: ID
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values in which the union is empty."""
  conditions_empty: Boolean
  """
  Matches if the modular component contains at least one connection to the item provided to the filter
  """
  conditions_some: ConditionAndconditionsUnionWhereInput
}

union ConditionAndconditionsUnion = ConditionNumber | ConditionOr | ConditionText

input ConditionAndconditionsUnionWhereInput {
  ConditionNumber: ConditionNumberWhereInput
  ConditionText: ConditionTextWhereInput
  ConditionOr: ConditionOrWhereInput
}

type ConditionNumber implements Entity {
  """System stage field"""
  stage: Stage!
  """The unique identifier"""
  id: ID!
  property: String!
  value: Float!
  operator: DynamicRowConditionNumberOperator!
}

"""Identifies documents"""
input ConditionNumberWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [ConditionNumberWhereInput!]
  """Logical OR on all given filters."""
  OR: [ConditionNumberWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ConditionNumberWhereInput!]
  id: ID
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  property: String
  """Any other value that exists and is not equal to the given value."""
  property_not: String
  """All values that are contained in given list."""
  property_in: [String]
  """All values that are not contained in given list."""
  property_not_in: [String]
  """All values containing the given string."""
  property_contains: String
  """All values not containing the given string."""
  property_not_contains: String
  """All values starting with the given string."""
  property_starts_with: String
  """All values not starting with the given string."""
  property_not_starts_with: String
  """All values ending with the given string."""
  property_ends_with: String
  """All values not ending with the given string"""
  property_not_ends_with: String
  value: Float
  """Any other value that exists and is not equal to the given value."""
  value_not: Float
  """All values that are contained in given list."""
  value_in: [Float]
  """All values that are not contained in given list."""
  value_not_in: [Float]
  """All values less than the given value."""
  value_lt: Float
  """All values less than or equal the given value."""
  value_lte: Float
  """All values greater than the given value."""
  value_gt: Float
  """All values greater than or equal the given value."""
  value_gte: Float
  operator: DynamicRowConditionNumberOperator
  """Any other value that exists and is not equal to the given value."""
  operator_not: DynamicRowConditionNumberOperator
  """All values that are contained in given list."""
  operator_in: [DynamicRowConditionNumberOperator]
  """All values that are not contained in given list."""
  operator_not_in: [DynamicRowConditionNumberOperator]
}

"""One of these conditions must match"""
type ConditionOr implements Entity {
  """System stage field"""
  stage: Stage!
  """The unique identifier"""
  id: ID!
  conditions(skip: Int, first: Int): [ConditionOrconditionsUnion!]!
}

"""Identifies documents"""
input ConditionOrWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [ConditionOrWhereInput!]
  """Logical OR on all given filters."""
  OR: [ConditionOrWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ConditionOrWhereInput!]
  id: ID
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values in which the union is empty."""
  conditions_empty: Boolean
  """
  Matches if the modular component contains at least one connection to the item provided to the filter
  """
  conditions_some: ConditionOrconditionsUnionWhereInput
}

union ConditionOrconditionsUnion = ConditionNumber | ConditionText

input ConditionOrconditionsUnionWhereInput {
  ConditionNumber: ConditionNumberWhereInput
  ConditionText: ConditionTextWhereInput
}

type ConditionText implements Entity {
  """System stage field"""
  stage: Stage!
  """The unique identifier"""
  id: ID!
  property: String!
  value: String!
}

"""Identifies documents"""
input ConditionTextWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [ConditionTextWhereInput!]
  """Logical OR on all given filters."""
  OR: [ConditionTextWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ConditionTextWhereInput!]
  id: ID
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  property: String
  """Any other value that exists and is not equal to the given value."""
  property_not: String
  """All values that are contained in given list."""
  property_in: [String]
  """All values that are not contained in given list."""
  property_not_in: [String]
  """All values containing the given string."""
  property_contains: String
  """All values not containing the given string."""
  property_not_contains: String
  """All values starting with the given string."""
  property_starts_with: String
  """All values not starting with the given string."""
  property_not_starts_with: String
  """All values ending with the given string."""
  property_ends_with: String
  """All values not ending with the given string"""
  property_not_ends_with: String
  value: String
  """Any other value that exists and is not equal to the given value."""
  value_not: String
  """All values that are contained in given list."""
  value_in: [String]
  """All values that are not contained in given list."""
  value_not_in: [String]
  """All values containing the given string."""
  value_contains: String
  """All values not containing the given string."""
  value_not_contains: String
  """All values starting with the given string."""
  value_starts_with: String
  """All values not starting with the given string."""
  value_not_starts_with: String
  """All values ending with the given string."""
  value_ends_with: String
  """All values not ending with the given string"""
  value_not_ends_with: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the date-timeformat outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representationof dates and times using the Gregorian calendar.
"""
scalar DateTime

enum DocumentFileTypes {
  jpg
  odp
  ods
  odt
  png
  svg
  txt
  webp
  docx
  pdf
  html
  doc
  xlsx
  xls
  pptx
  ppt
}

input DocumentOutputInput {
  """
  Transforms a document into a desired file type.
  See this matrix for format support:
  
  PDF:	jpg, odp, ods, odt, png, svg, txt, and webp
  DOC:	docx, html, jpg, odt, pdf, png, svg, txt, and webp
  DOCX:	doc, html, jpg, odt, pdf, png, svg, txt, and webp
  ODT:	doc, docx, html, jpg, pdf, png, svg, txt, and webp
  XLS:	jpg, pdf, ods, png, svg, xlsx, and webp
  XLSX:	jpg, pdf, ods, png, svg, xls, and webp
  ODS:	jpg, pdf, png, xls, svg, xlsx, and webp
  PPT:	jpg, odp, pdf, png, svg, pptx, and webp
  PPTX:	jpg, odp, pdf, png, svg, ppt, and webp
  ODP:	jpg, pdf, png, ppt, svg, pptx, and webp
  BMP:	jpg, odp, ods, odt, pdf, png, svg, and webp
  GIF:	jpg, odp, ods, odt, pdf, png, svg, and webp
  JPG:	jpg, odp, ods, odt, pdf, png, svg, and webp
  PNG:	jpg, odp, ods, odt, pdf, png, svg, and webp
  WEBP:	jpg, odp, ods, odt, pdf, png, svg, and webp
  TIFF:	jpg, odp, ods, odt, pdf, png, svg, and webp
  AI:	    jpg, odp, ods, odt, pdf, png, svg, and webp
  PSD:	jpg, odp, ods, odt, pdf, png, svg, and webp
  SVG:	jpg, odp, ods, odt, pdf, png, and webp
  HTML:	jpg, odt, pdf, svg, txt, and webp
  TXT:	jpg, html, odt, pdf, svg, and webp
  """
  format: DocumentFileTypes
}

"""Transformations for Documents"""
input DocumentTransformationInput {
  """Changes the output for the file."""
  output: DocumentOutputInput
}

"""
Dynamic rows allow you to add specific Row models to pages based on the properties of the page
"""
type DynamicRow implements Node & Entity {
  """System stage field"""
  stage: Stage!
  """The unique identifier"""
  id: ID!
  """Only used for internal reference"""
  internalName: String!
  """One of these conditions must match"""
  conditions(skip: Int, first: Int): [DynamicRowconditionsUnion!]!
  """Where will the row be placed relative to the target"""
  placement: DynamicRowPlacement!
  rows(skip: Int, first: Int): [Union_rows_dynamicRows!]!
  """
  Optional: When the target is left blank it will place the Dynamic Row on the start or end.
  """
  target: DynamicRowTarget
  """This field is deprecated. Use Rows instead."""
  row: Union_row_dynamicRow
}

enum DynamicRowConditionNumberOperator {
  GTE
  LTE
  EQUAL
}

"""A connection to a list of items."""
type DynamicRowConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [DynamicRowEdge!]!
  aggregate: Aggregate!
}

"""An edge in a connection."""
type DynamicRowEdge {
  """The item at the end of the edge."""
  node: DynamicRow!
  """A cursor for use in pagination."""
  cursor: String!
}

enum DynamicRowOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  internalName_ASC
  internalName_DESC
  placement_ASC
  placement_DESC
}

enum DynamicRowPlacement {
  BEFORE
  AFTER
  REPLACE
}

union DynamicRowTarget = RowBlogContent | RowButtonLinkList | RowColumnOne | RowColumnThree | RowColumnTwo | RowContentLinks | RowHeroBanner | RowLinks | RowProduct | RowQuote | RowServiceOptions | RowSpecialBanner

input DynamicRowTargetWhereInput {
  RowServiceOptions: RowServiceOptionsWhereInput
  RowQuote: RowQuoteWhereInput
  RowColumnOne: RowColumnOneWhereInput
  RowContentLinks: RowContentLinksWhereInput
  RowButtonLinkList: RowButtonLinkListWhereInput
  RowProduct: RowProductWhereInput
  RowSpecialBanner: RowSpecialBannerWhereInput
  RowLinks: RowLinksWhereInput
  RowHeroBanner: RowHeroBannerWhereInput
  RowColumnTwo: RowColumnTwoWhereInput
  RowColumnThree: RowColumnThreeWhereInput
  RowBlogContent: RowBlogContentWhereInput
}

"""Identifies documents"""
input DynamicRowWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [DynamicRowWhereInput!]
  """Logical OR on all given filters."""
  OR: [DynamicRowWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [DynamicRowWhereInput!]
  id: ID
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  internalName: String
  """Any other value that exists and is not equal to the given value."""
  internalName_not: String
  """All values that are contained in given list."""
  internalName_in: [String]
  """All values that are not contained in given list."""
  internalName_not_in: [String]
  """All values containing the given string."""
  internalName_contains: String
  """All values not containing the given string."""
  internalName_not_contains: String
  """All values starting with the given string."""
  internalName_starts_with: String
  """All values not starting with the given string."""
  internalName_not_starts_with: String
  """All values ending with the given string."""
  internalName_ends_with: String
  """All values not ending with the given string"""
  internalName_not_ends_with: String
  """All values in which the union is empty."""
  conditions_empty: Boolean
  """
  Matches if the modular component contains at least one connection to the item provided to the filter
  """
  conditions_some: DynamicRowconditionsUnionWhereInput
  placement: DynamicRowPlacement
  """Any other value that exists and is not equal to the given value."""
  placement_not: DynamicRowPlacement
  """All values that are contained in given list."""
  placement_in: [DynamicRowPlacement]
  """All values that are not contained in given list."""
  placement_not_in: [DynamicRowPlacement]
  """All values in which the union is empty"""
  rows_empty: Boolean
  """
  Matches if the union contains at least one connection to the provided item to the filter
  """
  rows_some: Union_rows_dynamicRowsWhereInput
  """All values in which the union is empty"""
  target_empty: Boolean
  """All values in which the union is connected to the given models"""
  target: DynamicRowTargetWhereInput
  """All values in which the union is empty"""
  row_empty: Boolean
  """All values in which the union is connected to the given models"""
  row: Union_row_dynamicRowWhereInput
}

"""References DynamicRow record uniquely"""
input DynamicRowWhereUniqueInput {
  id: ID
  internalName: String
}

union DynamicRowconditionsUnion = ConditionAnd | ConditionNumber | ConditionText

input DynamicRowconditionsUnionWhereInput {
  ConditionAnd: ConditionAndWhereInput
  ConditionNumber: ConditionNumberWhereInput
  ConditionText: ConditionTextWhereInput
}

"""An object with an ID"""
interface Entity {
  """The id of the object."""
  id: ID!
  """The Stage of an object"""
  stage: Stage!
}

"""
This enumeration holds all typenames that implement the Entity interface. Components and models implement the Entity interface.
"""
enum EntityTypeName {
  RowServiceOptions
  Footer
  RowQuote
  Usps
  Page
  """Asset system model"""
  Asset
  """User system model"""
  User
  """Scheduled Operation system model"""
  ScheduledOperation
  """Scheduled Release system model"""
  ScheduledRelease
  RowContentLinks
  """
  Dynamic rows allow you to add specific Row models to pages based on the properties of the page
  """
  DynamicRow
  RowButtonLinkList
  PageLink
  RowProduct
  RowSpecialBanner
  RowLinks
  RowHeroBanner
  RowColumnTwo
  RowColumnThree
  RowColumnOne
  RowBlogContent
  """All of these conditions must match"""
  ConditionAnd
  ConditionNumber
  """One of these conditions must match"""
  ConditionOr
  ConditionText
}

"""Allows to specify input to query models and components directly"""
input EntityWhereInput {
  """The ID of an object"""
  id: ID!
  """The Type name of an object"""
  typename: EntityTypeName!
  stage: Stage!
  locale: Locale
}

type Footer implements Node & Entity {
  """System stage field"""
  stage: Stage!
  """The unique identifier"""
  id: ID!
  identity: String!
  copyright: String
  socialLinks(where: PageLinkWhereInput, orderBy: PageLinkOrderByInput, skip: Int, first: Int): [PageLink!]!
  legalLinks(where: PageLinkWhereInput, orderBy: PageLinkOrderByInput, skip: Int, first: Int): [PageLink!]!
}

"""A connection to a list of items."""
type FooterConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [FooterEdge!]!
  aggregate: Aggregate!
}

"""An edge in a connection."""
type FooterEdge {
  """The item at the end of the edge."""
  node: Footer!
  """A cursor for use in pagination."""
  cursor: String!
}

enum FooterOrderByInput {
  publishedAt_ASC
  publishedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  identity_ASC
  identity_DESC
  copyright_ASC
  copyright_DESC
}

"""Identifies documents"""
input FooterWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [FooterWhereInput!]
  """Logical OR on all given filters."""
  OR: [FooterWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [FooterWhereInput!]
  id: ID
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  identity: String
  """Any other value that exists and is not equal to the given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String]
  """All values that are not contained in given list."""
  identity_not_in: [String]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  copyright: String
  """Any other value that exists and is not equal to the given value."""
  copyright_not: String
  """All values that are contained in given list."""
  copyright_in: [String]
  """All values that are not contained in given list."""
  copyright_not_in: [String]
  """All values containing the given string."""
  copyright_contains: String
  """All values not containing the given string."""
  copyright_not_contains: String
  """All values starting with the given string."""
  copyright_starts_with: String
  """All values not starting with the given string."""
  copyright_not_starts_with: String
  """All values ending with the given string."""
  copyright_ends_with: String
  """All values not ending with the given string"""
  copyright_not_ends_with: String
  socialLinks_every: PageLinkWhereInput
  socialLinks_some: PageLinkWhereInput
  socialLinks_none: PageLinkWhereInput
  legalLinks_every: PageLinkWhereInput
  legalLinks_some: PageLinkWhereInput
  legalLinks_none: PageLinkWhereInput
}

"""References Footer record uniquely"""
input FooterWhereUniqueInput {
  id: ID
  identity: String
}

enum ImageFit {
  """
  Resizes the image to fit within the specified parameters without distorting, cropping, or changing the aspect ratio.
  """
  clip
  """
  Resizes the image to fit the specified parameters exactly by removing any parts of the image that don't fit within the boundaries.
  """
  crop
  """
  Resizes the image to fit the specified parameters exactly by scaling the image to the desired size. The aspect ratio of the image is not respected and the image can be distorted using this method.
  """
  scale
  """
  Resizes the image to fit within the parameters, but as opposed to 'fit:clip' will not scale the image if the image is smaller than the output size.
  """
  max
}

input ImageResizeInput {
  """
  The width in pixels to resize the image to. The value must be an integer from 1 to 10000.
  """
  width: Int
  """
  The height in pixels to resize the image to. The value must be an integer from 1 to 10000.
  """
  height: Int
  """The default value for the fit parameter is fit:clip."""
  fit: ImageFit
}

"""Transformations for Images"""
input ImageTransformationInput {
  """Resizes the image"""
  resize: ImageResizeInput
}

"""Raw JSON value"""
scalar Json

"""Locale system enumeration"""
enum Locale {
  """System locale"""
  en_us
  nl
}

enum MetaRobots {
  INDEX_FOLLOW
  INDEX_NOFOLLOW
  NOINDEX_FOLLOW
  NOINDEX_NOFOLLOW
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
  """The Stage of an object"""
  stage: Stage!
}

type Page implements Node & Entity {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """The unique identifier"""
  id: ID!
  url: String!
  title: String
  metaTitle: String!
  metaDescription: String!
  date: DateTime
  author: String
  """9:6 for general usage"""
  asset: Asset
  relatedPages(where: PageWhereInput, orderBy: PageOrderByInput, skip: Int, first: Int): [Page!]!
  childPages(where: PageWhereInput, orderBy: PageOrderByInput, skip: Int, first: Int): [Page!]!
  rowButtonLinkLists(where: RowButtonLinkListWhereInput, orderBy: RowButtonLinkListOrderByInput, skip: Int, first: Int): [RowButtonLinkList!]!
  metaRobots: MetaRobots!
  content(skip: Int, first: Int): [PageContent!]!
}

"""A connection to a list of items."""
type PageConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [PageEdge!]!
  aggregate: Aggregate!
}

union PageContent = RowBlogContent | RowButtonLinkList | RowColumnOne | RowColumnThree | RowColumnTwo | RowContentLinks | RowHeroBanner | RowLinks | RowProduct | RowQuote | RowServiceOptions | RowSpecialBanner

input PageContentWhereInput {
  RowServiceOptions: RowServiceOptionsWhereInput
  RowButtonLinkList: RowButtonLinkListWhereInput
  RowContentLinks: RowContentLinksWhereInput
  RowQuote: RowQuoteWhereInput
  RowProduct: RowProductWhereInput
  RowSpecialBanner: RowSpecialBannerWhereInput
  RowHeroBanner: RowHeroBannerWhereInput
  RowColumnTwo: RowColumnTwoWhereInput
  RowColumnThree: RowColumnThreeWhereInput
  RowColumnOne: RowColumnOneWhereInput
  RowBlogContent: RowBlogContentWhereInput
  RowLinks: RowLinksWhereInput
}

"""An edge in a connection."""
type PageEdge {
  """The item at the end of the edge."""
  node: Page!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """When paginating backwards, the cursor to continue."""
  startCursor: String
  """When paginating forwards, the cursor to continue."""
  endCursor: String
  """Number of items in the current page."""
  pageSize: Int
}

type PageLink implements Node & Entity {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """The unique identifier"""
  id: ID!
  title: String!
  description: RichText
  url: String!
  rowHeroBanners(where: RowHeroBannerWhereInput, orderBy: RowHeroBannerOrderByInput, skip: Int, first: Int): [RowHeroBanner!]!
  rowProductMultiple(where: RowProductWhereInput, orderBy: RowProductOrderByInput, skip: Int, first: Int): [RowProduct!]!
  rowSpecialBanners(where: RowSpecialBannerWhereInput, orderBy: RowSpecialBannerOrderByInput, skip: Int, first: Int): [RowSpecialBanner!]!
  rowLinks(where: RowLinksWhereInput, orderBy: RowLinksOrderByInput, skip: Int, first: Int): [RowLinks!]!
  footerSocialLinks(where: FooterWhereInput, orderBy: FooterOrderByInput, skip: Int, first: Int): [Footer!]!
  uspsMultiple(where: UspsWhereInput, orderBy: UspsOrderByInput, skip: Int, first: Int): [Usps!]!
  rowServiceOptionsMultiple(where: RowServiceOptionsWhereInput, orderBy: RowServiceOptionsOrderByInput, skip: Int, first: Int): [RowServiceOptions!]!
  rowContentLinks: RowContentLinks
  footerLegalLinks(where: FooterWhereInput, orderBy: FooterOrderByInput, skip: Int, first: Int): [Footer!]!
  asset: Asset
}

"""A connection to a list of items."""
type PageLinkConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [PageLinkEdge!]!
  aggregate: Aggregate!
}

"""An edge in a connection."""
type PageLinkEdge {
  """The item at the end of the edge."""
  node: PageLink!
  """A cursor for use in pagination."""
  cursor: String!
}

enum PageLinkOrderByInput {
  publishedAt_ASC
  publishedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  url_ASC
  url_DESC
}

"""Identifies documents"""
input PageLinkWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [PageLinkWhereInput!]
  """Logical OR on all given filters."""
  OR: [PageLinkWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [PageLinkWhereInput!]
  id: ID
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  title: String
  """Any other value that exists and is not equal to the given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String]
  """All values that are not contained in given list."""
  title_not_in: [String]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  url: String
  """Any other value that exists and is not equal to the given value."""
  url_not: String
  """All values that are contained in given list."""
  url_in: [String]
  """All values that are not contained in given list."""
  url_not_in: [String]
  """All values containing the given string."""
  url_contains: String
  """All values not containing the given string."""
  url_not_contains: String
  """All values starting with the given string."""
  url_starts_with: String
  """All values not starting with the given string."""
  url_not_starts_with: String
  """All values ending with the given string."""
  url_ends_with: String
  """All values not ending with the given string"""
  url_not_ends_with: String
  rowHeroBanners_every: RowHeroBannerWhereInput
  rowHeroBanners_some: RowHeroBannerWhereInput
  rowHeroBanners_none: RowHeroBannerWhereInput
  rowProductMultiple_every: RowProductWhereInput
  rowProductMultiple_some: RowProductWhereInput
  rowProductMultiple_none: RowProductWhereInput
  rowSpecialBanners_every: RowSpecialBannerWhereInput
  rowSpecialBanners_some: RowSpecialBannerWhereInput
  rowSpecialBanners_none: RowSpecialBannerWhereInput
  rowLinks_every: RowLinksWhereInput
  rowLinks_some: RowLinksWhereInput
  rowLinks_none: RowLinksWhereInput
  footerSocialLinks_every: FooterWhereInput
  footerSocialLinks_some: FooterWhereInput
  footerSocialLinks_none: FooterWhereInput
  uspsMultiple_every: UspsWhereInput
  uspsMultiple_some: UspsWhereInput
  uspsMultiple_none: UspsWhereInput
  rowServiceOptionsMultiple_every: RowServiceOptionsWhereInput
  rowServiceOptionsMultiple_some: RowServiceOptionsWhereInput
  rowServiceOptionsMultiple_none: RowServiceOptionsWhereInput
  rowContentLinks: RowContentLinksWhereInput
  footerLegalLinks_every: FooterWhereInput
  footerLegalLinks_some: FooterWhereInput
  footerLegalLinks_none: FooterWhereInput
  asset: AssetWhereInput
}

"""References PageLink record uniquely"""
input PageLinkWhereUniqueInput {
  id: ID
}

enum PageOrderByInput {
  publishedAt_ASC
  publishedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  url_ASC
  url_DESC
  title_ASC
  title_DESC
  metaTitle_ASC
  metaTitle_DESC
  metaDescription_ASC
  metaDescription_DESC
  date_ASC
  date_DESC
  author_ASC
  author_DESC
  metaRobots_ASC
  metaRobots_DESC
}

"""Identifies documents"""
input PageWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [PageWhereInput!]
  """Logical OR on all given filters."""
  OR: [PageWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [PageWhereInput!]
  id: ID
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  url: String
  """Any other value that exists and is not equal to the given value."""
  url_not: String
  """All values that are contained in given list."""
  url_in: [String]
  """All values that are not contained in given list."""
  url_not_in: [String]
  """All values containing the given string."""
  url_contains: String
  """All values not containing the given string."""
  url_not_contains: String
  """All values starting with the given string."""
  url_starts_with: String
  """All values not starting with the given string."""
  url_not_starts_with: String
  """All values ending with the given string."""
  url_ends_with: String
  """All values not ending with the given string"""
  url_not_ends_with: String
  title: String
  """Any other value that exists and is not equal to the given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String]
  """All values that are not contained in given list."""
  title_not_in: [String]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  metaTitle: String
  """Any other value that exists and is not equal to the given value."""
  metaTitle_not: String
  """All values that are contained in given list."""
  metaTitle_in: [String]
  """All values that are not contained in given list."""
  metaTitle_not_in: [String]
  """All values containing the given string."""
  metaTitle_contains: String
  """All values not containing the given string."""
  metaTitle_not_contains: String
  """All values starting with the given string."""
  metaTitle_starts_with: String
  """All values not starting with the given string."""
  metaTitle_not_starts_with: String
  """All values ending with the given string."""
  metaTitle_ends_with: String
  """All values not ending with the given string"""
  metaTitle_not_ends_with: String
  metaDescription: String
  """Any other value that exists and is not equal to the given value."""
  metaDescription_not: String
  """All values that are contained in given list."""
  metaDescription_in: [String]
  """All values that are not contained in given list."""
  metaDescription_not_in: [String]
  """All values containing the given string."""
  metaDescription_contains: String
  """All values not containing the given string."""
  metaDescription_not_contains: String
  """All values starting with the given string."""
  metaDescription_starts_with: String
  """All values not starting with the given string."""
  metaDescription_not_starts_with: String
  """All values ending with the given string."""
  metaDescription_ends_with: String
  """All values not ending with the given string"""
  metaDescription_not_ends_with: String
  date: DateTime
  """Any other value that exists and is not equal to the given value."""
  date_not: DateTime
  """All values that are contained in given list."""
  date_in: [DateTime]
  """All values that are not contained in given list."""
  date_not_in: [DateTime]
  """All values less than the given value."""
  date_lt: DateTime
  """All values less than or equal the given value."""
  date_lte: DateTime
  """All values greater than the given value."""
  date_gt: DateTime
  """All values greater than or equal the given value."""
  date_gte: DateTime
  author: String
  """Any other value that exists and is not equal to the given value."""
  author_not: String
  """All values that are contained in given list."""
  author_in: [String]
  """All values that are not contained in given list."""
  author_not_in: [String]
  """All values containing the given string."""
  author_contains: String
  """All values not containing the given string."""
  author_not_contains: String
  """All values starting with the given string."""
  author_starts_with: String
  """All values not starting with the given string."""
  author_not_starts_with: String
  """All values ending with the given string."""
  author_ends_with: String
  """All values not ending with the given string"""
  author_not_ends_with: String
  asset: AssetWhereInput
  relatedPages_every: PageWhereInput
  relatedPages_some: PageWhereInput
  relatedPages_none: PageWhereInput
  childPages_every: PageWhereInput
  childPages_some: PageWhereInput
  childPages_none: PageWhereInput
  rowButtonLinkLists_every: RowButtonLinkListWhereInput
  rowButtonLinkLists_some: RowButtonLinkListWhereInput
  rowButtonLinkLists_none: RowButtonLinkListWhereInput
  metaRobots: MetaRobots
  """Any other value that exists and is not equal to the given value."""
  metaRobots_not: MetaRobots
  """All values that are contained in given list."""
  metaRobots_in: [MetaRobots]
  """All values that are not contained in given list."""
  metaRobots_not_in: [MetaRobots]
  """All values in which the union is empty"""
  content_empty: Boolean
  """
  Matches if the union contains at least one connection to the provided item to the filter
  """
  content_some: PageContentWhereInput
}

"""References Page record uniquely"""
input PageWhereUniqueInput {
  id: ID
}

"""
Custom type representing a rich text value comprising of raw rich text ast, html, markdown and text values
"""
type RichText {
  """Returns AST representation"""
  raw: RichTextAST!
  """Returns HTMl representation"""
  html: String!
  """Returns Markdown representation"""
  markdown: String!
  """Returns plain-text contents of RichText"""
  text: String!
}

"""Slate-compatible RichText AST"""
scalar RichTextAST

type RowBlogContent implements Node & Entity {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """The unique identifier"""
  id: ID!
  identity: String!
  content: RichText
  dynamicRowsTarget(where: DynamicRowWhereInput, skip: Int, first: Int): [DynamicRow!]!
  pages(where: PageWhereInput, skip: Int, first: Int): [Page!]!
}

"""A connection to a list of items."""
type RowBlogContentConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowBlogContentEdge!]!
  aggregate: Aggregate!
}

"""An edge in a connection."""
type RowBlogContentEdge {
  """The item at the end of the edge."""
  node: RowBlogContent!
  """A cursor for use in pagination."""
  cursor: String!
}

enum RowBlogContentOrderByInput {
  publishedAt_ASC
  publishedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  identity_ASC
  identity_DESC
}

"""Identifies documents"""
input RowBlogContentWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowBlogContentWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowBlogContentWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowBlogContentWhereInput!]
  id: ID
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  identity: String
  """Any other value that exists and is not equal to the given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String]
  """All values that are not contained in given list."""
  identity_not_in: [String]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  dynamicRowsTarget_every: DynamicRowWhereInput
  dynamicRowsTarget_some: DynamicRowWhereInput
  dynamicRowsTarget_none: DynamicRowWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowBlogContent record uniquely"""
input RowBlogContentWhereUniqueInput {
  id: ID
  identity: String
}

type RowButtonLinkList implements Node & Entity {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """The unique identifier"""
  id: ID!
  identity: String!
  title: String!
  links(where: PageWhereInput, orderBy: PageOrderByInput, skip: Int, first: Int): [Page!]!
  dynamicRowsTarget(where: DynamicRowWhereInput, skip: Int, first: Int): [DynamicRow!]!
  pages(where: PageWhereInput, skip: Int, first: Int): [Page!]!
}

"""A connection to a list of items."""
type RowButtonLinkListConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowButtonLinkListEdge!]!
  aggregate: Aggregate!
}

"""An edge in a connection."""
type RowButtonLinkListEdge {
  """The item at the end of the edge."""
  node: RowButtonLinkList!
  """A cursor for use in pagination."""
  cursor: String!
}

enum RowButtonLinkListOrderByInput {
  publishedAt_ASC
  publishedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  identity_ASC
  identity_DESC
  title_ASC
  title_DESC
}

"""Identifies documents"""
input RowButtonLinkListWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowButtonLinkListWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowButtonLinkListWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowButtonLinkListWhereInput!]
  id: ID
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  identity: String
  """Any other value that exists and is not equal to the given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String]
  """All values that are not contained in given list."""
  identity_not_in: [String]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  title: String
  """Any other value that exists and is not equal to the given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String]
  """All values that are not contained in given list."""
  title_not_in: [String]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  links_every: PageWhereInput
  links_some: PageWhereInput
  links_none: PageWhereInput
  dynamicRowsTarget_every: DynamicRowWhereInput
  dynamicRowsTarget_some: DynamicRowWhereInput
  dynamicRowsTarget_none: DynamicRowWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowButtonLinkList record uniquely"""
input RowButtonLinkListWhereUniqueInput {
  id: ID
  identity: String
}

type RowColumnOne implements Node & Entity {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """The unique identifier"""
  id: ID!
  identity: String!
  colOne: RichText!
  rowColumnOneVariant: RowColumnOneVariants
  dynamicRows(where: DynamicRowWhereInput, skip: Int, first: Int): [DynamicRow!]!
  dynamicRowsTarget(where: DynamicRowWhereInput, skip: Int, first: Int): [DynamicRow!]!
  pages(where: PageWhereInput, skip: Int, first: Int): [Page!]!
  dynamicRow(where: DynamicRowWhereInput, skip: Int, first: Int): [DynamicRow!]!
}

"""A connection to a list of items."""
type RowColumnOneConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowColumnOneEdge!]!
  aggregate: Aggregate!
}

"""An edge in a connection."""
type RowColumnOneEdge {
  """The item at the end of the edge."""
  node: RowColumnOne!
  """A cursor for use in pagination."""
  cursor: String!
}

enum RowColumnOneOrderByInput {
  publishedAt_ASC
  publishedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  identity_ASC
  identity_DESC
  rowColumnOneVariant_ASC
  rowColumnOneVariant_DESC
}

enum RowColumnOneVariants {
  Default
  Message
}

"""Identifies documents"""
input RowColumnOneWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowColumnOneWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowColumnOneWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowColumnOneWhereInput!]
  id: ID
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  identity: String
  """Any other value that exists and is not equal to the given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String]
  """All values that are not contained in given list."""
  identity_not_in: [String]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  rowColumnOneVariant: RowColumnOneVariants
  """Any other value that exists and is not equal to the given value."""
  rowColumnOneVariant_not: RowColumnOneVariants
  """All values that are contained in given list."""
  rowColumnOneVariant_in: [RowColumnOneVariants]
  """All values that are not contained in given list."""
  rowColumnOneVariant_not_in: [RowColumnOneVariants]
  dynamicRows_every: DynamicRowWhereInput
  dynamicRows_some: DynamicRowWhereInput
  dynamicRows_none: DynamicRowWhereInput
  dynamicRowsTarget_every: DynamicRowWhereInput
  dynamicRowsTarget_some: DynamicRowWhereInput
  dynamicRowsTarget_none: DynamicRowWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
  dynamicRow_every: DynamicRowWhereInput
  dynamicRow_some: DynamicRowWhereInput
  dynamicRow_none: DynamicRowWhereInput
}

"""References RowColumnOne record uniquely"""
input RowColumnOneWhereUniqueInput {
  id: ID
  identity: String
}

type RowColumnThree implements Node & Entity {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """The unique identifier"""
  id: ID!
  identity: String!
  colOne: RichText!
  colTwo: RichText!
  colThree: RichText!
  dynamicRowsTarget(where: DynamicRowWhereInput, skip: Int, first: Int): [DynamicRow!]!
  pages(where: PageWhereInput, skip: Int, first: Int): [Page!]!
}

"""A connection to a list of items."""
type RowColumnThreeConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowColumnThreeEdge!]!
  aggregate: Aggregate!
}

"""An edge in a connection."""
type RowColumnThreeEdge {
  """The item at the end of the edge."""
  node: RowColumnThree!
  """A cursor for use in pagination."""
  cursor: String!
}

enum RowColumnThreeOrderByInput {
  publishedAt_ASC
  publishedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  identity_ASC
  identity_DESC
}

"""Identifies documents"""
input RowColumnThreeWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowColumnThreeWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowColumnThreeWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowColumnThreeWhereInput!]
  id: ID
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  identity: String
  """Any other value that exists and is not equal to the given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String]
  """All values that are not contained in given list."""
  identity_not_in: [String]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  dynamicRowsTarget_every: DynamicRowWhereInput
  dynamicRowsTarget_some: DynamicRowWhereInput
  dynamicRowsTarget_none: DynamicRowWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowColumnThree record uniquely"""
input RowColumnThreeWhereUniqueInput {
  id: ID
  identity: String
}

type RowColumnTwo implements Node & Entity {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """The unique identifier"""
  id: ID!
  identity: String!
  colOne: RichText!
  colTwo: RichText!
  dynamicRowsTarget(where: DynamicRowWhereInput, skip: Int, first: Int): [DynamicRow!]!
  pages(where: PageWhereInput, skip: Int, first: Int): [Page!]!
}

"""A connection to a list of items."""
type RowColumnTwoConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowColumnTwoEdge!]!
  aggregate: Aggregate!
}

"""An edge in a connection."""
type RowColumnTwoEdge {
  """The item at the end of the edge."""
  node: RowColumnTwo!
  """A cursor for use in pagination."""
  cursor: String!
}

enum RowColumnTwoOrderByInput {
  publishedAt_ASC
  publishedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  identity_ASC
  identity_DESC
}

"""Identifies documents"""
input RowColumnTwoWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowColumnTwoWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowColumnTwoWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowColumnTwoWhereInput!]
  id: ID
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  identity: String
  """Any other value that exists and is not equal to the given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String]
  """All values that are not contained in given list."""
  identity_not_in: [String]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  dynamicRowsTarget_every: DynamicRowWhereInput
  dynamicRowsTarget_some: DynamicRowWhereInput
  dynamicRowsTarget_none: DynamicRowWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowColumnTwo record uniquely"""
input RowColumnTwoWhereUniqueInput {
  id: ID
  identity: String
}

type RowContentLinks implements Node & Entity {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """The unique identifier"""
  id: ID!
  identity: String!
  title: String!
  contentLinks(where: PageLinkWhereInput, orderBy: PageLinkOrderByInput, skip: Int, first: Int): [PageLink!]!
  dynamicRowsTarget(where: DynamicRowWhereInput, skip: Int, first: Int): [DynamicRow!]!
  pages(where: PageWhereInput, skip: Int, first: Int): [Page!]!
}

"""A connection to a list of items."""
type RowContentLinksConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowContentLinksEdge!]!
  aggregate: Aggregate!
}

"""An edge in a connection."""
type RowContentLinksEdge {
  """The item at the end of the edge."""
  node: RowContentLinks!
  """A cursor for use in pagination."""
  cursor: String!
}

enum RowContentLinksOrderByInput {
  publishedAt_ASC
  publishedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  identity_ASC
  identity_DESC
  title_ASC
  title_DESC
}

"""Identifies documents"""
input RowContentLinksWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowContentLinksWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowContentLinksWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowContentLinksWhereInput!]
  id: ID
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  identity: String
  """Any other value that exists and is not equal to the given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String]
  """All values that are not contained in given list."""
  identity_not_in: [String]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  title: String
  """Any other value that exists and is not equal to the given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String]
  """All values that are not contained in given list."""
  title_not_in: [String]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  contentLinks_every: PageLinkWhereInput
  contentLinks_some: PageLinkWhereInput
  contentLinks_none: PageLinkWhereInput
  dynamicRowsTarget_every: DynamicRowWhereInput
  dynamicRowsTarget_some: DynamicRowWhereInput
  dynamicRowsTarget_none: DynamicRowWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowContentLinks record uniquely"""
input RowContentLinksWhereUniqueInput {
  id: ID
  identity: String
}

type RowHeroBanner implements Node & Entity {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """The unique identifier"""
  id: ID!
  identity: String!
  copy: RichText!
  """Video, landscape"""
  asset: Asset!
  pageLinks(where: PageLinkWhereInput, orderBy: PageLinkOrderByInput, skip: Int, first: Int): [PageLink!]!
  dynamicRowsTarget(where: DynamicRowWhereInput, skip: Int, first: Int): [DynamicRow!]!
  pages(where: PageWhereInput, skip: Int, first: Int): [Page!]!
}

"""A connection to a list of items."""
type RowHeroBannerConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowHeroBannerEdge!]!
  aggregate: Aggregate!
}

"""An edge in a connection."""
type RowHeroBannerEdge {
  """The item at the end of the edge."""
  node: RowHeroBanner!
  """A cursor for use in pagination."""
  cursor: String!
}

enum RowHeroBannerOrderByInput {
  publishedAt_ASC
  publishedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  identity_ASC
  identity_DESC
}

"""Identifies documents"""
input RowHeroBannerWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowHeroBannerWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowHeroBannerWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowHeroBannerWhereInput!]
  id: ID
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  identity: String
  """Any other value that exists and is not equal to the given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String]
  """All values that are not contained in given list."""
  identity_not_in: [String]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  asset: AssetWhereInput
  pageLinks_every: PageLinkWhereInput
  pageLinks_some: PageLinkWhereInput
  pageLinks_none: PageLinkWhereInput
  dynamicRowsTarget_every: DynamicRowWhereInput
  dynamicRowsTarget_some: DynamicRowWhereInput
  dynamicRowsTarget_none: DynamicRowWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowHeroBanner record uniquely"""
input RowHeroBannerWhereUniqueInput {
  id: ID
  identity: String
}

type RowLinks implements Node & Entity {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """The unique identifier"""
  id: ID!
  identity: String!
  title: String!
  rowLinksCopy: RichText
  pageLinks(where: PageLinkWhereInput, orderBy: PageLinkOrderByInput, skip: Int, first: Int): [PageLink!]!
  linksVariant: RowLinksVariants
  dynamicRows(where: DynamicRowWhereInput, skip: Int, first: Int): [DynamicRow!]!
  dynamicRowsTarget(where: DynamicRowWhereInput, skip: Int, first: Int): [DynamicRow!]!
  pages(where: PageWhereInput, skip: Int, first: Int): [Page!]!
  dynamicRow(where: DynamicRowWhereInput, skip: Int, first: Int): [DynamicRow!]!
}

"""A connection to a list of items."""
type RowLinksConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowLinksEdge!]!
  aggregate: Aggregate!
}

"""An edge in a connection."""
type RowLinksEdge {
  """The item at the end of the edge."""
  node: RowLinks!
  """A cursor for use in pagination."""
  cursor: String!
}

enum RowLinksOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
  title_ASC
  title_DESC
  linksVariant_ASC
  linksVariant_DESC
}

enum RowLinksVariants {
  Inline
  ImageLabelSwiper
  LogoSwiper
  Usps
}

"""Identifies documents"""
input RowLinksWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowLinksWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowLinksWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowLinksWhereInput!]
  id: ID
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  identity: String
  """Any other value that exists and is not equal to the given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String]
  """All values that are not contained in given list."""
  identity_not_in: [String]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  title: String
  """Any other value that exists and is not equal to the given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String]
  """All values that are not contained in given list."""
  title_not_in: [String]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  pageLinks_every: PageLinkWhereInput
  pageLinks_some: PageLinkWhereInput
  pageLinks_none: PageLinkWhereInput
  linksVariant: RowLinksVariants
  """Any other value that exists and is not equal to the given value."""
  linksVariant_not: RowLinksVariants
  """All values that are contained in given list."""
  linksVariant_in: [RowLinksVariants]
  """All values that are not contained in given list."""
  linksVariant_not_in: [RowLinksVariants]
  dynamicRows_every: DynamicRowWhereInput
  dynamicRows_some: DynamicRowWhereInput
  dynamicRows_none: DynamicRowWhereInput
  dynamicRowsTarget_every: DynamicRowWhereInput
  dynamicRowsTarget_some: DynamicRowWhereInput
  dynamicRowsTarget_none: DynamicRowWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
  dynamicRow_every: DynamicRowWhereInput
  dynamicRow_some: DynamicRowWhereInput
  dynamicRow_none: DynamicRowWhereInput
}

"""References RowLinks record uniquely"""
input RowLinksWhereUniqueInput {
  id: ID
  identity: String
}

type RowProduct implements Node & Entity {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """The unique identifier"""
  id: ID!
  identity: String!
  title: String!
  productCopy: RichText
  pageLinks(where: PageLinkWhereInput, orderBy: PageLinkOrderByInput, skip: Int, first: Int): [PageLink!]!
  asset: Asset
  """Row Product component to render"""
  variant: RowProductVariants
  dynamicRowsTarget(where: DynamicRowWhereInput, skip: Int, first: Int): [DynamicRow!]!
  pages(where: PageWhereInput, skip: Int, first: Int): [Page!]!
}

"""A connection to a list of items."""
type RowProductConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowProductEdge!]!
  aggregate: Aggregate!
}

"""An edge in a connection."""
type RowProductEdge {
  """The item at the end of the edge."""
  node: RowProduct!
  """A cursor for use in pagination."""
  cursor: String!
}

enum RowProductOrderByInput {
  publishedAt_ASC
  publishedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  identity_ASC
  identity_DESC
  title_ASC
  title_DESC
  variant_ASC
  variant_DESC
}

"""All different kind of possible Row Product components to render"""
enum RowProductVariants {
  Backstory
  Feature
  FeatureBoxed
  Grid
  Related
  Reviews
  Specs
  Upsells
  Swipeable
}

"""Identifies documents"""
input RowProductWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowProductWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowProductWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowProductWhereInput!]
  id: ID
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  identity: String
  """Any other value that exists and is not equal to the given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String]
  """All values that are not contained in given list."""
  identity_not_in: [String]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  title: String
  """Any other value that exists and is not equal to the given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String]
  """All values that are not contained in given list."""
  title_not_in: [String]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  pageLinks_every: PageLinkWhereInput
  pageLinks_some: PageLinkWhereInput
  pageLinks_none: PageLinkWhereInput
  asset: AssetWhereInput
  variant: RowProductVariants
  """Any other value that exists and is not equal to the given value."""
  variant_not: RowProductVariants
  """All values that are contained in given list."""
  variant_in: [RowProductVariants]
  """All values that are not contained in given list."""
  variant_not_in: [RowProductVariants]
  dynamicRowsTarget_every: DynamicRowWhereInput
  dynamicRowsTarget_some: DynamicRowWhereInput
  dynamicRowsTarget_none: DynamicRowWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowProduct record uniquely"""
input RowProductWhereUniqueInput {
  id: ID
  identity: String
}

type RowQuote implements Node & Entity {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """The unique identifier"""
  id: ID!
  identity: String!
  quote: RichText!
  dynamicRows(where: DynamicRowWhereInput, skip: Int, first: Int): [DynamicRow!]!
  dynamicRowsTarget(where: DynamicRowWhereInput, skip: Int, first: Int): [DynamicRow!]!
  pages(where: PageWhereInput, skip: Int, first: Int): [Page!]!
  dynamicRow(where: DynamicRowWhereInput, skip: Int, first: Int): [DynamicRow!]!
}

"""A connection to a list of items."""
type RowQuoteConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowQuoteEdge!]!
  aggregate: Aggregate!
}

"""An edge in a connection."""
type RowQuoteEdge {
  """The item at the end of the edge."""
  node: RowQuote!
  """A cursor for use in pagination."""
  cursor: String!
}

enum RowQuoteOrderByInput {
  publishedAt_ASC
  publishedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  identity_ASC
  identity_DESC
}

"""Identifies documents"""
input RowQuoteWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowQuoteWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowQuoteWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowQuoteWhereInput!]
  id: ID
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  identity: String
  """Any other value that exists and is not equal to the given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String]
  """All values that are not contained in given list."""
  identity_not_in: [String]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  dynamicRows_every: DynamicRowWhereInput
  dynamicRows_some: DynamicRowWhereInput
  dynamicRows_none: DynamicRowWhereInput
  dynamicRowsTarget_every: DynamicRowWhereInput
  dynamicRowsTarget_some: DynamicRowWhereInput
  dynamicRowsTarget_none: DynamicRowWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
  dynamicRow_every: DynamicRowWhereInput
  dynamicRow_some: DynamicRowWhereInput
  dynamicRow_none: DynamicRowWhereInput
}

"""References RowQuote record uniquely"""
input RowQuoteWhereUniqueInput {
  id: ID
  identity: String
}

type RowServiceOptions implements Node & Entity {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """The unique identifier"""
  id: ID!
  identity: String!
  title: String!
  serviceOptions(where: PageLinkWhereInput, orderBy: PageLinkOrderByInput, skip: Int, first: Int): [PageLink!]!
  dynamicRowsTarget(where: DynamicRowWhereInput, skip: Int, first: Int): [DynamicRow!]!
  pages(where: PageWhereInput, skip: Int, first: Int): [Page!]!
}

"""A connection to a list of items."""
type RowServiceOptionsConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowServiceOptionsEdge!]!
  aggregate: Aggregate!
}

"""An edge in a connection."""
type RowServiceOptionsEdge {
  """The item at the end of the edge."""
  node: RowServiceOptions!
  """A cursor for use in pagination."""
  cursor: String!
}

enum RowServiceOptionsOrderByInput {
  publishedAt_ASC
  publishedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  identity_ASC
  identity_DESC
  title_ASC
  title_DESC
}

"""Identifies documents"""
input RowServiceOptionsWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowServiceOptionsWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowServiceOptionsWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowServiceOptionsWhereInput!]
  id: ID
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  identity: String
  """Any other value that exists and is not equal to the given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String]
  """All values that are not contained in given list."""
  identity_not_in: [String]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  title: String
  """Any other value that exists and is not equal to the given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String]
  """All values that are not contained in given list."""
  title_not_in: [String]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  serviceOptions_every: PageLinkWhereInput
  serviceOptions_some: PageLinkWhereInput
  serviceOptions_none: PageLinkWhereInput
  dynamicRowsTarget_every: DynamicRowWhereInput
  dynamicRowsTarget_some: DynamicRowWhereInput
  dynamicRowsTarget_none: DynamicRowWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowServiceOptions record uniquely"""
input RowServiceOptionsWhereUniqueInput {
  id: ID
  identity: String
}

type RowSpecialBanner implements Node & Entity {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """The unique identifier"""
  id: ID!
  identity: String!
  topic: String
  copy: RichText!
  asset: Asset
  pageLinks(where: PageLinkWhereInput, orderBy: PageLinkOrderByInput, skip: Int, first: Int): [PageLink!]!
  dynamicRowsTarget(where: DynamicRowWhereInput, skip: Int, first: Int): [DynamicRow!]!
  pages(where: PageWhereInput, skip: Int, first: Int): [Page!]!
}

"""A connection to a list of items."""
type RowSpecialBannerConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowSpecialBannerEdge!]!
  aggregate: Aggregate!
}

"""An edge in a connection."""
type RowSpecialBannerEdge {
  """The item at the end of the edge."""
  node: RowSpecialBanner!
  """A cursor for use in pagination."""
  cursor: String!
}

enum RowSpecialBannerOrderByInput {
  publishedAt_ASC
  publishedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  identity_ASC
  identity_DESC
  topic_ASC
  topic_DESC
}

"""Identifies documents"""
input RowSpecialBannerWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowSpecialBannerWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowSpecialBannerWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowSpecialBannerWhereInput!]
  id: ID
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  identity: String
  """Any other value that exists and is not equal to the given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String]
  """All values that are not contained in given list."""
  identity_not_in: [String]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  topic: String
  """Any other value that exists and is not equal to the given value."""
  topic_not: String
  """All values that are contained in given list."""
  topic_in: [String]
  """All values that are not contained in given list."""
  topic_not_in: [String]
  """All values containing the given string."""
  topic_contains: String
  """All values not containing the given string."""
  topic_not_contains: String
  """All values starting with the given string."""
  topic_starts_with: String
  """All values not starting with the given string."""
  topic_not_starts_with: String
  """All values ending with the given string."""
  topic_ends_with: String
  """All values not ending with the given string"""
  topic_not_ends_with: String
  asset: AssetWhereInput
  pageLinks_every: PageLinkWhereInput
  pageLinks_some: PageLinkWhereInput
  pageLinks_none: PageLinkWhereInput
  dynamicRowsTarget_every: DynamicRowWhereInput
  dynamicRowsTarget_some: DynamicRowWhereInput
  dynamicRowsTarget_none: DynamicRowWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowSpecialBanner record uniquely"""
input RowSpecialBannerWhereUniqueInput {
  id: ID
  identity: String
}

"""Scheduled Operation system model"""
type ScheduledOperation implements Node & Entity {
  """System stage field"""
  stage: Stage!
  """
  Raw operation payload including all details, this field is subject to change
  """
  rawPayload: Json!
  """Operation error message"""
  errorMessage: String
  """Operation description"""
  description: String
  """The unique identifier"""
  id: ID!
  """The release this operation is scheduled for"""
  release: ScheduledRelease
  """operation Status"""
  status: ScheduledOperationStatus!
  affectedDocuments(skip: Int, first: Int): [ScheduledOperationAffectedDocument!]!
}

union ScheduledOperationAffectedDocument = Asset | DynamicRow | Footer | Page | PageLink | RowBlogContent | RowButtonLinkList | RowColumnOne | RowColumnThree | RowColumnTwo | RowContentLinks | RowHeroBanner | RowLinks | RowProduct | RowQuote | RowServiceOptions | RowSpecialBanner | Usps

enum ScheduledOperationOrderByInput {
  errorMessage_ASC
  errorMessage_DESC
  description_ASC
  description_DESC
  publishedAt_ASC
  publishedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  status_ASC
  status_DESC
}

"""System Scheduled Operation Status"""
enum ScheduledOperationStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  FAILED
  CANCELED
}

"""Identifies documents"""
input ScheduledOperationWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [ScheduledOperationWhereInput!]
  """Logical OR on all given filters."""
  OR: [ScheduledOperationWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ScheduledOperationWhereInput!]
  """All values containing the given json path."""
  rawPayload_json_path_exists: String
  """
  Recursively tries to find the provided JSON scalar value inside the field.
  It does use an exact match when comparing values.
  If you pass `null` as value the filter will be ignored. 
  Note: This filter fails if you try to look for a non scalar JSON value!
  """
  rawPayload_value_recursive: Json
  errorMessage: String
  """Any other value that exists and is not equal to the given value."""
  errorMessage_not: String
  """All values that are contained in given list."""
  errorMessage_in: [String]
  """All values that are not contained in given list."""
  errorMessage_not_in: [String]
  """All values containing the given string."""
  errorMessage_contains: String
  """All values not containing the given string."""
  errorMessage_not_contains: String
  """All values starting with the given string."""
  errorMessage_starts_with: String
  """All values not starting with the given string."""
  errorMessage_not_starts_with: String
  """All values ending with the given string."""
  errorMessage_ends_with: String
  """All values not ending with the given string"""
  errorMessage_not_ends_with: String
  description: String
  """Any other value that exists and is not equal to the given value."""
  description_not: String
  """All values that are contained in given list."""
  description_in: [String]
  """All values that are not contained in given list."""
  description_not_in: [String]
  """All values containing the given string."""
  description_contains: String
  """All values not containing the given string."""
  description_not_contains: String
  """All values starting with the given string."""
  description_starts_with: String
  """All values not starting with the given string."""
  description_not_starts_with: String
  """All values ending with the given string."""
  description_ends_with: String
  """All values not ending with the given string"""
  description_not_ends_with: String
  id: ID
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  release: ScheduledReleaseWhereInput
  status: ScheduledOperationStatus
  """Any other value that exists and is not equal to the given value."""
  status_not: ScheduledOperationStatus
  """All values that are contained in given list."""
  status_in: [ScheduledOperationStatus]
  """All values that are not contained in given list."""
  status_not_in: [ScheduledOperationStatus]
}

"""Scheduled Release system model"""
type ScheduledRelease implements Node & Entity {
  """System stage field"""
  stage: Stage!
  """Release date and time"""
  releaseAt: DateTime
  """Whether scheduled release is implicit"""
  isImplicit: Boolean!
  """Whether scheduled release should be run"""
  isActive: Boolean!
  """Release error message"""
  errorMessage: String
  """Release description"""
  description: String
  """Release Title"""
  title: String
  """The unique identifier"""
  id: ID!
  """Operations to run with this release"""
  operations(where: ScheduledOperationWhereInput, orderBy: ScheduledOperationOrderByInput, skip: Int, first: Int): [ScheduledOperation!]!
  """Release Status"""
  status: ScheduledReleaseStatus!
}

"""System Scheduled Release Status"""
enum ScheduledReleaseStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  FAILED
}

"""Identifies documents"""
input ScheduledReleaseWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [ScheduledReleaseWhereInput!]
  """Logical OR on all given filters."""
  OR: [ScheduledReleaseWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ScheduledReleaseWhereInput!]
  releaseAt: DateTime
  """Any other value that exists and is not equal to the given value."""
  releaseAt_not: DateTime
  """All values that are contained in given list."""
  releaseAt_in: [DateTime]
  """All values that are not contained in given list."""
  releaseAt_not_in: [DateTime]
  """All values less than the given value."""
  releaseAt_lt: DateTime
  """All values less than or equal the given value."""
  releaseAt_lte: DateTime
  """All values greater than the given value."""
  releaseAt_gt: DateTime
  """All values greater than or equal the given value."""
  releaseAt_gte: DateTime
  isImplicit: Boolean
  """Any other value that exists and is not equal to the given value."""
  isImplicit_not: Boolean
  isActive: Boolean
  """Any other value that exists and is not equal to the given value."""
  isActive_not: Boolean
  errorMessage: String
  """Any other value that exists and is not equal to the given value."""
  errorMessage_not: String
  """All values that are contained in given list."""
  errorMessage_in: [String]
  """All values that are not contained in given list."""
  errorMessage_not_in: [String]
  """All values containing the given string."""
  errorMessage_contains: String
  """All values not containing the given string."""
  errorMessage_not_contains: String
  """All values starting with the given string."""
  errorMessage_starts_with: String
  """All values not starting with the given string."""
  errorMessage_not_starts_with: String
  """All values ending with the given string."""
  errorMessage_ends_with: String
  """All values not ending with the given string"""
  errorMessage_not_ends_with: String
  description: String
  """Any other value that exists and is not equal to the given value."""
  description_not: String
  """All values that are contained in given list."""
  description_in: [String]
  """All values that are not contained in given list."""
  description_not_in: [String]
  """All values containing the given string."""
  description_contains: String
  """All values not containing the given string."""
  description_not_contains: String
  """All values starting with the given string."""
  description_starts_with: String
  """All values not starting with the given string."""
  description_not_starts_with: String
  """All values ending with the given string."""
  description_ends_with: String
  """All values not ending with the given string"""
  description_not_ends_with: String
  title: String
  """Any other value that exists and is not equal to the given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String]
  """All values that are not contained in given list."""
  title_not_in: [String]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  id: ID
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  operations_every: ScheduledOperationWhereInput
  operations_some: ScheduledOperationWhereInput
  operations_none: ScheduledOperationWhereInput
  status: ScheduledReleaseStatus
  """Any other value that exists and is not equal to the given value."""
  status_not: ScheduledReleaseStatus
  """All values that are contained in given list."""
  status_in: [ScheduledReleaseStatus]
  """All values that are not contained in given list."""
  status_not_in: [ScheduledReleaseStatus]
}

"""Stage system enumeration"""
enum Stage {
  """The Draft is the default stage for all your content."""
  DRAFT
  """The Published stage is where you can publish your content to."""
  PUBLISHED
}

union Union_row_dynamicRow = RowColumnOne | RowLinks | RowQuote

input Union_row_dynamicRowWhereInput {
  RowColumnOne: RowColumnOneWhereInput
  RowLinks: RowLinksWhereInput
  RowQuote: RowQuoteWhereInput
}

union Union_rows_dynamicRows = RowColumnOne | RowLinks | RowQuote

input Union_rows_dynamicRowsWhereInput {
  RowColumnOne: RowColumnOneWhereInput
  RowLinks: RowLinksWhereInput
  RowQuote: RowQuoteWhereInput
}

"""User system model"""
type User implements Node & Entity {
  """System stage field"""
  stage: Stage!
  """Flag to determine if user is active or not"""
  isActive: Boolean!
  """Profile Picture url"""
  picture: String
  """The username"""
  name: String!
  """The unique identifier"""
  id: ID!
  """User Kind. Can be either MEMBER, PAT or PUBLIC"""
  kind: UserKind!
}

"""System User Kind"""
enum UserKind {
  MEMBER
  PAT
  PUBLIC
  WEBHOOK
}

type Usps implements Node & Entity {
  """System stage field"""
  stage: Stage!
  """The unique identifier"""
  id: ID!
  identity: String!
  uspsMultiple(where: PageLinkWhereInput, orderBy: PageLinkOrderByInput, skip: Int, first: Int): [PageLink!]!
}

"""A connection to a list of items."""
type UspsConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [UspsEdge!]!
  aggregate: Aggregate!
}

"""An edge in a connection."""
type UspsEdge {
  """The item at the end of the edge."""
  node: Usps!
  """A cursor for use in pagination."""
  cursor: String!
}

enum UspsOrderByInput {
  publishedAt_ASC
  publishedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  identity_ASC
  identity_DESC
}

"""Identifies documents"""
input UspsWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [UspsWhereInput!]
  """Logical OR on all given filters."""
  OR: [UspsWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [UspsWhereInput!]
  id: ID
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  identity: String
  """Any other value that exists and is not equal to the given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String]
  """All values that are not contained in given list."""
  identity_not_in: [String]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  uspsMultiple_every: PageLinkWhereInput
  uspsMultiple_some: PageLinkWhereInput
  uspsMultiple_none: PageLinkWhereInput
}

"""References Usps record uniquely"""
input UspsWhereUniqueInput {
  id: ID
  identity: String
}

type Mutation {
  """
  Add one or more bundle products to the specified cart. We recommend using `addProductsToCart` instead.
  """
  addBundleProductsToCart(
    """An input object that defines which bundle products to add to the cart."""
    input: AddBundleProductsToCartInput
  ): AddBundleProductsToCartOutput
  """
  Add one or more configurable products to the specified cart. We recommend using `addProductsToCart` instead.
  """
  addConfigurableProductsToCart(
    """
    An input object that defines which configurable products to add to the cart.
    """
    input: AddConfigurableProductsToCartInput
  ): AddConfigurableProductsToCartOutput
  """
  Add one or more downloadable products to the specified cart. We recommend using `addProductsToCart` instead.
  """
  addDownloadableProductsToCart(
    """
    An input object that defines which downloadable products to add to the cart.
    """
    input: AddDownloadableProductsToCartInput
  ): AddDownloadableProductsToCartOutput
  """Add any type of product to the cart."""
  addProductsToCart(
    """The cart ID of the shopper."""
    cartId: String!
    """An array that defines the products to add to the cart."""
    cartItems: [CartItemInput!]!
  ): AddProductsToCartOutput
  """Add products to the specified compare list."""
  addProductsToCompareList(
    """
    An input object that defines which products to add to an existing compare list.
    """
    input: AddProductsToCompareListInput
  ): CompareList
  """
  Add one or more products to the specified wish list. This mutation supports all product types.
  """
  addProductsToWishlist(
    """The ID of a wish list."""
    wishlistId: ID!
    """An array of products to add to the wish list."""
    wishlistItems: [WishlistItemInput!]!
  ): AddProductsToWishlistOutput
  """
  Add one or more simple products to the specified cart. We recommend using `addProductsToCart` instead.
  """
  addSimpleProductsToCart(
    """An input object that defines which simple products to add to the cart."""
    input: AddSimpleProductsToCartInput
  ): AddSimpleProductsToCartOutput
  """
  Add one or more virtual products to the specified cart. We recommend using `addProductsToCart` instead.
  """
  addVirtualProductsToCart(
    """
    An input object that defines which virtual products to add to the cart.
    """
    input: AddVirtualProductsToCartInput
  ): AddVirtualProductsToCartOutput
  """Add items in the specified wishlist to the customer's cart."""
  addWishlistItemsToCart(
    """The unique ID of the wish list"""
    wishlistId: ID!
    """
    An array of IDs representing products to be added to the cart. If no IDs are specified, all items in the wishlist will be added to the cart
    """
    wishlistItemIds: [ID!]
  ): AddWishlistItemsToCartOutput
  """Apply a pre-defined coupon code to the specified cart."""
  applyCouponToCart(
    """An input object that defines the coupon code to apply to the cart."""
    input: ApplyCouponToCartInput
  ): ApplyCouponToCartOutput
  """Assign the specified compare list to the logged in customer."""
  assignCompareListToCustomer(
    """The unique ID of the compare list to be assigned."""
    uid: ID!
  ): AssignCompareListToCustomerOutput
  """Assign a logged-in customer to the specified guest shopping cart."""
  assignCustomerToGuestCart(cart_id: String!): Cart!
  """Change the password for the logged-in customer."""
  changeCustomerPassword(
    """The customer's original password."""
    currentPassword: String!
    """The customer's updated password."""
    newPassword: String!
  ): Customer
  """Creates Client Token for Braintree Javascript SDK initialization."""
  createBraintreeClientToken: String!
  """
  Create a new compare list. The compare list is saved for logged in customers.
  """
  createCompareList(input: CreateCompareListInput): CompareList
  """Use `createCustomerV2` instead."""
  createCustomer(
    """An input object that defines the customer to be created."""
    input: CustomerInput!
  ): CustomerOutput
  """Create a billing or shipping address for a customer or guest."""
  createCustomerAddress(input: CustomerAddressInput!): CustomerAddress
  """Create a customer account."""
  createCustomerV2(
    """An input object that defines the customer to be created."""
    input: CustomerCreateInput!
  ): CustomerOutput
  """Create an empty shopping cart for a guest or logged in user"""
  createEmptyCart(
    """An optional input object that assigns the specified ID to the cart."""
    input: createEmptyCartInput
  ): String
  createMollieTransaction(input: MollieTransactionInput): MollieTransactionOutput @deprecated(reason: "Using the Order.mollie_redirect_url attribuut")
  """
  Initiate a transaction and receive a token. Use this mutation for Payflow Pro and Payments Pro payment methods
  """
  createPayflowProToken(
    """
    An input object that defines the requirements to fetch payment token information.
    """
    input: PayflowProTokenInput!
  ): CreatePayflowProTokenOutput
  """
  Initiate an Express Checkout transaction and receive a token. Use this mutation for Express Checkout and Payments Standard payment methods.
  """
  createPaypalExpressToken(
    """
    An input object that defines the requirements to receive a payment token.
    """
    input: PaypalExpressTokenInput!
  ): PaypalExpressTokenOutput
  """Create a product review for the specified product."""
  createProductReview(
    """
    An input object that contains the details necessary to create a product review.
    """
    input: CreateProductReviewInput!
  ): CreateProductReviewOutput!
  """Delete the specified compare list."""
  deleteCompareList(
    """The unique ID of the compare list to be deleted."""
    uid: ID!
  ): DeleteCompareListOutput
  """Delete customer account"""
  deleteCustomer: Boolean
  """Delete the billing or shipping address of a customer."""
  deleteCustomerAddress(
    """The ID of the customer address to be deleted."""
    id: Int!
  ): Boolean
  """Delete a customer's payment token."""
  deletePaymentToken(
    """The reusable payment token securely stored in the vault."""
    public_hash: String!
  ): DeletePaymentTokenOutput
  """Generate a token for specified customer."""
  generateCustomerToken(
    """The customer's email address."""
    email: String!
    """The customer's password."""
    password: String!
  ): CustomerToken
  """
  Request a customer token so that an administrator can perform remote shopping assistance.
  """
  generateCustomerTokenAsAdmin(
    """An input object that defines the customer email address."""
    input: GenerateCustomerTokenAsAdminInput!
  ): GenerateCustomerTokenAsAdminOutput
  """
  Handle a payment response and save the payment in Quote. Use this mutation for Payflow Pro and Payments Pro payment methods.
  """
  handlePayflowProResponse(
    """
    An input object that includes the payload returned by PayPal and the cart ID.
    """
    input: PayflowProResponseInput!
  ): PayflowProResponseOutput
  """
  Transfer the contents of a guest cart into the cart of a logged-in customer.
  """
  mergeCarts(
    """The guest's cart ID before they login."""
    source_cart_id: String!
    """The cart ID after the guest logs in."""
    destination_cart_id: String
  ): Cart!
  mollieApplePayValidation(
    """
    The domain to validate. If this is omitted, the base url of the store is used.
    """
    domain: String
    """The validation URL provided by Apple Pay."""
    validationUrl: String!
  ): MollieApplePayValidationOutput
  mollieProcessTransaction(input: MollieProcessTransactionInput): MollieProcessTransactionOutput
  mollieRestoreCart(input: MollieResetCartInput): MollieResetCartOutput
  """Convert the quote into an order."""
  placeOrder(
    """An input object that defines the shopper's cart ID."""
    input: PlaceOrderInput
  ): PlaceOrderOutput
  """
  Remove a previously-applied coupon from the cart. The cart must contain at least one item in order to remove the coupon.
  """
  removeCouponFromCart(
    """
    An input object that defines which coupon code to remove from the cart.
    """
    input: RemoveCouponFromCartInput
  ): RemoveCouponFromCartOutput
  """
  Delete the entire quantity of a specified item from the cart. If you remove all items from the cart, the cart continues to exist.
  """
  removeItemFromCart(
    """An input object that defines which products to remove from the cart."""
    input: RemoveItemFromCartInput
  ): RemoveItemFromCartOutput
  """Remove products from the specified compare list."""
  removeProductsFromCompareList(
    """
    An input object that defines which products to remove from a compare list.
    """
    input: RemoveProductsFromCompareListInput
  ): CompareList
  """Remove one or more products from the specified wish list."""
  removeProductsFromWishlist(
    """The ID of a wish list."""
    wishlistId: ID!
    """An array of item IDs representing products to be removed."""
    wishlistItemsIds: [ID!]!
  ): RemoveProductsFromWishlistOutput
  """Add all products from a customer's previous order to the cart."""
  reorderItems(orderNumber: String!): ReorderItemsOutput
  """
  Request an email with a reset password token for the registered customer identified by the specified email.
  """
  requestPasswordResetEmail(
    """The customer's email address."""
    email: String!
  ): Boolean
  """
  Reset a customer's password using the reset password token that the customer received in an email after requesting it using `requestPasswordResetEmail`.
  """
  resetPassword(
    """The customer's email address."""
    email: String!
    """A runtime token generated by the `requestPasswordResetEmail` mutation."""
    resetPasswordToken: String!
    """The customer's new password."""
    newPassword: String!
  ): Boolean
  """Revoke the customer token."""
  revokeCustomerToken: RevokeCustomerTokenOutput
  """
  Send a message on behalf of a customer to the specified email addresses.
  """
  sendEmailToFriend(
    """An input object that defines sender, recipients, and product."""
    input: SendEmailToFriendInput
  ): SendEmailToFriendOutput
  """Set the billing address on a specific cart."""
  setBillingAddressOnCart(
    """
    An input object that defines the billing address to be assigned to the cart.
    """
    input: SetBillingAddressOnCartInput
  ): SetBillingAddressOnCartOutput
  """Assign the email address of a guest to the cart."""
  setGuestEmailOnCart(
    """An input object that defines a guest email address."""
    input: SetGuestEmailOnCartInput
  ): SetGuestEmailOnCartOutput
  """Set the cart payment method and convert the cart into an order."""
  setPaymentMethodAndPlaceOrder(input: SetPaymentMethodAndPlaceOrderInput): PlaceOrderOutput @deprecated(reason: "Should use setPaymentMethodOnCart and placeOrder mutations in single request.")
  """Apply a payment method to the cart."""
  setPaymentMethodOnCart(
    """
    An input object that defines which payment method to apply to the cart.
    """
    input: SetPaymentMethodOnCartInput
  ): SetPaymentMethodOnCartOutput
  """Set one or more shipping addresses on a specific cart."""
  setShippingAddressesOnCart(
    """
    An input object that defines one or more shipping addresses to be assigned to the cart.
    """
    input: SetShippingAddressesOnCartInput
  ): SetShippingAddressesOnCartOutput
  """Set one or more delivery methods on a cart."""
  setShippingMethodsOnCart(
    """An input object that applies one or more shipping methods to the cart."""
    input: SetShippingMethodsOnCartInput
  ): SetShippingMethodsOnCartOutput
  """Subscribe the specified email to the store's newsletter."""
  subscribeEmailToNewsletter(
    """The email address that will receive the store's newsletter."""
    email: String!
  ): SubscribeEmailToNewsletterOutput
  """Modify items in the cart."""
  updateCartItems(
    """An input object that defines products to be updated."""
    input: UpdateCartItemsInput
  ): UpdateCartItemsOutput
  """Use `updateCustomerV2` instead."""
  updateCustomer(
    """An input object that defines the customer characteristics to update."""
    input: CustomerInput!
  ): CustomerOutput
  """Update the billing or shipping address of a customer or guest."""
  updateCustomerAddress(
    """The ID assigned to the customer address."""
    id: Int!
    """An input object that contains changes to the customer address."""
    input: CustomerAddressInput
  ): CustomerAddress
  """Change the email address for the logged-in customer."""
  updateCustomerEmail(
    """The customer's email address."""
    email: String!
    """The customer's password."""
    password: String!
  ): CustomerOutput
  """Update the customer's personal information."""
  updateCustomerV2(
    """An input object that defines the customer characteristics to update."""
    input: CustomerUpdateInput!
  ): CustomerOutput
  """Update one or more products in the specified wish list."""
  updateProductsInWishlist(
    """The ID of a wish list."""
    wishlistId: ID!
    """An array of items to be updated."""
    wishlistItems: [WishlistItemUpdateInput!]!
  ): UpdateProductsInWishlistOutput
}

"""Defines the comparison operators that can be used in a filter."""
input FilterTypeInput {
  """Equals."""
  eq: String
  finset: [String]
  """From. Must be used with the `to` field."""
  from: String
  """Greater than."""
  gt: String
  """Greater than or equal to."""
  gteq: String
  """In. The value can contain a set of comma-separated values."""
  in: [String]
  """
  Like. The specified value can contain % (percent signs) to allow matching of 0 or more characters.
  """
  like: String
  """Less than."""
  lt: String
  """Less than or equal to."""
  lteq: String
  """More than or equal to."""
  moreq: String
  """Not equal to."""
  neq: String
  """Not in. The value can contain a set of comma-separated values."""
  nin: [String]
  """Not null."""
  notnull: String
  """Is null."""
  null: String
  """To. Must be used with the `from` field."""
  to: String
}

"""Defines a filter that matches the input exactly."""
input FilterEqualTypeInput {
  """
  Use this attribute to exactly match the specified string. For example, to filter on a specific category ID, specify a value such as `5`.
  """
  eq: String
  """
  Use this attribute to filter on an array of values. For example, to filter on category IDs 4, 5, and 6, specify a value of `["4", "5", "6"]`.
  """
  in: [String]
}

"""
Defines a filter that matches a range of values, such as prices or dates.
"""
input FilterRangeTypeInput {
  """Use this attribute to specify the lowest possible value in the range."""
  from: String
  """Use this attribute to specify the highest possible value in the range."""
  to: String
}

"""Defines a filter that performs a fuzzy search."""
input FilterMatchTypeInput {
  """
  Use this attribute to exactly match the specified string. For example, to filter on a specific SKU, specify a value such as `24-MB01`.
  """
  match: String
}

"""Defines a filter for an input string."""
input FilterStringTypeInput {
  """Filters items that are exactly the same as the specified string."""
  eq: String
  """
  Filters items that are exactly the same as entries specified in an array of strings.
  """
  in: [String]
  """
  Defines a filter that performs a fuzzy search using the specified string.
  """
  match: String
}

"""Provides navigation for the query response."""
type SearchResultPageInfo {
  """The specific page to return."""
  current_page: Int
  """The maximum number of items to return per page of results."""
  page_size: Int
  """The total number of pages in the response."""
  total_pages: Int
}

"""Indicates whether to return results in ascending or descending order."""
enum SortEnum {
  ASC @deprecated(reason: "")
  DESC @deprecated(reason: "")
}

type ComplexTextValue {
  """Text that can contain HTML tags."""
  html: String!
}

"""
Defines a monetary value, including a numeric value and a currency code.
"""
type Money {
  """A three-letter currency code, such as USD or EUR."""
  currency: CurrencyEnum
  """A number expressing a monetary value."""
  value: Float
}

"""The list of available currency codes."""
enum CurrencyEnum {
  AFN @deprecated(reason: "")
  ALL @deprecated(reason: "")
  AZN @deprecated(reason: "")
  DZD @deprecated(reason: "")
  AOA @deprecated(reason: "")
  ARS @deprecated(reason: "")
  AMD @deprecated(reason: "")
  AWG @deprecated(reason: "")
  AUD @deprecated(reason: "")
  BSD @deprecated(reason: "")
  BHD @deprecated(reason: "")
  BDT @deprecated(reason: "")
  BBD @deprecated(reason: "")
  BYN @deprecated(reason: "")
  BZD @deprecated(reason: "")
  BMD @deprecated(reason: "")
  BTN @deprecated(reason: "")
  BOB @deprecated(reason: "")
  BAM @deprecated(reason: "")
  BWP @deprecated(reason: "")
  BRL @deprecated(reason: "")
  GBP @deprecated(reason: "")
  BND @deprecated(reason: "")
  BGN @deprecated(reason: "")
  BUK @deprecated(reason: "")
  BIF @deprecated(reason: "")
  KHR @deprecated(reason: "")
  CAD @deprecated(reason: "")
  CVE @deprecated(reason: "")
  CZK @deprecated(reason: "")
  KYD @deprecated(reason: "")
  GQE @deprecated(reason: "")
  CLP @deprecated(reason: "")
  CNY @deprecated(reason: "")
  COP @deprecated(reason: "")
  KMF @deprecated(reason: "")
  CDF @deprecated(reason: "")
  CRC @deprecated(reason: "")
  HRK @deprecated(reason: "")
  CUP @deprecated(reason: "")
  DKK @deprecated(reason: "")
  DJF @deprecated(reason: "")
  DOP @deprecated(reason: "")
  XCD @deprecated(reason: "")
  EGP @deprecated(reason: "")
  SVC @deprecated(reason: "")
  ERN @deprecated(reason: "")
  EEK @deprecated(reason: "")
  ETB @deprecated(reason: "")
  EUR @deprecated(reason: "")
  FKP @deprecated(reason: "")
  FJD @deprecated(reason: "")
  GMD @deprecated(reason: "")
  GEK @deprecated(reason: "")
  GEL @deprecated(reason: "")
  GHS @deprecated(reason: "")
  GIP @deprecated(reason: "")
  GTQ @deprecated(reason: "")
  GNF @deprecated(reason: "")
  GYD @deprecated(reason: "")
  HTG @deprecated(reason: "")
  HNL @deprecated(reason: "")
  HKD @deprecated(reason: "")
  HUF @deprecated(reason: "")
  ISK @deprecated(reason: "")
  INR @deprecated(reason: "")
  IDR @deprecated(reason: "")
  IRR @deprecated(reason: "")
  IQD @deprecated(reason: "")
  ILS @deprecated(reason: "")
  JMD @deprecated(reason: "")
  JPY @deprecated(reason: "")
  JOD @deprecated(reason: "")
  KZT @deprecated(reason: "")
  KES @deprecated(reason: "")
  KWD @deprecated(reason: "")
  KGS @deprecated(reason: "")
  LAK @deprecated(reason: "")
  LVL @deprecated(reason: "")
  LBP @deprecated(reason: "")
  LSL @deprecated(reason: "")
  LRD @deprecated(reason: "")
  LYD @deprecated(reason: "")
  LTL @deprecated(reason: "")
  MOP @deprecated(reason: "")
  MKD @deprecated(reason: "")
  MGA @deprecated(reason: "")
  MWK @deprecated(reason: "")
  MYR @deprecated(reason: "")
  MVR @deprecated(reason: "")
  LSM @deprecated(reason: "")
  MRO @deprecated(reason: "")
  MUR @deprecated(reason: "")
  MXN @deprecated(reason: "")
  MDL @deprecated(reason: "")
  MNT @deprecated(reason: "")
  MAD @deprecated(reason: "")
  MZN @deprecated(reason: "")
  MMK @deprecated(reason: "")
  NAD @deprecated(reason: "")
  NPR @deprecated(reason: "")
  ANG @deprecated(reason: "")
  YTL @deprecated(reason: "")
  NZD @deprecated(reason: "")
  NIC @deprecated(reason: "")
  NGN @deprecated(reason: "")
  KPW @deprecated(reason: "")
  NOK @deprecated(reason: "")
  OMR @deprecated(reason: "")
  PKR @deprecated(reason: "")
  PAB @deprecated(reason: "")
  PGK @deprecated(reason: "")
  PYG @deprecated(reason: "")
  PEN @deprecated(reason: "")
  PHP @deprecated(reason: "")
  PLN @deprecated(reason: "")
  QAR @deprecated(reason: "")
  RHD @deprecated(reason: "")
  RON @deprecated(reason: "")
  RUB @deprecated(reason: "")
  RWF @deprecated(reason: "")
  SHP @deprecated(reason: "")
  STD @deprecated(reason: "")
  SAR @deprecated(reason: "")
  RSD @deprecated(reason: "")
  SCR @deprecated(reason: "")
  SLL @deprecated(reason: "")
  SGD @deprecated(reason: "")
  SKK @deprecated(reason: "")
  SBD @deprecated(reason: "")
  SOS @deprecated(reason: "")
  ZAR @deprecated(reason: "")
  KRW @deprecated(reason: "")
  LKR @deprecated(reason: "")
  SDG @deprecated(reason: "")
  SRD @deprecated(reason: "")
  SZL @deprecated(reason: "")
  SEK @deprecated(reason: "")
  CHF @deprecated(reason: "")
  SYP @deprecated(reason: "")
  TWD @deprecated(reason: "")
  TJS @deprecated(reason: "")
  TZS @deprecated(reason: "")
  THB @deprecated(reason: "")
  TOP @deprecated(reason: "")
  TTD @deprecated(reason: "")
  TND @deprecated(reason: "")
  TMM @deprecated(reason: "")
  USD @deprecated(reason: "")
  UGX @deprecated(reason: "")
  UAH @deprecated(reason: "")
  AED @deprecated(reason: "")
  UYU @deprecated(reason: "")
  UZS @deprecated(reason: "")
  VUV @deprecated(reason: "")
  VEB @deprecated(reason: "")
  VEF @deprecated(reason: "")
  VND @deprecated(reason: "")
  CHE @deprecated(reason: "")
  CHW @deprecated(reason: "")
  XOF @deprecated(reason: "")
  WST @deprecated(reason: "")
  YER @deprecated(reason: "")
  ZMK @deprecated(reason: "")
  ZWD @deprecated(reason: "")
  TRY @deprecated(reason: "")
  AZM @deprecated(reason: "")
  ROL @deprecated(reason: "")
  TRL @deprecated(reason: "")
  XPF @deprecated(reason: "")
}

"""Defines a customer-entered option."""
input EnteredOptionInput {
  """
  The unique ID for a `CustomizableOptionInterface` object, such as a `CustomizableFieldOption`, `CustomizableFileOption`, or `CustomizableAreaOption` object.
  """
  uid: ID!
  """Text the customer entered."""
  value: String!
}

enum BatchMutationStatus {
  SUCCESS @deprecated(reason: "")
  FAILURE @deprecated(reason: "")
  MIXED_RESULTS @deprecated(reason: "")
}

interface ErrorInterface {
  """The returned error message."""
  message: String!
}

"""Contains an error message when an invalid UID was specified."""
type NoSuchEntityUidError implements ErrorInterface {
  """The returned error message."""
  message: String!
  """The specified invalid unique ID of an object."""
  uid: ID!
}

"""Contains an error message when an internal error occurred."""
type InternalError implements ErrorInterface {
  """The returned error message."""
  message: String!
}

"""Contains information about a store's configuration."""
type StoreConfig {
  """
  Contains scripts that must be included in the HTML before the closing `<body>` tag.
  """
  absolute_footer: String
  """
  Indicates whether guest users can write product reviews. Possible values: 1 (Yes) and 0 (No).
  """
  allow_guests_to_write_product_reviews: String
  """The value of the Allow Gift Messages for Order Items option"""
  allow_items: String
  """The value of the Allow Gift Messages on Order Level option"""
  allow_order: String
  """
  Indicates whether to enable autocomplete on login and forgot password forms.
  """
  autocomplete_on_storefront: Boolean
  """The base currency code."""
  base_currency_code: String
  """
  A fully-qualified URL that is used to create relative links to the `base_url`.
  """
  base_link_url: String
  """The fully-qualified URL that specifies the location of media files."""
  base_media_url: String
  """
  The fully-qualified URL that specifies the location of static view files.
  """
  base_static_url: String
  """The store’s fully-qualified base URL."""
  base_url: String
  """Braintree cc vault status."""
  braintree_cc_vault_active: String
  """The default sort order of the search results list."""
  catalog_default_sort_by: String
  """
  Corresponds to the 'Display Prices In Product Lists' field in the Admin. It indicates how FPT information is displayed on category pages.
  """
  category_fixed_product_tax_display_setting: FixedProductTaxDisplaySettings
  """The suffix applied to category pages, such as `.htm` or `.html`."""
  category_url_suffix: String
  """Indicates whether only specific countries can use this payment method."""
  check_money_order_enable_for_specific_countries: Boolean
  """Indicates whether the Check/Money Order payment method is enabled."""
  check_money_order_enabled: Boolean
  """The name of the party to whom the check must be payable."""
  check_money_order_make_check_payable_to: String
  """
  The maximum order amount required to qualify for the Check/Money Order payment method.
  """
  check_money_order_max_order_total: String
  """
  The minimum order amount required to qualify for the Check/Money Order payment method.
  """
  check_money_order_min_order_total: String
  """
  The status of new orders placed using the Check/Money Order payment method.
  """
  check_money_order_new_order_status: String
  """
  A comma-separated list of specific countries allowed to use the Check/Money Order payment method.
  """
  check_money_order_payment_from_specific_countries: String
  """The full street address or PO Box where the checks are mailed."""
  check_money_order_send_check_to: String
  """
  A number indicating the position of the Check/Money Order payment method in the list of available payment methods during checkout.
  """
  check_money_order_sort_order: Int
  """
  The title of the Check/Money Order payment method displayed on the storefront.
  """
  check_money_order_title: String
  """The name of the CMS page that identifies the home page for the store."""
  cms_home_page: String
  """
  A specific CMS page that displays when cookies are not enabled for the browser.
  """
  cms_no_cookies: String
  """
  A specific CMS page that displays when a 404 'Page Not Found' error occurs.
  """
  cms_no_route: String
  """A code assigned to the store to identify it."""
  code: String @deprecated(reason: "Use `store_code` instead.")
  """
  Indicates whether the `parent` or child (`itself`) thumbnail should be used in the cart for configurable products.
  """
  configurable_thumbnail_source: String
  """The copyright statement that appears at the bottom of each page."""
  copyright: String
  """
  The description that provides a summary of your site for search engine listings. It should not be more than 160 characters in length.
  """
  default_description: String
  """The default display currency code."""
  default_display_currency_code: String
  """
  A series of keywords that describe your store, each separated by a comma.
  """
  default_keywords: String
  """
  The title that appears at the title bar of each page when viewed in a browser.
  """
  default_title: String
  """
  Controls the display of the demo store notice at the top of the page. Options: 0 (No) or 1 (Yes).
  """
  demonotice: Int
  """The landing page that is associated with the base URL."""
  front: String
  """The default number of products per page in Grid View."""
  grid_per_page: Int
  """
  A list of numbers that define how many products can be displayed in Grid View.
  """
  grid_per_page_values: String
  """
  Scripts that must be included in the HTML before the closing `<head>` tag.
  """
  head_includes: String
  """
  The small graphic image (favicon) that appears in the address bar and tab of the browser.
  """
  head_shortcut_icon: String
  """The path to the logo that appears in the header."""
  header_logo_src: String
  """The ID number assigned to the store."""
  id: Int @deprecated(reason: "Use `store_code` instead.")
  """
  Indicates whether the store view has been designated as the default within the store group.
  """
  is_default_store: Boolean
  """
  Indicates whether the store group has been designated as the default within the website.
  """
  is_default_store_group: Boolean
  """The format of the search results list."""
  list_mode: String
  """The default number of products per page in List View."""
  list_per_page: Int
  """
  A list of numbers that define how many products can be displayed in List View.
  """
  list_per_page_values: String
  """The store locale."""
  locale: String
  """The Alt text that is associated with the logo."""
  logo_alt: String
  """The height of the logo image, in pixels."""
  logo_height: Int
  """The width of the logo image, in pixels."""
  logo_width: Int
  """Indicates whether wishlists are enabled (1) or disabled (0)."""
  magento_wishlist_general_is_enabled: String
  """The minimum number of characters required for a valid password."""
  minimum_password_length: String
  """Mollie store config"""
  mollie: MollieStoreConfig
  """
  The default page that displays when a 404 'Page not Found' error occurs.
  """
  no_route: String
  """Payflow Pro vault status."""
  payment_payflowpro_cc_vault_active: String
  """
  Corresponds to the 'Display Prices On Product View Page' field in the Admin. It indicates how FPT information is displayed on product pages.
  """
  product_fixed_product_tax_display_setting: FixedProductTaxDisplaySettings
  """
  Indicates whether product reviews are enabled. Possible values: 1 (Yes) and 0 (No).
  """
  product_reviews_enabled: String
  """The suffix applied to product pages, such as `.htm` or `.html`."""
  product_url_suffix: String
  """
  The number of different character classes (lowercase, uppercase, digits, special characters) required in a password.
  """
  required_character_classes_number: String
  """The ID of the root category."""
  root_category_id: Int @deprecated(reason: "Use `root_category_uid` instead.")
  """The unique ID for a `CategoryInterface` object."""
  root_category_uid: ID
  """
  Corresponds to the 'Display Prices In Sales Modules' field in the Admin. It indicates how FPT information is displayed on cart, checkout, and order pages.
  """
  sales_fixed_product_tax_display_setting: FixedProductTaxDisplaySettings
  """
  A secure fully-qualified URL that is used to create relative links to the `base_url`.
  """
  secure_base_link_url: String
  """
  The secure fully-qualified URL that specifies the location of media files.
  """
  secure_base_media_url: String
  """
  The secure fully-qualified URL that specifies the location of static view files.
  """
  secure_base_static_url: String
  """The store’s fully-qualified secure base URL."""
  secure_base_url: String
  """Email to a Friend configuration."""
  send_friend: SendFriendConfiguration
  """
  Indicates whether a breadcrumb trail appears on all CMS pages in the catalog. 0 (No) or 1 (Yes).
  """
  show_cms_breadcrumbs: Int
  """
  The unique ID of the store view. In the Admin, this is called the Store View Code. When making a GraphQL call, assign this value to the `Store` header to provide the scope.
  """
  store_code: ID
  """
  The unique ID assigned to the store group. In the Admin, this is called the Store Name.
  """
  store_group_code: ID
  """The label assigned to the store group."""
  store_group_name: String
  """The label assigned to the store view."""
  store_name: String
  """The store view sort order."""
  store_sort_order: Int
  """The time zone of the store."""
  timezone: String
  """
  A prefix that appears before the title to create a two- or three-part title.
  """
  title_prefix: String
  """
  The character that separates the category name and subcategory in the browser title bar.
  """
  title_separator: String
  """
  A suffix that appears after the title to create a two- or three-part title.
  """
  title_suffix: String
  """Indicates whether the store code should be used in the URL."""
  use_store_in_url: Boolean
  """The unique ID for the website."""
  website_code: ID
  """The ID number assigned to the website store."""
  website_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  """The label assigned to the website."""
  website_name: String
  """The unit of weight."""
  weight_unit: String
  """
  Text that appears in the header of the page and includes the name of the logged in customer.
  """
  welcome: String
  """Indicates whether only specific countries can use this payment method."""
  zero_subtotal_enable_for_specific_countries: Boolean
  """Indicates whether the Zero Subtotal payment method is enabled."""
  zero_subtotal_enabled: Boolean
  """
  The status of new orders placed using the Zero Subtotal payment method.
  """
  zero_subtotal_new_order_status: String
  """
  When the new order status is 'Processing', this can be set to `authorize_capture` to automatically invoice all items that have a zero balance.
  """
  zero_subtotal_payment_action: String
  """
  A comma-separated list of specific countries allowed to use the Zero Subtotal payment method.
  """
  zero_subtotal_payment_from_specific_countries: String
  """
  A number indicating the position of the Zero Subtotal payment method in the list of available payment methods during checkout.
  """
  zero_subtotal_sort_order: Int
  """
  The title of the Zero Subtotal payment method displayed on the storefront.
  """
  zero_subtotal_title: String
}

"""Contains details about a CMS page."""
type CmsPage implements RoutableInterface {
  """The content of the CMS page in raw HTML."""
  content: String
  """The heading that displays at the top of the CMS page."""
  content_heading: String
  """The ID of a CMS page."""
  identifier: String
  """A brief description of the page for search results listings."""
  meta_description: String
  """A brief description of the page for search results listings."""
  meta_keywords: String
  """
  A page title that is indexed by search engines and appears in search results listings.
  """
  meta_title: String
  """
  The design layout of the page, indicating the number of columns and navigation features used on the page.
  """
  page_layout: String
  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
  """
  redirect_code: Int!
  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String
  """
  The name that appears in the breadcrumb trail navigation and in the browser title bar and tab.
  """
  title: String
  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum
  """
  The URL key of the CMS page, which is often based on the `content_heading`.
  """
  url_key: String
}

"""Contains an array CMS block items."""
type CmsBlocks {
  """An array of CMS blocks."""
  items: [CmsBlock]
}

"""Contains details about a specific CMS block."""
type CmsBlock {
  """The content of the CMS block in raw HTML."""
  content: String
  """The CMS block identifier."""
  identifier: String
  """The title assigned to the CMS block."""
  title: String
}

"""Defines an array of custom attributes."""
type CustomAttributeMetadata {
  """An array of attributes."""
  items: [Attribute]
}

"""Contains details about the attribute, including the code and type."""
type Attribute {
  """
  The unique identifier for an attribute code. This value should be in lowercase letters without spaces.
  """
  attribute_code: String
  """Attribute options list."""
  attribute_options: [AttributeOption]
  """The data type of the attribute."""
  attribute_type: String
  """The type of entity that defines the attribute."""
  entity_type: String
  """The frontend input type of the attribute."""
  input_type: String
  """Details about the storefront properties configured for the attribute."""
  storefront_properties: StorefrontProperties
}

"""Indicates where an attribute can be displayed."""
type StorefrontProperties {
  """
  The relative position of the attribute in the layered navigation block.
  """
  position: Int
  """
  Indicates whether the attribute is filterable with results, without results, or not at all.
  """
  use_in_layered_navigation: UseInLayeredNavigationOptions
  """Indicates whether the attribute is displayed in product listings."""
  use_in_product_listing: Boolean
  """
  Indicates whether the attribute can be used in layered navigation on search results pages.
  """
  use_in_search_results_layered_navigation: Boolean
  """Indicates whether the attribute is displayed on product pages."""
  visible_on_catalog_pages: Boolean
}

"""Defines whether the attribute is filterable in layered navigation."""
enum UseInLayeredNavigationOptions {
  NO @deprecated(reason: "")
  FILTERABLE_WITH_RESULTS @deprecated(reason: "")
  FILTERABLE_NO_RESULT @deprecated(reason: "")
}

"""Defines an attribute option."""
type AttributeOption {
  """The label assigned to the attribute option."""
  label: String
  """The attribute option value."""
  value: String
}

"""
Defines the attribute characteristics to search for the `attribute_code` and `entity_type` to search.
"""
input AttributeInput {
  """
  The unique identifier for an attribute code. This value should be in lowercase letters without spaces.
  """
  attribute_code: String
  """The type of entity that defines the attribute."""
  entity_type: String
}

"""
Deprecated. It should not be used on the storefront. Contains information about a website.
"""
type Website {
  """A code assigned to the website to identify it."""
  code: String @deprecated(reason: "The field should not be used on the storefront.")
  """The default group ID of the website."""
  default_group_id: String @deprecated(reason: "The field should not be used on the storefront.")
  """The ID number assigned to the website."""
  id: Int @deprecated(reason: "The field should not be used on the storefront.")
  """Indicates whether this is the default website."""
  is_default: Boolean @deprecated(reason: "The field should not be used on the storefront.")
  """The website name. Websites use this name to identify it easier."""
  name: String @deprecated(reason: "The field should not be used on the storefront.")
  """The attribute to use for sorting websites."""
  sort_order: Int @deprecated(reason: "The field should not be used on the storefront.")
}

"""Defines details about an individual checkout agreement."""
type CheckoutAgreement {
  """The ID for a checkout agreement."""
  agreement_id: Int!
  """The checkbox text for the checkout agreement."""
  checkbox_text: String!
  """Required. The text of the agreement."""
  content: String!
  """
  The height of the text box where the Terms and Conditions statement appears during checkout.
  """
  content_height: String
  """Indicates whether the `content` text is in HTML format."""
  is_html: Boolean!
  """Indicates whether agreements are accepted automatically or manually."""
  mode: CheckoutAgreementMode!
  """The name given to the condition."""
  name: String!
}

"""Indicates how agreements are accepted."""
enum CheckoutAgreementMode {
  """Conditions are automatically accepted upon checkout."""
  AUTO @deprecated(reason: "")
  """Shoppers must manually accept the conditions to place an order."""
  MANUAL @deprecated(reason: "")
}

"""
Deprecated. Use `ProductPrice` instead. Defines the price of a product as well as any tax-related adjustments.
"""
type Price {
  """
  An array that provides information about tax, weee, or weee_tax adjustments.
  """
  adjustments: [PriceAdjustment] @deprecated(reason: "Use `ProductPrice` instead.")
  """The price of a product plus a three-letter currency code."""
  amount: Money @deprecated(reason: "Use `ProductPrice` instead.")
}

"""
Deprecated. Taxes will be included or excluded in the price. Defines the amount of money to apply as an adjustment, the type of adjustment to apply, and whether the item is included or excluded from the adjustment.
"""
type PriceAdjustment {
  """The amount of the price adjustment and its currency code."""
  amount: Money
  """Indicates whether the adjustment involves tax, weee, or weee_tax."""
  code: PriceAdjustmentCodesEnum @deprecated(reason: "`PriceAdjustment` is deprecated.")
  """
  Indicates whether the entity described by the code attribute is included or excluded from the adjustment.
  """
  description: PriceAdjustmentDescriptionEnum @deprecated(reason: "`PriceAdjustment` is deprecated.")
}

"""`PriceAdjustment.code` is deprecated."""
enum PriceAdjustmentCodesEnum {
  TAX @deprecated(reason: "`PriceAdjustmentCodesEnum` is deprecated. Tax is included or excluded in the price. Tax is not shown separately in Catalog.")
  WEEE @deprecated(reason: "WEEE code is deprecated. Use `fixed_product_taxes.label` instead.")
  WEEE_TAX @deprecated(reason: "Use `fixed_product_taxes` instead.  Tax is included or excluded in price. The tax is not shown separtely in Catalog.")
}

"""
`PriceAdjustmentDescriptionEnum` is deprecated. States whether a price adjustment is included or excluded.
"""
enum PriceAdjustmentDescriptionEnum {
  INCLUDED @deprecated(reason: "")
  EXCLUDED @deprecated(reason: "")
}

"""Defines the price type."""
enum PriceTypeEnum {
  FIXED @deprecated(reason: "")
  PERCENT @deprecated(reason: "")
  DYNAMIC @deprecated(reason: "")
}

"""Defines the customizable date type."""
enum CustomizableDateTypeEnum {
  DATE @deprecated(reason: "")
  DATE_TIME @deprecated(reason: "")
  TIME @deprecated(reason: "")
}

"""
Deprecated. Use `PriceRange` instead. Contains the regular price of an item, as well as its minimum and maximum prices. Only composite products, which include bundle, configurable, and grouped products, can contain a minimum and maximum price.
"""
type ProductPrices {
  """
  The highest possible final price for all the options defined within a composite product. If you are specifying a price range, this would be the `to` value.
  """
  maximalPrice: Price @deprecated(reason: "Use `PriceRange.maximum_price` instead.")
  """
  The lowest possible final price for all the options defined within a composite product. If you are specifying a price range, this would be the `from` value.
  """
  minimalPrice: Price @deprecated(reason: "Use `PriceRange.minimum_price` instead.")
  """The base price of a product."""
  regularPrice: Price @deprecated(reason: "Use `regular_price` from `PriceRange.minimum_price` or `PriceRange.maximum_price` instead.")
}

"""
Contains the price range for a product. If the product has a single price, the minimum and maximum price will be the same.
"""
type PriceRange {
  """The highest possible price for the product."""
  maximum_price: ProductPrice
  """The lowest possible price for the product."""
  minimum_price: ProductPrice!
}

"""Represents a product price."""
type ProductPrice {
  """
  The price discount. Represents the difference between the regular and final price.
  """
  discount: ProductDiscount
  """The final price of the product after applying discounts."""
  final_price: Money!
  """
  An array of the multiple Fixed Product Taxes that can be applied to a product price.
  """
  fixed_product_taxes: [FixedProductTax]
  """The regular price of the product."""
  regular_price: Money!
}

"""Contains the discount applied to a product price."""
type ProductDiscount {
  """The actual value of the discount."""
  amount_off: Float
  """The discount expressed a percentage."""
  percent_off: Float
}

"""An implementation of `ProductLinksInterface`."""
type ProductLinks implements ProductLinksInterface {
  """One of related, associated, upsell, or crosssell."""
  link_type: String
  """The SKU of the linked product."""
  linked_product_sku: String
  """
  The type of linked product (simple, virtual, bundle, downloadable, grouped, configurable).
  """
  linked_product_type: String
  """The position within the list of product links."""
  position: Int
  """The identifier of the linked product."""
  sku: String
}

"""
Contains information about linked products, including the link type and product type of each item.
"""
interface ProductLinksInterface {
  """One of related, associated, upsell, or crosssell."""
  link_type: String
  """The SKU of the linked product."""
  linked_product_sku: String
  """
  The type of linked product (simple, virtual, bundle, downloadable, grouped, configurable).
  """
  linked_product_type: String
  """The position within the list of product links."""
  position: Int
  """The identifier of the linked product."""
  sku: String
}

"""Contains fields that are common to all types of products."""
interface ProductInterface {
  activity: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  brand: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """
  The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled.
  """
  canonical_url: String
  """The categories assigned to a product."""
  categories: [CategoryInterface]
  category_gear: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  climate: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  collar: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  colors: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  compatible_phones: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The product's country of origin."""
  country_of_manufacture: String
  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Crosssell Products"""
  crosssell_products: [ProductInterface]
  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue
  dominant_color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  eco_collection: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  erin_recommends: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  features_bags: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  format: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  gender: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """Indicates whether a gift message is available."""
  gift_message_available: String
  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")
  """The relative path to the main image on the product page."""
  image: ProductImage
  """A number representing the product's manufacturer."""
  manufacturer: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  material: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of media gallery objects."""
  media_gallery: [MediaGalleryInterface]
  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use `media_gallery` instead.")
  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String
  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String
  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  """The product name. Customers use this name to identify the product."""
  name: String
  new: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String
  """The end date for new product listings."""
  new_to_date: String
  """Product stock only x left count"""
  only_x_left_in_stock: Float
  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String
  pattern: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  performance_fabric: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """Indicates the price of an item."""
  price: ProductPrices @deprecated(reason: "Use `price_range` for product price information.")
  """The range of prices for the product"""
  price_range: PriceRange!
  """An array of `TierPrice` objects."""
  price_tiers: [TierPrice]
  print_art: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_holiday: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_labels: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_landmarks: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_landscape: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_mood: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_pattern_swatch: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_type: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of `ProductLinks` objects."""
  product_links: [ProductLinksInterface]
  """The average of all the ratings given to the product."""
  rating_summary: Float!
  """An array of products to be displayed in a Related Products block."""
  related_products: [ProductInterface]
  """The total count of all the reviews given to the product."""
  review_count: Int!
  """The list of products reviews."""
  reviews(
    """The maximum number of results to return at once. The default is 20."""
    pageSize: Int = 20
    """The page of results to return. The default is 1."""
    currentPage: Int = 1
  ): ProductReviews!
  sale: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  size: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String
  sleeve: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage
  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The discounted price of the product."""
  special_price: Float
  """The end date for a product with a special price."""
  special_to_date: String
  """Stock status of the product"""
  stock_status: ProductStockStatus
  strap_bags: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  style_bags: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  style_bottom: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  style_general: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The file name of a swatch image."""
  swatch_image: String
  th_test_attribute: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage
  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use `__typename` instead.")
  """The unique ID for a `ProductInterface` object."""
  uid: ID!
  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Upsell Products"""
  upsell_products: [ProductInterface]
  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")
  """URL rewrites list"""
  url_rewrites: [UrlRewrite]
  """The part of the product URL that is appended after the url key"""
  url_suffix: String
  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
}

"""Contains attributes specific to tangible products."""
interface PhysicalProductInterface {
  """The weight of the item, in units defined by the store."""
  weight: Float
}

"""
Contains information about a text area that is defined as part of a customizable option.
"""
type CustomizableAreaOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """The Stock Keeping Unit of the base product."""
  product_sku: String
  """Indicates whether the option is required."""
  required: Boolean
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
  """An object that defines a text area."""
  value: CustomizableAreaValue
}

"""
Defines the price and sku of a product whose page contains a customized text area.
"""
type CustomizableAreaValue {
  """
  The maximum number of characters that can be entered for this customizable option.
  """
  max_characters: Int
  """The price assigned to this option."""
  price: Float
  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum
  """The Stock Keeping Unit for this option."""
  sku: String
  """The unique ID for a `CustomizableAreaValue` object."""
  uid: ID!
}

"""Contains the hierarchy of categories."""
type CategoryTree implements CategoryInterface & RoutableInterface {
  available_sort_by: [String]
  """An array of breadcrumb items."""
  breadcrumbs: [Breadcrumb]
  """
  The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Categories' is enabled.
  """
  canonical_url: String
  """A tree of child categories."""
  children: [CategoryTree]
  children_count: String
  """Contains a category CMS block."""
  cms_block: CmsBlock
  """The timestamp indicating when the category was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  custom_layout_update_file: String
  """The attribute to use for sorting."""
  default_sort_by: String
  """An optional description of the category."""
  description: String
  display_mode: String
  filter_price_range: Float
  """An ID that uniquely identifies the category."""
  id: Int @deprecated(reason: "Use `uid` instead.")
  image: String
  include_in_menu: Int
  is_anchor: Int
  landing_page: Int
  """The depth of the category within the tree."""
  level: Int
  meta_description: String
  meta_keywords: String
  meta_title: String
  """The display name of the category."""
  name: String
  """The full category path."""
  path: String
  """The category path within the store."""
  path_in_store: String
  """
  The position of the category relative to other categories at the same level in tree.
  """
  position: Int
  """
  The number of products in the category that are marked as visible. By default, in complex products, parent products are visible, but their child products are not.
  """
  product_count: Int
  """The list of products assigned to the category."""
  products(
    """
    The maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20
    """The page of results to return. The default value is 1."""
    currentPage: Int = 1
    """
    The attributes to sort on, and whether to return the results in ascending or descending order.
    """
    sort: ProductAttributeSortInput
  ): CategoryProducts
  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
  """
  redirect_code: Int!
  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String
  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum
  """The unique ID for a `CategoryInterface` object."""
  uid: ID!
  """The timestamp indicating when the category was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """The URL key assigned to the category."""
  url_key: String
  """The URL path assigned to the category."""
  url_path: String
  """The part of the category URL that is appended after the url key"""
  url_suffix: String
}

"""
Contains a collection of `CategoryTree` objects and pagination information.
"""
type CategoryResult {
  """A list of categories that match the filter criteria."""
  items: [CategoryTree]
  """
  An object that includes the `page_info` and `currentPage` values specified in the query.
  """
  page_info: SearchResultPageInfo
  """The total number of categories that match the criteria."""
  total_count: Int
}

"""
Contains information about a date picker that is defined as part of a customizable option.
"""
type CustomizableDateOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """The Stock Keeping Unit of the base product."""
  product_sku: String
  """Indicates whether the option is required."""
  required: Boolean
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
  """An object that defines a date field in a customizable option."""
  value: CustomizableDateValue
}

"""
Defines the price and sku of a product whose page contains a customized date picker.
"""
type CustomizableDateValue {
  """The price assigned to this option."""
  price: Float
  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum
  """The Stock Keeping Unit for this option."""
  sku: String
  """DATE, DATE_TIME or TIME"""
  type: CustomizableDateTypeEnum
  """The unique ID for a `CustomizableDateValue` object."""
  uid: ID!
}

"""
Contains information about a drop down menu that is defined as part of a customizable option.
"""
type CustomizableDropDownOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """Indicates whether the option is required."""
  required: Boolean
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
  """An array that defines the set of options for a drop down menu."""
  value: [CustomizableDropDownValue]
}

"""
Defines the price and sku of a product whose page contains a customized drop down menu.
"""
type CustomizableDropDownValue {
  """The ID assigned to the value."""
  option_type_id: Int
  """The price assigned to this option."""
  price: Float
  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum
  """The Stock Keeping Unit for this option."""
  sku: String
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableDropDownValue` object."""
  uid: ID!
}

"""
Contains information about a multiselect that is defined as part of a customizable option.
"""
type CustomizableMultipleOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """Indicates whether the option is required."""
  required: Boolean
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
  """An array that defines the set of options for a multiselect."""
  value: [CustomizableMultipleValue]
}

"""
Defines the price and sku of a product whose page contains a customized multiselect.
"""
type CustomizableMultipleValue {
  """The ID assigned to the value."""
  option_type_id: Int
  """The price assigned to this option."""
  price: Float
  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum
  """The Stock Keeping Unit for this option."""
  sku: String
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableMultipleValue` object."""
  uid: ID!
}

"""
Contains information about a text field that is defined as part of a customizable option.
"""
type CustomizableFieldOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """The Stock Keeping Unit of the base product."""
  product_sku: String
  """Indicates whether the option is required."""
  required: Boolean
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
  """An object that defines a text field."""
  value: CustomizableFieldValue
}

"""
Defines the price and sku of a product whose page contains a customized text field.
"""
type CustomizableFieldValue {
  """
  The maximum number of characters that can be entered for this customizable option.
  """
  max_characters: Int
  """The price of the custom value."""
  price: Float
  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum
  """The Stock Keeping Unit for this option."""
  sku: String
  """The unique ID for a `CustomizableFieldValue` object."""
  uid: ID!
}

"""
Contains information about a file picker that is defined as part of a customizable option.
"""
type CustomizableFileOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """The Stock Keeping Unit of the base product."""
  product_sku: String
  """Indicates whether the option is required."""
  required: Boolean
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
  """An object that defines a file value."""
  value: CustomizableFileValue
}

"""
Defines the price and sku of a product whose page contains a customized file picker.
"""
type CustomizableFileValue {
  """The file extension to accept."""
  file_extension: String
  """The maximum width of an image."""
  image_size_x: Int
  """The maximum height of an image."""
  image_size_y: Int
  """The price assigned to this option."""
  price: Float
  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum
  """The Stock Keeping Unit for this option."""
  sku: String
  """The unique ID for a `CustomizableFileValue` object."""
  uid: ID!
}

"""Contains basic information about a product image or video."""
interface MediaGalleryInterface {
  """Indicates whether the image is hidden from view."""
  disabled: Boolean
  """The label of the product image or video."""
  label: String
  """The media item's position after it has been sorted."""
  position: Int
  """The URL of the product image or video."""
  url: String
}

"""Contains product image information, including the image URL and label."""
type ProductImage implements MediaGalleryInterface {
  """Indicates whether the image is hidden from view."""
  disabled: Boolean
  """The label of the product image or video."""
  label: String
  """The media item's position after it has been sorted."""
  position: Int
  """The URL of the product image or video."""
  url: String
}

"""Contains information about a product video."""
type ProductVideo implements MediaGalleryInterface {
  """Indicates whether the image is hidden from view."""
  disabled: Boolean
  """The label of the product image or video."""
  label: String
  """The media item's position after it has been sorted."""
  position: Int
  """The URL of the product image or video."""
  url: String
  """Contains a `ProductMediaGalleryEntriesVideoContent` object."""
  video_content: ProductMediaGalleryEntriesVideoContent
}

"""
Contains basic information about a customizable option. It can be implemented by several types of configurable options.
"""
interface CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """Indicates whether the option is required."""
  required: Boolean
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
}

"""Contains information about customizable product options."""
interface CustomizableProductInterface {
  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]
}

"""
Contains the full set of attributes that can be returned in a category search.
"""
interface CategoryInterface {
  available_sort_by: [String]
  """An array of breadcrumb items."""
  breadcrumbs: [Breadcrumb]
  """
  The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Categories' is enabled.
  """
  canonical_url: String
  children_count: String
  """Contains a category CMS block."""
  cms_block: CmsBlock
  """The timestamp indicating when the category was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  custom_layout_update_file: String
  """The attribute to use for sorting."""
  default_sort_by: String
  """An optional description of the category."""
  description: String
  display_mode: String
  filter_price_range: Float
  """An ID that uniquely identifies the category."""
  id: Int @deprecated(reason: "Use `uid` instead.")
  image: String
  include_in_menu: Int
  is_anchor: Int
  landing_page: Int
  """The depth of the category within the tree."""
  level: Int
  meta_description: String
  meta_keywords: String
  meta_title: String
  """The display name of the category."""
  name: String
  """The full category path."""
  path: String
  """The category path within the store."""
  path_in_store: String
  """
  The position of the category relative to other categories at the same level in tree.
  """
  position: Int
  """
  The number of products in the category that are marked as visible. By default, in complex products, parent products are visible, but their child products are not.
  """
  product_count: Int
  """The list of products assigned to the category."""
  products(
    """
    The maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20
    """The page of results to return. The default value is 1."""
    currentPage: Int = 1
    """
    The attributes to sort on, and whether to return the results in ascending or descending order.
    """
    sort: ProductAttributeSortInput
  ): CategoryProducts
  """The unique ID for a `CategoryInterface` object."""
  uid: ID!
  """The timestamp indicating when the category was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """The URL key assigned to the category."""
  url_key: String
  """The URL path assigned to the category."""
  url_path: String
  """The part of the category URL that is appended after the url key"""
  url_suffix: String
}

"""
Contains details about an individual category that comprises a breadcrumb.
"""
type Breadcrumb {
  """The ID of the category."""
  category_id: Int @deprecated(reason: "Use `category_uid` instead.")
  """The category level."""
  category_level: Int
  """The display name of the category."""
  category_name: String
  """The unique ID for a `Breadcrumb` object."""
  category_uid: ID!
  """The URL key of the category."""
  category_url_key: String
  """The URL path of the category."""
  category_url_path: String
}

"""
Contains information about a set of radio buttons that are defined as part of a customizable option.
"""
type CustomizableRadioOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """Indicates whether the option is required."""
  required: Boolean
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
  """An array that defines a set of radio buttons."""
  value: [CustomizableRadioValue]
}

"""
Defines the price and sku of a product whose page contains a customized set of radio buttons.
"""
type CustomizableRadioValue {
  """The ID assigned to the value."""
  option_type_id: Int
  """The price assigned to this option."""
  price: Float
  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum
  """The Stock Keeping Unit for this option."""
  sku: String
  """The order in which the radio button is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableRadioValue` object."""
  uid: ID!
}

"""
Contains information about a set of checkbox values that are defined as part of a customizable option.
"""
type CustomizableCheckboxOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """Indicates whether the option is required."""
  required: Boolean
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
  """An array that defines a set of checkbox values."""
  value: [CustomizableCheckboxValue]
}

"""
Defines the price and sku of a product whose page contains a customized set of checkbox values.
"""
type CustomizableCheckboxValue {
  """The ID assigned to the value."""
  option_type_id: Int
  """The price assigned to this option."""
  price: Float
  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum
  """The Stock Keeping Unit for this option."""
  sku: String
  """The order in which the checkbox value is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableCheckboxValue` object."""
  uid: ID!
}

"""
Defines a virtual product, which is a non-tangible product that does not require shipping and is not kept in inventory.
"""
type VirtualProduct implements ProductInterface & RoutableInterface & CustomizableProductInterface {
  activity: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  brand: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """
  The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled.
  """
  canonical_url: String
  """The categories assigned to a product."""
  categories: [CategoryInterface]
  category_gear: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  climate: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  collar: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  colors: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  compatible_phones: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The product's country of origin."""
  country_of_manufacture: String
  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Crosssell Products"""
  crosssell_products: [ProductInterface]
  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue
  dominant_color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  eco_collection: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  erin_recommends: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  features_bags: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  format: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  gender: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """Indicates whether a gift message is available."""
  gift_message_available: String
  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")
  """The relative path to the main image on the product page."""
  image: ProductImage
  """A number representing the product's manufacturer."""
  manufacturer: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  material: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of media gallery objects."""
  media_gallery: [MediaGalleryInterface]
  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use `media_gallery` instead.")
  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String
  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String
  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  """The product name. Customers use this name to identify the product."""
  name: String
  new: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String
  """The end date for new product listings."""
  new_to_date: String
  """Product stock only x left count"""
  only_x_left_in_stock: Float
  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]
  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String
  pattern: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  performance_fabric: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """Indicates the price of an item."""
  price: ProductPrices @deprecated(reason: "Use `price_range` for product price information.")
  """The range of prices for the product"""
  price_range: PriceRange!
  """An array of `TierPrice` objects."""
  price_tiers: [TierPrice]
  print_art: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_holiday: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_labels: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_landmarks: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_landscape: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_mood: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_pattern_swatch: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_type: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of `ProductLinks` objects."""
  product_links: [ProductLinksInterface]
  """The average of all the ratings given to the product."""
  rating_summary: Float!
  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
  """
  redirect_code: Int!
  """An array of products to be displayed in a Related Products block."""
  related_products: [ProductInterface]
  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String
  """The total count of all the reviews given to the product."""
  review_count: Int!
  """The list of products reviews."""
  reviews(
    """The maximum number of results to return at once. The default is 20."""
    pageSize: Int = 20
    """The page of results to return. The default is 1."""
    currentPage: Int = 1
  ): ProductReviews!
  sale: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  size: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String
  sleeve: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage
  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The discounted price of the product."""
  special_price: Float
  """The end date for a product with a special price."""
  special_to_date: String
  """Stock status of the product"""
  stock_status: ProductStockStatus
  strap_bags: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  style_bags: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  style_bottom: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  style_general: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The file name of a swatch image."""
  swatch_image: String
  th_test_attribute: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage
  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum
  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use `__typename` instead.")
  """The unique ID for a `ProductInterface` object."""
  uid: ID!
  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Upsell Products"""
  upsell_products: [ProductInterface]
  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")
  """URL rewrites list"""
  url_rewrites: [UrlRewrite]
  """The part of the product URL that is appended after the url key"""
  url_suffix: String
  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
}

"""
Defines a simple product, which is tangible and is usually sold in single units or in fixed quantities.
"""
type SimpleProduct implements ProductInterface & RoutableInterface & PhysicalProductInterface & CustomizableProductInterface {
  activity: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  brand: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """
  The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled.
  """
  canonical_url: String
  """The categories assigned to a product."""
  categories: [CategoryInterface]
  category_gear: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  climate: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  collar: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  colors: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  compatible_phones: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The product's country of origin."""
  country_of_manufacture: String
  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Crosssell Products"""
  crosssell_products: [ProductInterface]
  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue
  dominant_color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  eco_collection: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  erin_recommends: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  features_bags: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  format: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  gender: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """Indicates whether a gift message is available."""
  gift_message_available: String
  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")
  """The relative path to the main image on the product page."""
  image: ProductImage
  """A number representing the product's manufacturer."""
  manufacturer: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  material: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of media gallery objects."""
  media_gallery: [MediaGalleryInterface]
  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use `media_gallery` instead.")
  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String
  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String
  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  """The product name. Customers use this name to identify the product."""
  name: String
  new: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String
  """The end date for new product listings."""
  new_to_date: String
  """Product stock only x left count"""
  only_x_left_in_stock: Float
  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]
  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String
  pattern: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  performance_fabric: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """Indicates the price of an item."""
  price: ProductPrices @deprecated(reason: "Use `price_range` for product price information.")
  """The range of prices for the product"""
  price_range: PriceRange!
  """An array of `TierPrice` objects."""
  price_tiers: [TierPrice]
  print_art: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_holiday: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_labels: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_landmarks: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_landscape: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_mood: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_pattern_swatch: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_type: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of `ProductLinks` objects."""
  product_links: [ProductLinksInterface]
  """The average of all the ratings given to the product."""
  rating_summary: Float!
  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
  """
  redirect_code: Int!
  """An array of products to be displayed in a Related Products block."""
  related_products: [ProductInterface]
  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String
  """The total count of all the reviews given to the product."""
  review_count: Int!
  """The list of products reviews."""
  reviews(
    """The maximum number of results to return at once. The default is 20."""
    pageSize: Int = 20
    """The page of results to return. The default is 1."""
    currentPage: Int = 1
  ): ProductReviews!
  sale: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  size: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String
  sleeve: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage
  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The discounted price of the product."""
  special_price: Float
  """The end date for a product with a special price."""
  special_to_date: String
  """Stock status of the product"""
  stock_status: ProductStockStatus
  strap_bags: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  style_bags: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  style_bottom: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  style_general: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The file name of a swatch image."""
  swatch_image: String
  th_test_attribute: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage
  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum
  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use `__typename` instead.")
  """The unique ID for a `ProductInterface` object."""
  uid: ID!
  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Upsell Products"""
  upsell_products: [ProductInterface]
  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")
  """URL rewrites list"""
  url_rewrites: [UrlRewrite]
  """The part of the product URL that is appended after the url key"""
  url_suffix: String
  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
  """The weight of the item, in units defined by the store."""
  weight: Float
}

"""Contains the results of a `products` query."""
type Products {
  """
  A bucket that contains the attribute code and label for each filterable option.
  """
  aggregations(filter: AggregationsFilterInput): [Aggregation]
  """Layered navigation filters array."""
  filters: [LayerFilter] @deprecated(reason: "Use `aggregations` instead.")
  """An array of products that match the specified search criteria."""
  items: [ProductInterface]
  """
  An object that includes the page_info and currentPage values specified in the query.
  """
  page_info: SearchResultPageInfo
  """
  An object that includes the default sort field and all available sort fields.
  """
  sort_fields: SortFields
  """
  An array of search suggestions for case when search query have no results.
  """
  suggestions: [SearchSuggestion]
  """
  The number of products that are marked as visible. By default, in complex products, parent products are visible, but their child products are not.
  """
  total_count: Int
}

"""
An input object that specifies the filters used in product aggregations.
"""
input AggregationsFilterInput {
  """Filter category aggregations in layered navigation."""
  category: AggregationsCategoryFilterInput
}

"""Filter category aggregations in layered navigation."""
input AggregationsCategoryFilterInput {
  """
  Indicates whether to include only direct subcategories or all children categories at all levels.
  """
  includeDirectChildrenOnly: Boolean
}

"""Contains details about the products assigned to a category."""
type CategoryProducts {
  """An array of products that are assigned to the category."""
  items: [ProductInterface]
  """Pagination metadata."""
  page_info: SearchResultPageInfo
  """
  The number of products in the category that are marked as visible. By default, in complex products, parent products are visible, but their child products are not.
  """
  total_count: Int
}

"""
Defines the filters to be used in the search. A filter contains at least one attribute, a comparison operator, and the value that is being searched for.
"""
input ProductAttributeFilterInput {
  """Attribute label: Activity"""
  activity: FilterEqualTypeInput
  """Attribute label: Brand"""
  brand: FilterEqualTypeInput
  """Attribute label: Category Gear"""
  category_gear: FilterEqualTypeInput
  """Deprecated: use `category_uid` to filter product by category ID."""
  category_id: FilterEqualTypeInput
  """Filter product by the unique ID for a `CategoryInterface` object."""
  category_uid: FilterEqualTypeInput
  """Attribute label: Climate"""
  climate: FilterEqualTypeInput
  """Attribute label: Collar"""
  collar: FilterEqualTypeInput
  """Attribute label: Color"""
  color: FilterEqualTypeInput
  """Attribute label: Colors"""
  colors: FilterEqualTypeInput
  """Attribute label: Compatible Phones"""
  compatible_phones: FilterEqualTypeInput
  """Attribute label: Debug: colors"""
  debug_colors: FilterMatchTypeInput
  """Attribute label: Debug: labels"""
  debug_labels: FilterMatchTypeInput
  """Attribute label: Debug: landmarks"""
  debug_landmarks: FilterMatchTypeInput
  """Attribute label: Description"""
  description: FilterMatchTypeInput
  """Attribute label: Dominant color"""
  dominant_color: FilterEqualTypeInput
  """Attribute label: Eco Collection"""
  eco_collection: FilterEqualTypeInput
  """Attribute label: Erin Recommends"""
  erin_recommends: FilterEqualTypeInput
  """Attribute label: Features"""
  features_bags: FilterEqualTypeInput
  """Attribute label: Format"""
  format: FilterEqualTypeInput
  """Attribute label: Gender"""
  gender: FilterEqualTypeInput
  """Attribute label: Material"""
  material: FilterEqualTypeInput
  """Attribute label: Product Name"""
  name: FilterMatchTypeInput
  """Attribute label: New"""
  new: FilterEqualTypeInput
  """Attribute label: Pattern"""
  pattern: FilterEqualTypeInput
  """Attribute label: Performance Fabric"""
  performance_fabric: FilterEqualTypeInput
  """Attribute label: Price"""
  price: FilterRangeTypeInput
  """Attribute label: Art"""
  print_art: FilterEqualTypeInput
  """Attribute label: Holiday"""
  print_holiday: FilterEqualTypeInput
  """Attribute label: Search Labels"""
  print_labels: FilterEqualTypeInput
  """Attribute label: Search Landmarks"""
  print_landmarks: FilterEqualTypeInput
  """Attribute label: Landscape"""
  print_landscape: FilterEqualTypeInput
  """Attribute label: Mood"""
  print_mood: FilterEqualTypeInput
  """Attribute label: Type"""
  print_type: FilterEqualTypeInput
  """Attribute label: Sale"""
  sale: FilterEqualTypeInput
  """Attribute label: Short Description"""
  short_description: FilterMatchTypeInput
  """Attribute label: Size"""
  size: FilterEqualTypeInput
  """Attribute label: SKU"""
  sku: FilterEqualTypeInput
  """Attribute label: Sleeve"""
  sleeve: FilterEqualTypeInput
  """Attribute label: Special Price"""
  special_price: FilterRangeTypeInput
  """Attribute label: Strap/Handle"""
  strap_bags: FilterEqualTypeInput
  """Attribute label: Style Bags"""
  style_bags: FilterEqualTypeInput
  """Attribute label: Style Bottom"""
  style_bottom: FilterEqualTypeInput
  """Attribute label: Style General"""
  style_general: FilterEqualTypeInput
  """The part of the URL that identifies the product"""
  url_key: FilterEqualTypeInput
}

"""
Defines the filters to be used in the search. A filter contains at least one attribute, a comparison operator, and the value that is being searched for.
"""
input CategoryFilterInput {
  """Filter by the unique category ID for a `CategoryInterface` object."""
  category_uid: FilterEqualTypeInput
  """
  Deprecated: use 'category_uid' to filter uniquely identifiers of categories.
  """
  ids: FilterEqualTypeInput
  """Filter by the display name of the category."""
  name: FilterMatchTypeInput
  """
  Filter by the unique parent category ID for a `CategoryInterface` object.
  """
  parent_category_uid: FilterEqualTypeInput
  """
  Filter by the unique parent category ID for a `CategoryInterface` object.
  """
  parent_id: FilterEqualTypeInput
  """Filter by the part of the URL that identifies the category."""
  url_key: FilterEqualTypeInput
  """Filter by the URL path for the category."""
  url_path: FilterEqualTypeInput
}

"""
ProductFilterInput is deprecated, use @ProductAttributeFilterInput instead. ProductFilterInput defines the filters to be used in the search. A filter contains at least one attribute, a comparison operator, and the value that is being searched for.
"""
input ProductFilterInput {
  """The category ID the product belongs to."""
  category_id: FilterTypeInput
  """The product's country of origin."""
  country_of_manufacture: FilterTypeInput
  """The timestamp indicating when the product was created."""
  created_at: FilterTypeInput
  """The name of a custom layout."""
  custom_layout: FilterTypeInput
  """XML code that is applied as a layout update to the product page."""
  custom_layout_update: FilterTypeInput
  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: FilterTypeInput
  """Indicates whether a gift message is available."""
  gift_message_available: FilterTypeInput
  """
  Indicates whether additional attributes have been created for the product.
  """
  has_options: FilterTypeInput
  """The relative path to the main image on the product page."""
  image: FilterTypeInput
  """The label assigned to a product image."""
  image_label: FilterTypeInput
  """A number representing the product's manufacturer."""
  manufacturer: FilterTypeInput
  """
  The numeric maximal price of the product. Do not include the currency code.
  """
  max_price: FilterTypeInput
  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: FilterTypeInput
  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: FilterTypeInput
  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: FilterTypeInput
  """
  The numeric minimal price of the product. Do not include the currency code.
  """
  min_price: FilterTypeInput
  """The product name. Customers use this name to identify the product."""
  name: FilterTypeInput
  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  news_from_date: FilterTypeInput
  """The end date for new product listings."""
  news_to_date: FilterTypeInput
  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: FilterTypeInput
  """The keyword required to perform a logical OR comparison."""
  or: ProductFilterInput
  """The price of an item."""
  price: FilterTypeInput
  """Indicates whether the product has required options."""
  required_options: FilterTypeInput
  """A short description of the product. Its use depends on the theme."""
  short_description: FilterTypeInput
  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: FilterTypeInput
  """The relative path to the small image, which is used on catalog pages."""
  small_image: FilterTypeInput
  """The label assigned to a product's small image."""
  small_image_label: FilterTypeInput
  """The beginning date that a product has a special price."""
  special_from_date: FilterTypeInput
  """The discounted price of the product. Do not include the currency code."""
  special_price: FilterTypeInput
  """The end date that a product has a special price."""
  special_to_date: FilterTypeInput
  """The file name of a swatch image."""
  swatch_image: FilterTypeInput
  """The relative path to the product's thumbnail image."""
  thumbnail: FilterTypeInput
  """The label assigned to a product's thumbnail image."""
  thumbnail_label: FilterTypeInput
  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: FilterTypeInput
  """The timestamp indicating when the product was updated."""
  updated_at: FilterTypeInput
  """The part of the URL that identifies the product"""
  url_key: FilterTypeInput
  url_path: FilterTypeInput
  """The weight of the item, in units defined by the store."""
  weight: FilterTypeInput
}

"""
Contains an image in base64 format and basic information about the image.
"""
type ProductMediaGalleryEntriesContent {
  """The image in base64 format."""
  base64_encoded_data: String
  """The file name of the image."""
  name: String
  """The MIME type of the file, such as image/png."""
  type: String
}

"""Contains a link to a video file and basic information about the video."""
type ProductMediaGalleryEntriesVideoContent {
  """Must be external-video."""
  media_type: String
  """A description of the video."""
  video_description: String
  """Optional data about the video."""
  video_metadata: String
  """Describes the video source."""
  video_provider: String
  """The title of the video."""
  video_title: String
  """The URL to the video."""
  video_url: String
}

"""
Deprecated. Use `ProductAttributeSortInput` instead. Specifies the attribute to use for sorting search results and indicates whether the results are sorted in ascending or descending order.
"""
input ProductSortInput {
  """The product's country of origin."""
  country_of_manufacture: SortEnum
  """The timestamp indicating when the product was created."""
  created_at: SortEnum
  """The name of a custom layout."""
  custom_layout: SortEnum
  """XML code that is applied as a layout update to the product page."""
  custom_layout_update: SortEnum
  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: SortEnum
  """Indicates whether a gift message is available."""
  gift_message_available: SortEnum
  """
  Indicates whether additional attributes have been created for the product.
  """
  has_options: SortEnum
  """The relative path to the main image on the product page."""
  image: SortEnum
  """The label assigned to a product image."""
  image_label: SortEnum
  """A number representing the product's manufacturer."""
  manufacturer: SortEnum
  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: SortEnum
  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: SortEnum
  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: SortEnum
  """The product name. Customers use this name to identify the product."""
  name: SortEnum
  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  news_from_date: SortEnum
  """The end date for new product listings."""
  news_to_date: SortEnum
  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: SortEnum
  """The price of the item."""
  price: SortEnum
  """Indicates whether the product has required options."""
  required_options: SortEnum
  """A short description of the product. Its use depends on the theme."""
  short_description: SortEnum
  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: SortEnum
  """The relative path to the small image, which is used on catalog pages."""
  small_image: SortEnum
  """The label assigned to a product's small image."""
  small_image_label: SortEnum
  """The beginning date that a product has a special price."""
  special_from_date: SortEnum
  """The discounted price of the product."""
  special_price: SortEnum
  """The end date that a product has a special price."""
  special_to_date: SortEnum
  """Indicates the criteria to sort swatches."""
  swatch_image: SortEnum
  """The relative path to the product's thumbnail image."""
  thumbnail: SortEnum
  """The label assigned to a product's thumbnail image."""
  thumbnail_label: SortEnum
  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: SortEnum
  """The timestamp indicating when the product was updated."""
  updated_at: SortEnum
  """The part of the URL that identifies the product"""
  url_key: SortEnum
  url_path: SortEnum
  """The weight of the item, in units defined by the store."""
  weight: SortEnum
}

"""
Specifies the attribute to use for sorting search results and indicates whether the results are sorted in ascending or descending order. It's possible to sort products using searchable attributes with enabled 'Use in Filter Options' option
"""
input ProductAttributeSortInput {
  """Attribute label: Product Name"""
  name: SortEnum
  """Sort by the position assigned to each product."""
  position: SortEnum
  """Attribute label: Price"""
  price: SortEnum
  """Sort by the search relevance score (default)."""
  relevance: SortEnum
}

"""
Defines characteristics about images and videos associated with a specific product.
"""
type MediaGalleryEntry {
  """Details about the content of the media gallery item."""
  content: ProductMediaGalleryEntriesContent
  """Indicates whether the image is hidden from view."""
  disabled: Boolean
  """The path of the image on the server."""
  file: String
  """The identifier assigned to the object."""
  id: Int @deprecated(reason: "Use `uid` instead.")
  """
  The alt text displayed on the storefront when the user points to the image.
  """
  label: String
  """Either `image` or `video`."""
  media_type: String
  """The media item's position after it has been sorted."""
  position: Int
  """
  Array of image types. It can have the following values: image, small_image, thumbnail.
  """
  types: [String]
  """The unique ID for a `MediaGalleryEntry` object."""
  uid: ID!
  """Details about the content of a video item."""
  video_content: ProductMediaGalleryEntriesVideoContent
}

"""Contains information for rendering layered navigation."""
type LayerFilter {
  """An array of filter items."""
  filter_items: [LayerFilterItemInterface] @deprecated(reason: "Use `Aggregation.options` instead.")
  """The count of filter items in filter group."""
  filter_items_count: Int @deprecated(reason: "Use `Aggregation.count` instead.")
  """The name of a layered navigation filter."""
  name: String @deprecated(reason: "Use `Aggregation.label` instead.")
  """The request variable name for a filter query."""
  request_var: String @deprecated(reason: "Use `Aggregation.attribute_code` instead.")
}

interface LayerFilterItemInterface {
  """The count of items per filter."""
  items_count: Int @deprecated(reason: "Use `AggregationOption.count` instead.")
  """The label for a filter."""
  label: String @deprecated(reason: "Use `AggregationOption.label` instead.")
  """The value of a filter request variable to be used in query."""
  value_string: String @deprecated(reason: "Use `AggregationOption.value` instead.")
}

type LayerFilterItem implements LayerFilterItemInterface {
  """The count of items per filter."""
  items_count: Int @deprecated(reason: "Use `AggregationOption.count` instead.")
  """The label for a filter."""
  label: String @deprecated(reason: "Use `AggregationOption.label` instead.")
  """The value of a filter request variable to be used in query."""
  value_string: String @deprecated(reason: "Use `AggregationOption.value` instead.")
}

"""
Contains information for each filterable option (such as price, category `UID`, and custom attributes).
"""
type Aggregation {
  """Attribute code of the aggregation group."""
  attribute_code: String!
  """The number of options in the aggregation group."""
  count: Int
  """The aggregation display name."""
  label: String
  """Array of options for the aggregation."""
  options: [AggregationOption]
  """The relative position of the attribute in a layered navigation block."""
  position: Int
}

"""A string that contains search suggestion"""
type SearchSuggestion {
  """The search suggestion of existing product."""
  search: String!
}

"""Defines aggregation option fields."""
interface AggregationOptionInterface {
  """The number of items that match the aggregation option."""
  count: Int
  """The display label for an aggregation option."""
  label: String
  """The internal ID that represents the value of the option."""
  value: String!
}

"""An implementation of `AggregationOptionInterface`."""
type AggregationOption implements AggregationOptionInterface {
  """The number of items that match the aggregation option."""
  count: Int
  """The display label for an aggregation option."""
  label: String
  """The internal ID that represents the value of the option."""
  value: String!
}

"""Defines a possible sort field."""
type SortField {
  """The label of the sort field."""
  label: String
  """The attribute code of the sort field."""
  value: String
}

"""
Contains a default value for sort fields and all available sort fields.
"""
type SortFields {
  """The default sort field value."""
  default: String
  """An array of possible sort fields."""
  options: [SortField]
}

"""Contains a simple product wish list item."""
type SimpleWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list."""
  added_at: String!
  """Custom options selected for the wish list item."""
  customizable_options: [SelectedCustomizableOption]!
  """The description of the item."""
  description: String
  """The unique ID for a `WishlistItemInterface` object."""
  id: ID!
  """Product details of the wish list item."""
  product: ProductInterface
  """The quantity of this wish list item."""
  quantity: Float!
}

"""Contains a virtual product wish list item."""
type VirtualWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list."""
  added_at: String!
  """Custom options selected for the wish list item."""
  customizable_options: [SelectedCustomizableOption]!
  """The description of the item."""
  description: String
  """The unique ID for a `WishlistItemInterface` object."""
  id: ID!
  """Product details of the wish list item."""
  product: ProductInterface
  """The quantity of this wish list item."""
  quantity: Float!
}

"""This enumeration defines the entity type."""
enum UrlRewriteEntityTypeEnum {
  CMS_PAGE @deprecated(reason: "")
  PRODUCT @deprecated(reason: "")
  CATEGORY @deprecated(reason: "")
}

"""
Defines an object used to iterate through items for product comparisons.
"""
type ComparableItem {
  """An array of product attributes that can be used to compare products."""
  attributes: [ProductAttribute]!
  """Details about a product in a compare list."""
  product: ProductInterface!
  """The unique ID of an item in a compare list."""
  uid: ID!
}

"""Contains a product attribute code and value."""
type ProductAttribute {
  """The unique identifier for a product attribute code."""
  code: String!
  """The display value of the attribute."""
  value: String!
}

"""Contains an attribute code that is used for product comparisons."""
type ComparableAttribute {
  """An attribute code that is enabled for product comparisons."""
  code: String!
  """The label of the attribute code."""
  label: String!
}

"""
Contains iterable information such as the array of items, the count, and attributes that represent the compare list.
"""
type CompareList {
  """An array of attributes that can be used for comparing products."""
  attributes: [ComparableAttribute]
  """The number of items in the compare list."""
  item_count: Int!
  """An array of products to compare."""
  items: [ComparableItem]
  """The unique ID assigned to the compare list."""
  uid: ID!
}

"""Defines the customer name, addresses, and other details."""
type Customer {
  """An array containing the customer's shipping and billing addresses."""
  addresses: [CustomerAddress]
  """Indicates whether the customer has enabled remote shopping assistance."""
  allow_remote_shopping_assistance: Boolean!
  """The contents of the customer's compare list."""
  compare_list: CompareList
  """Timestamp indicating when the account was created."""
  created_at: String
  """The customer's date of birth."""
  date_of_birth: String
  """The ID assigned to the billing address."""
  default_billing: String
  """The ID assigned to the shipping address."""
  default_shipping: String
  """The customer's date of birth."""
  dob: String @deprecated(reason: "Use `date_of_birth` instead.")
  """The customer's email address. Required."""
  email: String
  """The customer's first name."""
  firstname: String
  """The customer's gender (Male - 1, Female - 2)."""
  gender: Int
  group_id: Int @deprecated(reason: "Customer group should not be exposed in the storefront scenarios.")
  """The ID assigned to the customer."""
  id: Int @deprecated(reason: "`id` is not needed as part of `Customer`, because on the server side, it can be identified based on the customer token used for authentication. There is no need to know customer ID on the client side.")
  """
  Indicates whether the customer is subscribed to the company's newsletter.
  """
  is_subscribed: Boolean
  """The customer's family name."""
  lastname: String
  """The customer's middle name."""
  middlename: String
  orders(
    """Defines the filter to use for searching customer orders."""
    filter: CustomerOrdersFilterInput
    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1
    """
    Specifies the maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20
    """
    Specifies which field to sort on, and whether to return the results in ascending or descending order.
    """
    sort: CustomerOrderSortInput
    """
    Specifies the scope to search for customer orders. The Store request header identifies the customer's store view code. The default value of STORE limits the search to the value specified in the header. Specify WEBSITE to expand the search to include all customer orders assigned to the website that is defined in the header, or specify GLOBAL to include all customer orders across all websites and stores.
    """
    scope: ScopeTypeEnum
  ): CustomerOrders
  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String
  """Contains the customer's product reviews."""
  reviews(
    """
    The maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20
    """The page of results to return. The default value is 1."""
    currentPage: Int = 1
  ): ProductReviews!
  """A value such as Sr., Jr., or III."""
  suffix: String
  """The customer's Value-added tax (VAT) number (for corporate customers)."""
  taxvat: String
  """Return a customer's wish lists."""
  wishlist: Wishlist! @deprecated(reason: "Use `Customer.wishlists` or `Customer.wishlist_v2` instead.")
  """
  Retrieve the wish list identified by the unique ID for a `Wishlist` object.
  """
  wishlist_v2(id: ID!): Wishlist
  """
  An array of wishlists. In Magento Open Source, customers are limited to one wish list. The number of wish lists is configurable for Adobe Commerce.
  """
  wishlists(
    """
    Specifies the maximum number of results to return at once. This attribute is optional.
    """
    pageSize: Int = 20
    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1
  ): [Wishlist]!
}

"""Contains an array of product IDs to use for creating a compare list."""
input CreateCompareListInput {
  """An array of product IDs to add to the compare list."""
  products: [ID]
}

"""Contains products to add to an existing compare list."""
input AddProductsToCompareListInput {
  """An array of product IDs to add to the compare list."""
  products: [ID]!
  """The unique identifier of the compare list to modify."""
  uid: ID!
}

"""Defines which products to remove from a compare list."""
input RemoveProductsFromCompareListInput {
  """An array of product IDs to remove from the compare list."""
  products: [ID]!
  """The unique identifier of the compare list to modify."""
  uid: ID!
}

"""Contains the results of the request to delete a compare list."""
type DeleteCompareListOutput {
  """Indicates whether the compare list was successfully deleted."""
  result: Boolean!
}

"""Contains the results of the request to assign a compare list."""
type AssignCompareListToCustomerOutput {
  """The contents of the customer's compare list."""
  compare_list: CompareList
  """
  Indicates whether the compare list was successfully assigned to the customer.
  """
  result: Boolean!
}

"""Assigns a specific `cart_id` to the empty cart."""
input createEmptyCartInput {
  """The ID to assign to the cart."""
  cart_id: String
}

"""Defines the simple and group products to add to the cart."""
input AddSimpleProductsToCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
  """An array of simple and group items to add."""
  cart_items: [SimpleProductCartItemInput]!
}

"""Defines a single product to add to the cart."""
input SimpleProductCartItemInput {
  """An array that defines customizable options for the product."""
  customizable_options: [CustomizableOptionInput]
  """
  An object containing the `sku`, `quantity`, and other relevant information about the product.
  """
  data: CartItemInput!
}

"""Defines the virtual products to add to the cart."""
input AddVirtualProductsToCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
  """An array of virtual products to add."""
  cart_items: [VirtualProductCartItemInput]!
}

"""Defines a single product to add to the cart."""
input VirtualProductCartItemInput {
  """An array that defines customizable options for the product."""
  customizable_options: [CustomizableOptionInput]
  """
  An object containing the `sku`, `quantity`, and other relevant information about the product.
  """
  data: CartItemInput!
}

"""Defines an item to be added to the cart."""
input CartItemInput {
  """
  An array of entered options for the base product, such as personalization text.
  """
  entered_options: [EnteredOptionInput]
  """For a child product, the SKU of its parent product."""
  parent_sku: String
  """The amount or number of an item to add."""
  quantity: Float!
  """
  The selected options for the base product, such as color or size, using the unique ID for an object such as `CustomizableRadioOption`, `CustomizableDropDownOption`, or `ConfigurableProductOptionsValues`.
  """
  selected_options: [ID]
  """The SKU of the product."""
  sku: String!
}

"""Defines a customizable option."""
input CustomizableOptionInput {
  """The customizable option ID of the product."""
  id: Int
  """The string value of the option."""
  value_string: String!
}

"""Specifies the coupon code to apply to the cart."""
input ApplyCouponToCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
  """A valid coupon code."""
  coupon_code: String!
}

"""Modifies the specified items in the cart."""
input UpdateCartItemsInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
  """An array of items to be updated."""
  cart_items: [CartItemUpdateInput]!
}

"""A single item to be updated."""
input CartItemUpdateInput {
  """Deprecated. Use `cart_item_uid` instead."""
  cart_item_id: Int
  """The unique ID for a `CartItemInterface` object."""
  cart_item_uid: ID
  """An array that defines customizable options for the product."""
  customizable_options: [CustomizableOptionInput]
  """Gift message details for the cart item"""
  gift_message: GiftMessageInput
  """The new quantity of the item."""
  quantity: Float
}

"""Specifies which items to remove from the cart."""
input RemoveItemFromCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
  """Deprecated. Use `cart_item_uid` instead."""
  cart_item_id: Int
  """Required field. The unique ID for a `CartItemInterface` object."""
  cart_item_uid: ID
}

"""Specifies an array of addresses to use for shipping."""
input SetShippingAddressesOnCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
  """An array of shipping addresses."""
  shipping_addresses: [ShippingAddressInput]!
}

"""Defines a single shipping address."""
input ShippingAddressInput {
  """Defines a shipping address."""
  address: CartAddressInput
  """
  An ID from the customer's address book that uniquely identifies the address to be used for shipping.
  """
  customer_address_id: Int
  """Text provided by the shopper."""
  customer_notes: String
  """The code of Pickup Location which will be used for In-Store Pickup."""
  pickup_location_code: String
}

"""Sets the billing address."""
input SetBillingAddressOnCartInput {
  """The billing address."""
  billing_address: BillingAddressInput!
  """The unique ID of a `Cart` object."""
  cart_id: String!
}

"""Defines the billing address."""
input BillingAddressInput {
  """Defines a billing address."""
  address: CartAddressInput
  """
  An ID from the customer's address book that uniquely identifies the address to be used for billing.
  """
  customer_address_id: Int
  """
  Indicates whether to set the billing address to be the same as the existing shipping address on the cart.
  """
  same_as_shipping: Boolean
  """
  Indicates whether to set the shipping address to be the same as this billing address.
  """
  use_for_shipping: Boolean
}

"""Defines the billing or shipping address to be applied to the cart."""
input CartAddressInput {
  """The city specified for the billing or shipping address."""
  city: String!
  """The company specified for the billing or shipping address."""
  company: String
  """The country code and label for the billing or shipping address."""
  country_code: String!
  """The first name of the customer or guest."""
  firstname: String!
  """The last name of the customer or guest."""
  lastname: String!
  """The ZIP or postal code of the billing or shipping address."""
  postcode: String
  """
  A string that defines the state or province of the billing or shipping address.
  """
  region: String
  """
  An integer that defines the state or province of the billing or shipping address.
  """
  region_id: Int
  """
  Determines whether to save the address in the customer's address book. The default value is true.
  """
  save_in_address_book: Boolean
  """An array containing the street for the billing or shipping address."""
  street: [String]!
  """The telephone number for the billing or shipping address."""
  telephone: String
  """The VAT company number for billing or shipping address."""
  vat_id: String
}

"""Applies one or shipping methods to the cart."""
input SetShippingMethodsOnCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
  """An array of shipping methods."""
  shipping_methods: [ShippingMethodInput]!
}

"""Defines the shipping carrier and method."""
input ShippingMethodInput {
  """
  A string that identifies a commercial carrier or an offline delivery method.
  """
  carrier_code: String!
  """
  A string that indicates which service a commercial carrier will use to ship items. For offline delivery methods, this value is similar to the label displayed on the checkout page.
  """
  method_code: String!
}

"""Applies a payment method to the quote."""
input SetPaymentMethodAndPlaceOrderInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
  """The payment method data to apply to the cart."""
  payment_method: PaymentMethodInput!
}

"""Specifies the quote to be converted to an order."""
input PlaceOrderInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
  """
  Optionally send a URL where the visitor is returned after completing the Mollie order
  """
  mollie_return_url: String
}

"""Applies a payment method to the cart."""
input SetPaymentMethodOnCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
  """The payment method data to apply to the cart."""
  payment_method: PaymentMethodInput!
}

"""Defines the payment method."""
input PaymentMethodInput {
  braintree: BraintreeInput
  braintree_cc_vault: BraintreeCcVaultInput
  """The internal name for the payment method."""
  code: String!
  """Required input for PayPal Hosted pro payments."""
  hosted_pro: HostedProInput
  """The Apple Pay payment token"""
  mollie_applepay_payment_token: String
  """The card token provided by Mollie Components"""
  mollie_card_token: String
  """Provided the issuer chosen by the end-user"""
  mollie_selected_issuer: String
  """Provided the terminal chosen"""
  mollie_selected_terminal: String
  """Required input for Payflow Express Checkout payments."""
  payflow_express: PayflowExpressInput
  """Required input for PayPal Payflow Link and Payments Advanced payments."""
  payflow_link: PayflowLinkInput
  """Required input for PayPal Payflow Pro and Payment Pro payments."""
  payflowpro: PayflowProInput
  """Required input for PayPal Payflow Pro vault payments."""
  payflowpro_cc_vault: VaultTokenInput
  """Required input for Express Checkout and Payments Standard payments."""
  paypal_express: PaypalExpressInput
  """The purchase order number. Optional for most payment methods."""
  purchase_order_number: String
}

"""Defines the guest email and cart."""
input SetGuestEmailOnCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
  """The email address of the guest."""
  email: String!
}

"""
Contains details about the final price of items in the cart, including discount and tax information.
"""
type CartPrices {
  """
  An array containing the names and amounts of taxes applied to each item in the cart.
  """
  applied_taxes: [CartTaxItem]
  discount: CartDiscount @deprecated(reason: "Use discounts instead.")
  """
  An array containing cart rule discounts, store credit and gift cards applied to the cart.
  """
  discounts: [Discount]
  """The total, including discounts, taxes, shipping, and other fees."""
  grand_total: Money
  mollie_payment_fee: MolliePaymentFee
  """The subtotal without any applied taxes."""
  subtotal_excluding_tax: Money
  """The subtotal including any applied taxes."""
  subtotal_including_tax: Money
  """The subtotal with any discounts applied, but not taxes."""
  subtotal_with_discount_excluding_tax: Money
}

"""Contains tax information about an item in the cart."""
type CartTaxItem {
  """The amount of tax applied to the item."""
  amount: Money!
  """The description of the tax."""
  label: String!
}

"""Contains information about discounts applied to the cart."""
type CartDiscount {
  """The amount of the discount applied to the item."""
  amount: Money!
  """The description of the discount."""
  label: [String]!
}

"""Contains details about the cart after setting the payment method."""
type SetPaymentMethodOnCartOutput {
  """The cart after setting the payment method."""
  cart: Cart!
}

"""Contains details about the cart after setting the billing address."""
type SetBillingAddressOnCartOutput {
  """The cart after setting the billing address."""
  cart: Cart!
}

"""Contains details about the cart after setting the shipping addresses."""
type SetShippingAddressesOnCartOutput {
  """The cart after setting the shipping addresses."""
  cart: Cart!
}

"""Contains details about the cart after setting the shipping methods."""
type SetShippingMethodsOnCartOutput {
  """The cart after setting the shipping methods."""
  cart: Cart!
}

"""Contains details about the cart after applying a coupon."""
type ApplyCouponToCartOutput {
  """The cart after applying a coupon."""
  cart: Cart!
}

"""Contains the results of the request to place an order."""
type PlaceOrderOutput {
  """The ID of the order."""
  order: Order!
}

"""
Contains the contents and other details about a guest or customer cart.
"""
type Cart {
  applied_coupon: AppliedCoupon @deprecated(reason: "Use `applied_coupons` instead.")
  """
  An array of `AppliedCoupon` objects. Each object contains the `code` text attribute, which specifies the coupon code.
  """
  applied_coupons: [AppliedCoupon]
  """An array of available payment methods."""
  available_payment_methods: [AvailablePaymentMethod]
  """The billing address assigned to the cart."""
  billing_address: BillingCartAddress
  """The email address of the guest or customer."""
  email: String
  """The entered gift message for the cart"""
  gift_message: GiftMessage
  """The unique ID for a `Cart` object."""
  id: ID!
  """Indicates whether the cart contains only virtual products."""
  is_virtual: Boolean!
  """An array of products that have been added to the cart."""
  items: [CartItemInterface]
  """Available issuers for the selected payment method"""
  mollie_available_issuers: [MollieIssuer]
  """Pricing details for the quote."""
  prices: CartPrices
  """Indicates which payment method was applied to the cart."""
  selected_payment_method: SelectedPaymentMethod
  """An array of shipping addresses assigned to the cart."""
  shipping_addresses: [ShippingCartAddress]!
  """The total number of items in the cart."""
  total_quantity: Float!
}

interface CartAddressInterface {
  """The city specified for the billing or shipping address."""
  city: String!
  """The company specified for the billing or shipping address."""
  company: String
  """An object containing the country label and code."""
  country: CartAddressCountry!
  """The first name of the customer or guest."""
  firstname: String!
  """The last name of the customer or guest."""
  lastname: String!
  """The ZIP or postal code of the billing or shipping address."""
  postcode: String
  """An object containing the region label and code."""
  region: CartAddressRegion
  """An array containing the street for the billing or shipping address."""
  street: [String]!
  """The telephone number for the billing or shipping address."""
  telephone: String
  """The unique id of the customer address."""
  uid: String!
  """The VAT company number for billing or shipping address."""
  vat_id: String
}

"""Contains shipping addresses and methods."""
type ShippingCartAddress implements CartAddressInterface {
  """
  An array that lists the shipping methods that can be applied to the cart.
  """
  available_shipping_methods: [AvailableShippingMethod]
  cart_items: [CartItemQuantity] @deprecated(reason: "Use `cart_items_v2` instead.")
  """An array that lists the items in the cart."""
  cart_items_v2: [CartItemInterface]
  """The city specified for the billing or shipping address."""
  city: String!
  """The company specified for the billing or shipping address."""
  company: String
  """An object containing the country label and code."""
  country: CartAddressCountry!
  """Text provided by the shopper."""
  customer_notes: String
  """The first name of the customer or guest."""
  firstname: String!
  items_weight: Float @deprecated(reason: "This information should not be exposed on the frontend.")
  """The last name of the customer or guest."""
  lastname: String!
  pickup_location_code: String
  """The ZIP or postal code of the billing or shipping address."""
  postcode: String
  """An object containing the region label and code."""
  region: CartAddressRegion
  """An object that describes the selected shipping method."""
  selected_shipping_method: SelectedShippingMethod
  """An array containing the street for the billing or shipping address."""
  street: [String]!
  """The telephone number for the billing or shipping address."""
  telephone: String
  """The unique id of the customer address."""
  uid: String!
  """The VAT company number for billing or shipping address."""
  vat_id: String
}

"""Contains details about the billing address."""
type BillingCartAddress implements CartAddressInterface {
  """The city specified for the billing or shipping address."""
  city: String!
  """The company specified for the billing or shipping address."""
  company: String
  """An object containing the country label and code."""
  country: CartAddressCountry!
  customer_notes: String @deprecated(reason: "The field is used only in shipping address.")
  """The first name of the customer or guest."""
  firstname: String!
  """The last name of the customer or guest."""
  lastname: String!
  """The ZIP or postal code of the billing or shipping address."""
  postcode: String
  """An object containing the region label and code."""
  region: CartAddressRegion
  """An array containing the street for the billing or shipping address."""
  street: [String]!
  """The telephone number for the billing or shipping address."""
  telephone: String
  """The unique id of the customer address."""
  uid: String!
  """The VAT company number for billing or shipping address."""
  vat_id: String
}

"""
Deprecated: The `ShippingCartAddress.cart_items` field now returns `CartItemInterface`.
"""
type CartItemQuantity {
  cart_item_id: Int! @deprecated(reason: "The `ShippingCartAddress.cart_items` field now returns `CartItemInterface`.")
  quantity: Float! @deprecated(reason: "The `ShippingCartAddress.cart_items` field now returns `CartItemInterface`.")
}

"""Contains details about the region in a billing or shipping address."""
type CartAddressRegion {
  """The state or province code."""
  code: String
  """The display label for the region."""
  label: String
  """The unique ID for a pre-defined region."""
  region_id: Int
}

"""Contains details the country in a billing or shipping address."""
type CartAddressCountry {
  """The country code."""
  code: String!
  """The display label for the country."""
  label: String!
}

"""Contains details about the selected shipping method and carrier."""
type SelectedShippingMethod {
  """The cost of shipping using this shipping method."""
  amount: Money!
  base_amount: Money @deprecated(reason: "The field should not be used on the storefront.")
  """
  A string that identifies a commercial carrier or an offline shipping method.
  """
  carrier_code: String!
  """The label for the carrier code."""
  carrier_title: String!
  """A shipping method code associated with a carrier."""
  method_code: String!
  """The label for the method code."""
  method_title: String!
  """The cost of shipping using this shipping method, excluding tax."""
  price_excl_tax: Money!
  """The cost of shipping using this shipping method, including tax."""
  price_incl_tax: Money!
}

"""Contains details about the possible shipping methods and carriers."""
type AvailableShippingMethod {
  """The cost of shipping using this shipping method."""
  amount: Money!
  """Indicates whether this shipping method can be applied to the cart."""
  available: Boolean!
  base_amount: Money @deprecated(reason: "The field should not be used on the storefront.")
  """
  A string that identifies a commercial carrier or an offline shipping method.
  """
  carrier_code: String!
  """The label for the carrier code."""
  carrier_title: String!
  """Describes an error condition."""
  error_message: String
  """
  A shipping method code associated with a carrier. The value could be null if no method is available.
  """
  method_code: String
  """
  The label for the shipping method code. The value could be null if no method is available.
  """
  method_title: String
  """The cost of shipping using this shipping method, excluding tax."""
  price_excl_tax: Money!
  """The cost of shipping using this shipping method, including tax."""
  price_incl_tax: Money!
}

"""
Describes a payment method that the shopper can use to pay for the order.
"""
type AvailablePaymentMethod {
  """The payment method code."""
  code: String!
  """If the payment method is an online integration"""
  is_deferred: Boolean!
  """Available issuers for this payment method"""
  mollie_available_issuers: [MollieIssuer]
  """Retrieve meta information for this payment method (image)"""
  mollie_meta: MolliePaymentMethodMeta!
  """The payment method title."""
  title: String!
}

"""Describes the payment method the shopper selected."""
type SelectedPaymentMethod {
  """The payment method code."""
  code: String!
  """Retrieve meta information for this payment method (image)"""
  mollie_meta: MolliePaymentMethodMeta!
  """The purchase order number."""
  purchase_order_number: String
  """The payment method title."""
  title: String!
}

"""Contains the applied coupon code."""
type AppliedCoupon {
  """The coupon code the shopper applied to the card."""
  code: String!
}

"""Specifies the cart from which to remove a coupon."""
input RemoveCouponFromCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
}

"""Contains details about the cart after removing a coupon."""
type RemoveCouponFromCartOutput {
  """The cart after removing a coupon."""
  cart: Cart
}

"""Contains details about the cart after adding simple or group products."""
type AddSimpleProductsToCartOutput {
  """The cart after adding products."""
  cart: Cart!
}

"""Contains details about the cart after adding virtual products."""
type AddVirtualProductsToCartOutput {
  """The cart after adding products."""
  cart: Cart!
}

"""Contains details about the cart after updating items."""
type UpdateCartItemsOutput {
  """The cart after updating products."""
  cart: Cart!
}

"""Contains details about the cart after removing an item."""
type RemoveItemFromCartOutput {
  """The cart after removing an item."""
  cart: Cart!
}

"""Contains details about the cart after setting the email of a guest."""
type SetGuestEmailOnCartOutput {
  """The cart after setting the guest email."""
  cart: Cart!
}

type SimpleCartItem implements CartItemInterface {
  """An array containing the customizable options the shopper selected."""
  customizable_options: [SelectedCustomizableOption]!
  "An array of errors encountered while loading the cart item"
  errors: [CartItemError]
  """The entered gift message for the cart item"""
  gift_message: GiftMessage
  id: String! @deprecated(reason: "Use `uid` instead.")
  """
  Contains details about the price of the item, including taxes and discounts.
  """
  prices: CartItemPrices
  """Details about an item in the cart."""
  product: ProductInterface!
  """The quantity of this item in the cart."""
  quantity: Float!
  """The unique ID for a `CartItemInterface` object."""
  uid: ID!
}

type VirtualCartItem implements CartItemInterface {
  """An array containing customizable options the shopper selected."""
  customizable_options: [SelectedCustomizableOption]!
  "An array of errors encountered while loading the cart item"
  errors: [CartItemError]
  id: String! @deprecated(reason: "Use `uid` instead.")
  """
  Contains details about the price of the item, including taxes and discounts.
  """
  prices: CartItemPrices
  """Details about an item in the cart."""
  product: ProductInterface!
  """The quantity of this item in the cart."""
  quantity: Float!
  """The unique ID for a `CartItemInterface` object."""
  uid: ID!
}

interface CartItemInterface {
  "An array of errors encountered while loading the cart item"
  errors: [CartItemError]
  id: String! @deprecated(reason: "Use `uid` instead.")
  """
  Contains details about the price of the item, including taxes and discounts.
  """
  prices: CartItemPrices
  """Details about an item in the cart."""
  product: ProductInterface!
  """The quantity of this item in the cart."""
  quantity: Float!
  """The unique ID for a `CartItemInterface` object."""
  uid: ID!
}

type CartItemError {
  "An error code that describes the error encountered"
  code: CartItemErrorType!
  "A localized error message"
  message: String!
}

enum CartItemErrorType {
  UNDEFINED
  ITEM_QTY
  ITEM_INCREMENTS
}

"""
Defines an individual discount. A discount can be applied to the cart as a whole or to an item.
"""
type Discount {
  """The amount of the discount."""
  amount: Money!
  """A description of the discount."""
  label: String!
}

type CartItemPrices {
  """An array of discounts to be applied to the cart item."""
  discounts: [Discount]
  """An array of FPTs applied to the cart item."""
  fixed_product_taxes: [FixedProductTax]
  """
  The price of the item before any discounts were applied. The price that might include tax, depending on the configured display settings for cart.
  """
  price: Money!
  price_including_tax: Money
  """The value of the price multiplied by the quantity of the item."""
  row_total: Money!
  """The value of `row_total` plus the tax applied to the item."""
  row_total_including_tax: Money!
  """The total of all discounts applied to the item."""
  total_item_discount: Money
}

"""Identifies a customized product that has been placed in a cart."""
type SelectedCustomizableOption {
  """
  The unique ID for a specific `CustomizableOptionInterface` object, such as a `CustomizableFieldOption`, `CustomizableFileOption`, or `CustomizableAreaOption` object.
  """
  customizable_option_uid: ID!
  id: Int! @deprecated(reason: "Use `SelectedCustomizableOption.customizable_option_uid` instead.")
  """Indicates whether the customizable option is required."""
  is_required: Boolean!
  """The display name of the selected customizable option."""
  label: String!
  """A value indicating the order to display this option."""
  sort_order: Int!
  """The type of `CustomizableOptionInterface` object."""
  type: String!
  """An array of selectable values."""
  values: [SelectedCustomizableOptionValue]!
}

"""Identifies the value of the selected customized option."""
type SelectedCustomizableOptionValue {
  """
  The unique ID for a value object that corresponds to the object represented by the `customizable_option_uid` attribute.
  """
  customizable_option_value_uid: ID!
  id: Int! @deprecated(reason: "Use `SelectedCustomizableOptionValue.customizable_option_value_uid` instead.")
  """The display name of the selected value."""
  label: String!
  """The price of the selected customizable value."""
  price: CartItemSelectedOptionValuePrice!
  """The text identifying the selected value."""
  value: String!
}

"""Contains details about the price of a selected customizable value."""
type CartItemSelectedOptionValuePrice {
  """Indicates whether the price type is fixed, percent, or dynamic."""
  type: PriceTypeEnum!
  """A string that describes the unit of the value."""
  units: String!
  """A price value."""
  value: Float!
}

"""Contains the order ID."""
type Order {
  mollie_payment_token: String
  mollie_redirect_url: String
  order_id: String @deprecated(reason: "Use `order_number` instead.")
  """The unique ID for an `Order` object."""
  order_number: String!
}

"""An error encountered while adding an item to the the cart."""
type CartUserInputError {
  """A cart-specific error code."""
  code: CartUserInputErrorType!
  """A localized error message."""
  message: String!
}

"""Contains details about the cart after adding products to it."""
type AddProductsToCartOutput {
  """The cart after products have been added."""
  cart: Cart!
  """Contains errors encountered while adding an item to the cart."""
  user_errors: [CartUserInputError]!
}

enum CartUserInputErrorType {
  PRODUCT_NOT_FOUND @deprecated(reason: "")
  NOT_SALABLE @deprecated(reason: "")
  INSUFFICIENT_STOCK @deprecated(reason: "")
  UNDEFINED @deprecated(reason: "")
}

"""Contains details about a billing or shipping address."""
input CustomerAddressInput {
  """The customer's city or town."""
  city: String
  """The customer's company."""
  company: String
  """The two-letter code representing the customer's country."""
  country_code: CountryCodeEnum
  """Deprecated: use `country_code` instead."""
  country_id: CountryCodeEnum
  """Deprecated: Custom attributes should not be put into container."""
  custom_attributes: [CustomerAddressAttributeInput]
  """Indicates whether the address is the default billing address."""
  default_billing: Boolean
  """Indicates whether the address is the default shipping address."""
  default_shipping: Boolean
  """The customer's fax number."""
  fax: String
  """
  The first name of the person associated with the billing/shipping address.
  """
  firstname: String
  """
  The family name of the person associated with the billing/shipping address.
  """
  lastname: String
  """
  The middle name of the person associated with the billing/shipping address.
  """
  middlename: String
  """The customer's ZIP or postal code."""
  postcode: String
  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String
  """An object containing the region name, region code, and region ID."""
  region: CustomerAddressRegionInput
  """An array of strings that define the street number and name."""
  street: [String]
  """A value such as Sr., Jr., or III."""
  suffix: String
  """The customer's telephone number."""
  telephone: String
  """The customer's Tax/VAT number (for corporate customers)."""
  vat_id: String
}

"""Defines the customer's state or province."""
input CustomerAddressRegionInput {
  """The state or province name."""
  region: String
  """The address region code."""
  region_code: String
  """The unique ID for a pre-defined region."""
  region_id: Int
}

"""Specifies the attribute code and value of a customer attribute."""
input CustomerAddressAttributeInput {
  """The name assigned to the attribute."""
  attribute_code: String!
  """The value assigned to the attribute."""
  value: String!
}

"""Contains a customer authorization token."""
type CustomerToken {
  """The customer authorization token."""
  token: String
  createdAt: String
  valid: Boolean
}

"""An input object that assigns or updates customer attributes."""
input CustomerInput {
  """The customer's date of birth."""
  date_of_birth: String
  """Deprecated: Use `date_of_birth` instead."""
  dob: String
  """The customer's email address. Required when creating a customer."""
  email: String
  """The customer's first name."""
  firstname: String
  """The customer's gender (Male - 1, Female - 2)."""
  gender: Int
  """
  Indicates whether the customer is subscribed to the company's newsletter.
  """
  is_subscribed: Boolean
  """The customer's family name."""
  lastname: String
  """The customer's middle name."""
  middlename: String
  """The customer's password."""
  password: String
  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String
  """A value such as Sr., Jr., or III."""
  suffix: String
  """The customer's Tax/VAT number (for corporate customers)."""
  taxvat: String
}

"""An input object for creating a customer."""
input CustomerCreateInput {
  """Indicates whether the customer has enabled remote shopping assistance."""
  allow_remote_shopping_assistance: Boolean
  """The customer's date of birth."""
  date_of_birth: String
  """Deprecated: Use `date_of_birth` instead."""
  dob: String
  """The customer's email address."""
  email: String!
  """The customer's first name."""
  firstname: String!
  """The customer's gender (Male - 1, Female - 2)."""
  gender: Int
  """
  Indicates whether the customer is subscribed to the company's newsletter.
  """
  is_subscribed: Boolean
  """The customer's family name."""
  lastname: String!
  """The customer's middle name."""
  middlename: String
  """The customer's password."""
  password: String
  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String
  """A value such as Sr., Jr., or III."""
  suffix: String
  """The customer's Tax/VAT number (for corporate customers)."""
  taxvat: String
}

"""An input object for updating a customer."""
input CustomerUpdateInput {
  """Indicates whether the customer has enabled remote shopping assistance."""
  allow_remote_shopping_assistance: Boolean
  """The customer's date of birth."""
  date_of_birth: String
  """Deprecated: Use `date_of_birth` instead."""
  dob: String
  """The customer's first name."""
  firstname: String
  """The customer's gender (Male - 1, Female - 2)."""
  gender: Int
  """
  Indicates whether the customer is subscribed to the company's newsletter.
  """
  is_subscribed: Boolean
  """The customer's family name."""
  lastname: String
  """The customer's middle name."""
  middlename: String
  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String
  """A value such as Sr., Jr., or III."""
  suffix: String
  """The customer's Tax/VAT number (for corporate customers)."""
  taxvat: String
}

"""Contains details about a newly-created or updated customer."""
type CustomerOutput {
  """Customer details after creating or updating a customer."""
  customer: Customer!
}

"""Contains the result of a request to revoke a customer token."""
type RevokeCustomerTokenOutput {
  """The result of a request to revoke a customer token."""
  result: Boolean!
}

"""
Contains detailed information about a customer's billing or shipping address.
"""
type CustomerAddress {
  """The customer's city or town."""
  city: String
  """The customer's company."""
  company: String
  """The customer's country."""
  country_code: CountryCodeEnum
  """The customer's country."""
  country_id: String @deprecated(reason: "Use `country_code` instead.")
  custom_attributes: [CustomerAddressAttribute] @deprecated(reason: "Custom attributes should not be put into a container.")
  """The customer ID"""
  customer_id: Int @deprecated(reason: "`customer_id` is not needed as part of `CustomerAddress`. The `id` is a unique identifier for the addresses.")
  """
  Indicates whether the address is the customer's default billing address.
  """
  default_billing: Boolean
  """
  Indicates whether the address is the customer's default shipping address.
  """
  default_shipping: Boolean
  """Contains any extension attributes for the address."""
  extension_attributes: [CustomerAddressAttribute]
  """The customer's fax number."""
  fax: String
  """
  The first name of the person associated with the shipping/billing address.
  """
  firstname: String
  """The ID of a `CustomerAddress` object."""
  id: Int
  """
  The family name of the person associated with the shipping/billing address.
  """
  lastname: String
  """
  The middle name of the person associated with the shipping/billing address.
  """
  middlename: String
  """The customer's ZIP or postal code."""
  postcode: String
  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String
  """An object containing the region name, region code, and region ID."""
  region: CustomerAddressRegion
  """The unique ID for a pre-defined region."""
  region_id: Int
  """An array of strings that define the street number and name."""
  street: [String]
  """A value such as Sr., Jr., or III."""
  suffix: String
  """The customer's telephone number."""
  telephone: String
  """The customer's Value-added tax (VAT) number (for corporate customers)."""
  vat_id: String
}

"""Defines the customer's state or province."""
type CustomerAddressRegion {
  """The state or province name."""
  region: String
  """The address region code."""
  region_code: String
  """The unique ID for a pre-defined region."""
  region_id: Int
}

"""
Specifies the attribute code and value of a customer address attribute.
"""
type CustomerAddressAttribute {
  """The name assigned to the customer address attribute."""
  attribute_code: String
  """The valuue assigned to the customer address attribute."""
  value: String
}

"""Contains the result of the `isEmailAvailable` query."""
type IsEmailAvailableOutput {
  """
  Indicates whether the specified email address can be used to create a customer.
  """
  is_email_available: Boolean
}

"""The list of country codes."""
enum CountryCodeEnum {
  """Afghanistan"""
  AF @deprecated(reason: "")
  """Åland Islands"""
  AX @deprecated(reason: "")
  """Albania"""
  AL @deprecated(reason: "")
  """Algeria"""
  DZ @deprecated(reason: "")
  """American Samoa"""
  AS @deprecated(reason: "")
  """Andorra"""
  AD @deprecated(reason: "")
  """Angola"""
  AO @deprecated(reason: "")
  """Anguilla"""
  AI @deprecated(reason: "")
  """Antarctica"""
  AQ @deprecated(reason: "")
  """Antigua & Barbuda"""
  AG @deprecated(reason: "")
  """Argentina"""
  AR @deprecated(reason: "")
  """Armenia"""
  AM @deprecated(reason: "")
  """Aruba"""
  AW @deprecated(reason: "")
  """Australia"""
  AU @deprecated(reason: "")
  """Austria"""
  AT @deprecated(reason: "")
  """Azerbaijan"""
  AZ @deprecated(reason: "")
  """Bahamas"""
  BS @deprecated(reason: "")
  """Bahrain"""
  BH @deprecated(reason: "")
  """Bangladesh"""
  BD @deprecated(reason: "")
  """Barbados"""
  BB @deprecated(reason: "")
  """Belarus"""
  BY @deprecated(reason: "")
  """Belgium"""
  BE @deprecated(reason: "")
  """Belize"""
  BZ @deprecated(reason: "")
  """Benin"""
  BJ @deprecated(reason: "")
  """Bermuda"""
  BM @deprecated(reason: "")
  """Bhutan"""
  BT @deprecated(reason: "")
  """Bolivia"""
  BO @deprecated(reason: "")
  """Bosnia & Herzegovina"""
  BA @deprecated(reason: "")
  """Botswana"""
  BW @deprecated(reason: "")
  """Bouvet Island"""
  BV @deprecated(reason: "")
  """Brazil"""
  BR @deprecated(reason: "")
  """British Indian Ocean Territory"""
  IO @deprecated(reason: "")
  """British Virgin Islands"""
  VG @deprecated(reason: "")
  """Brunei"""
  BN @deprecated(reason: "")
  """Bulgaria"""
  BG @deprecated(reason: "")
  """Burkina Faso"""
  BF @deprecated(reason: "")
  """Burundi"""
  BI @deprecated(reason: "")
  """Cambodia"""
  KH @deprecated(reason: "")
  """Cameroon"""
  CM @deprecated(reason: "")
  """Canada"""
  CA @deprecated(reason: "")
  """Cape Verde"""
  CV @deprecated(reason: "")
  """Cayman Islands"""
  KY @deprecated(reason: "")
  """Central African Republic"""
  CF @deprecated(reason: "")
  """Chad"""
  TD @deprecated(reason: "")
  """Chile"""
  CL @deprecated(reason: "")
  """China"""
  CN @deprecated(reason: "")
  """Christmas Island"""
  CX @deprecated(reason: "")
  """Cocos (Keeling) Islands"""
  CC @deprecated(reason: "")
  """Colombia"""
  CO @deprecated(reason: "")
  """Comoros"""
  KM @deprecated(reason: "")
  """Congo-Brazzaville"""
  CG @deprecated(reason: "")
  """Congo-Kinshasa"""
  CD @deprecated(reason: "")
  """Cook Islands"""
  CK @deprecated(reason: "")
  """Costa Rica"""
  CR @deprecated(reason: "")
  """Côte d’Ivoire"""
  CI @deprecated(reason: "")
  """Croatia"""
  HR @deprecated(reason: "")
  """Cuba"""
  CU @deprecated(reason: "")
  """Cyprus"""
  CY @deprecated(reason: "")
  """Czech Republic"""
  CZ @deprecated(reason: "")
  """Denmark"""
  DK @deprecated(reason: "")
  """Djibouti"""
  DJ @deprecated(reason: "")
  """Dominica"""
  DM @deprecated(reason: "")
  """Dominican Republic"""
  DO @deprecated(reason: "")
  """Ecuador"""
  EC @deprecated(reason: "")
  """Egypt"""
  EG @deprecated(reason: "")
  """El Salvador"""
  SV @deprecated(reason: "")
  """Equatorial Guinea"""
  GQ @deprecated(reason: "")
  """Eritrea"""
  ER @deprecated(reason: "")
  """Estonia"""
  EE @deprecated(reason: "")
  """Ethiopia"""
  ET @deprecated(reason: "")
  """Falkland Islands"""
  FK @deprecated(reason: "")
  """Faroe Islands"""
  FO @deprecated(reason: "")
  """Fiji"""
  FJ @deprecated(reason: "")
  """Finland"""
  FI @deprecated(reason: "")
  """France"""
  FR @deprecated(reason: "")
  """French Guiana"""
  GF @deprecated(reason: "")
  """French Polynesia"""
  PF @deprecated(reason: "")
  """French Southern Territories"""
  TF @deprecated(reason: "")
  """Gabon"""
  GA @deprecated(reason: "")
  """Gambia"""
  GM @deprecated(reason: "")
  """Georgia"""
  GE @deprecated(reason: "")
  """Germany"""
  DE @deprecated(reason: "")
  """Ghana"""
  GH @deprecated(reason: "")
  """Gibraltar"""
  GI @deprecated(reason: "")
  """Greece"""
  GR @deprecated(reason: "")
  """Greenland"""
  GL @deprecated(reason: "")
  """Grenada"""
  GD @deprecated(reason: "")
  """Guadeloupe"""
  GP @deprecated(reason: "")
  """Guam"""
  GU @deprecated(reason: "")
  """Guatemala"""
  GT @deprecated(reason: "")
  """Guernsey"""
  GG @deprecated(reason: "")
  """Guinea"""
  GN @deprecated(reason: "")
  """Guinea-Bissau"""
  GW @deprecated(reason: "")
  """Guyana"""
  GY @deprecated(reason: "")
  """Haiti"""
  HT @deprecated(reason: "")
  """Heard &amp; McDonald Islands"""
  HM @deprecated(reason: "")
  """Honduras"""
  HN @deprecated(reason: "")
  """Hong Kong SAR China"""
  HK @deprecated(reason: "")
  """Hungary"""
  HU @deprecated(reason: "")
  """Iceland"""
  IS @deprecated(reason: "")
  """India"""
  IN @deprecated(reason: "")
  """Indonesia"""
  ID @deprecated(reason: "")
  """Iran"""
  IR @deprecated(reason: "")
  """Iraq"""
  IQ @deprecated(reason: "")
  """Ireland"""
  IE @deprecated(reason: "")
  """Isle of Man"""
  IM @deprecated(reason: "")
  """Israel"""
  IL @deprecated(reason: "")
  """Italy"""
  IT @deprecated(reason: "")
  """Jamaica"""
  JM @deprecated(reason: "")
  """Japan"""
  JP @deprecated(reason: "")
  """Jersey"""
  JE @deprecated(reason: "")
  """Jordan"""
  JO @deprecated(reason: "")
  """Kazakhstan"""
  KZ @deprecated(reason: "")
  """Kenya"""
  KE @deprecated(reason: "")
  """Kiribati"""
  KI @deprecated(reason: "")
  """Kuwait"""
  KW @deprecated(reason: "")
  """Kyrgyzstan"""
  KG @deprecated(reason: "")
  """Laos"""
  LA @deprecated(reason: "")
  """Latvia"""
  LV @deprecated(reason: "")
  """Lebanon"""
  LB @deprecated(reason: "")
  """Lesotho"""
  LS @deprecated(reason: "")
  """Liberia"""
  LR @deprecated(reason: "")
  """Libya"""
  LY @deprecated(reason: "")
  """Liechtenstein"""
  LI @deprecated(reason: "")
  """Lithuania"""
  LT @deprecated(reason: "")
  """Luxembourg"""
  LU @deprecated(reason: "")
  """Macau SAR China"""
  MO @deprecated(reason: "")
  """Macedonia"""
  MK @deprecated(reason: "")
  """Madagascar"""
  MG @deprecated(reason: "")
  """Malawi"""
  MW @deprecated(reason: "")
  """Malaysia"""
  MY @deprecated(reason: "")
  """Maldives"""
  MV @deprecated(reason: "")
  """Mali"""
  ML @deprecated(reason: "")
  """Malta"""
  MT @deprecated(reason: "")
  """Marshall Islands"""
  MH @deprecated(reason: "")
  """Martinique"""
  MQ @deprecated(reason: "")
  """Mauritania"""
  MR @deprecated(reason: "")
  """Mauritius"""
  MU @deprecated(reason: "")
  """Mayotte"""
  YT @deprecated(reason: "")
  """Mexico"""
  MX @deprecated(reason: "")
  """Micronesia"""
  FM @deprecated(reason: "")
  """Moldova"""
  MD @deprecated(reason: "")
  """Monaco"""
  MC @deprecated(reason: "")
  """Mongolia"""
  MN @deprecated(reason: "")
  """Montenegro"""
  ME @deprecated(reason: "")
  """Montserrat"""
  MS @deprecated(reason: "")
  """Morocco"""
  MA @deprecated(reason: "")
  """Mozambique"""
  MZ @deprecated(reason: "")
  """Myanmar (Burma)"""
  MM @deprecated(reason: "")
  """Namibia"""
  NA @deprecated(reason: "")
  """Nauru"""
  NR @deprecated(reason: "")
  """Nepal"""
  NP @deprecated(reason: "")
  """Netherlands"""
  NL @deprecated(reason: "")
  """Netherlands Antilles"""
  AN @deprecated(reason: "")
  """New Caledonia"""
  NC @deprecated(reason: "")
  """New Zealand"""
  NZ @deprecated(reason: "")
  """Nicaragua"""
  NI @deprecated(reason: "")
  """Niger"""
  NE @deprecated(reason: "")
  """Nigeria"""
  NG @deprecated(reason: "")
  """Niue"""
  NU @deprecated(reason: "")
  """Norfolk Island"""
  NF @deprecated(reason: "")
  """Northern Mariana Islands"""
  MP @deprecated(reason: "")
  """North Korea"""
  KP @deprecated(reason: "")
  """Norway"""
  NO @deprecated(reason: "")
  """Oman"""
  OM @deprecated(reason: "")
  """Pakistan"""
  PK @deprecated(reason: "")
  """Palau"""
  PW @deprecated(reason: "")
  """Palestinian Territories"""
  PS @deprecated(reason: "")
  """Panama"""
  PA @deprecated(reason: "")
  """Papua New Guinea"""
  PG @deprecated(reason: "")
  """Paraguay"""
  PY @deprecated(reason: "")
  """Peru"""
  PE @deprecated(reason: "")
  """Philippines"""
  PH @deprecated(reason: "")
  """Pitcairn Islands"""
  PN @deprecated(reason: "")
  """Poland"""
  PL @deprecated(reason: "")
  """Portugal"""
  PT @deprecated(reason: "")
  """Qatar"""
  QA @deprecated(reason: "")
  """Réunion"""
  RE @deprecated(reason: "")
  """Romania"""
  RO @deprecated(reason: "")
  """Russia"""
  RU @deprecated(reason: "")
  """Rwanda"""
  RW @deprecated(reason: "")
  """Samoa"""
  WS @deprecated(reason: "")
  """San Marino"""
  SM @deprecated(reason: "")
  """São Tomé & Príncipe"""
  ST @deprecated(reason: "")
  """Saudi Arabia"""
  SA @deprecated(reason: "")
  """Senegal"""
  SN @deprecated(reason: "")
  """Serbia"""
  RS @deprecated(reason: "")
  """Seychelles"""
  SC @deprecated(reason: "")
  """Sierra Leone"""
  SL @deprecated(reason: "")
  """Singapore"""
  SG @deprecated(reason: "")
  """Slovakia"""
  SK @deprecated(reason: "")
  """Slovenia"""
  SI @deprecated(reason: "")
  """Solomon Islands"""
  SB @deprecated(reason: "")
  """Somalia"""
  SO @deprecated(reason: "")
  """South Africa"""
  ZA @deprecated(reason: "")
  """South Georgia & South Sandwich Islands"""
  GS @deprecated(reason: "")
  """South Korea"""
  KR @deprecated(reason: "")
  """Spain"""
  ES @deprecated(reason: "")
  """Sri Lanka"""
  LK @deprecated(reason: "")
  """St. Barthélemy"""
  BL @deprecated(reason: "")
  """St. Helena"""
  SH @deprecated(reason: "")
  """St. Kitts & Nevis"""
  KN @deprecated(reason: "")
  """St. Lucia"""
  LC @deprecated(reason: "")
  """St. Martin"""
  MF @deprecated(reason: "")
  """St. Pierre & Miquelon"""
  PM @deprecated(reason: "")
  """St. Vincent & Grenadines"""
  VC @deprecated(reason: "")
  """Sudan"""
  SD @deprecated(reason: "")
  """Suriname"""
  SR @deprecated(reason: "")
  """Svalbard & Jan Mayen"""
  SJ @deprecated(reason: "")
  """Swaziland"""
  SZ @deprecated(reason: "")
  """Sweden"""
  SE @deprecated(reason: "")
  """Switzerland"""
  CH @deprecated(reason: "")
  """Syria"""
  SY @deprecated(reason: "")
  """Taiwan"""
  TW @deprecated(reason: "")
  """Tajikistan"""
  TJ @deprecated(reason: "")
  """Tanzania"""
  TZ @deprecated(reason: "")
  """Thailand"""
  TH @deprecated(reason: "")
  """Timor-Leste"""
  TL @deprecated(reason: "")
  """Togo"""
  TG @deprecated(reason: "")
  """Tokelau"""
  TK @deprecated(reason: "")
  """Tonga"""
  TO @deprecated(reason: "")
  """Trinidad & Tobago"""
  TT @deprecated(reason: "")
  """Tunisia"""
  TN @deprecated(reason: "")
  """Turkey"""
  TR @deprecated(reason: "")
  """Turkmenistan"""
  TM @deprecated(reason: "")
  """Turks & Caicos Islands"""
  TC @deprecated(reason: "")
  """Tuvalu"""
  TV @deprecated(reason: "")
  """Uganda"""
  UG @deprecated(reason: "")
  """Ukraine"""
  UA @deprecated(reason: "")
  """United Arab Emirates"""
  AE @deprecated(reason: "")
  """United Kingdom"""
  GB @deprecated(reason: "")
  """United States"""
  US @deprecated(reason: "")
  """Uruguay"""
  UY @deprecated(reason: "")
  """U.S. Outlying Islands"""
  UM @deprecated(reason: "")
  """U.S. Virgin Islands"""
  VI @deprecated(reason: "")
  """Uzbekistan"""
  UZ @deprecated(reason: "")
  """Vanuatu"""
  VU @deprecated(reason: "")
  """Vatican City"""
  VA @deprecated(reason: "")
  """Venezuela"""
  VE @deprecated(reason: "")
  """Vietnam"""
  VN @deprecated(reason: "")
  """Wallis & Futuna"""
  WF @deprecated(reason: "")
  """Western Sahara"""
  EH @deprecated(reason: "")
  """Yemen"""
  YE @deprecated(reason: "")
  """Zambia"""
  ZM @deprecated(reason: "")
  """Zimbabwe"""
  ZW @deprecated(reason: "")
}

type Currency {
  """
  An array of three-letter currency codes accepted by the store, such as USD and EUR.
  """
  available_currency_codes: [String]
  """The base currency set for the store, such as USD."""
  base_currency_code: String
  """The symbol for the specified base currency, such as $."""
  base_currency_symbol: String
  default_display_currecy_code: String @deprecated(reason: "Symbol was missed. Use `default_display_currency_code`.")
  default_display_currecy_symbol: String @deprecated(reason: "Symbol was missed. Use `default_display_currency_code`.")
  """The currency that is displayed by default, such as USD."""
  default_display_currency_code: String
  """The currency symbol that is displayed by default, such as $."""
  default_display_currency_symbol: String
  """An array of exchange rates for currencies defined in the store."""
  exchange_rates: [ExchangeRate]
}

"""Lists the exchange rate."""
type ExchangeRate {
  """Specifies the store’s default currency to exchange to."""
  currency_to: String
  """The exchange rate for the store’s default currency."""
  rate: Float
}

type Country {
  """An array of regions within a particular country."""
  available_regions: [Region]
  """The name of the country in English."""
  full_name_english: String
  """The name of the country in the current locale."""
  full_name_locale: String
  """The unique ID for a `Country` object."""
  id: String
  """The three-letter abbreviation of the country, such as USA."""
  three_letter_abbreviation: String
  """The two-letter abbreviation of the country, such as US."""
  two_letter_abbreviation: String
}

type Region {
  """The two-letter code for the region, such as TX for Texas."""
  code: String
  """The unique ID for a `Region` object."""
  id: Int
  """The name of the region, such as Texas."""
  name: String
}

input AddDownloadableProductsToCartInput {
  """The ID of the cart."""
  cart_id: String!
  """An array of downloadable products to add."""
  cart_items: [DownloadableProductCartItemInput]!
}

"""Defines a single downloadable product."""
input DownloadableProductCartItemInput {
  """The ID and value of the option."""
  customizable_options: [CustomizableOptionInput]
  """The quantity and SKU of the downloadable product."""
  data: CartItemInput!
  """
  An array of objects containing the link_id of the downloadable product link.
  """
  downloadable_product_links: [DownloadableProductLinksInput]
}

"""Contains the link ID for the downloadable product."""
input DownloadableProductLinksInput {
  """The unique ID of the downloadable product link."""
  link_id: Int!
}

"""Contains details about the cart after adding downloadable products."""
type AddDownloadableProductsToCartOutput {
  """The cart after adding products."""
  cart: Cart!
}

type DownloadableCartItem implements CartItemInterface {
  """An array containing the customizable options the shopper selected."""
  customizable_options: [SelectedCustomizableOption]!
  "An array of errors encountered while loading the cart item"
  errors: [CartItemError]
  id: String! @deprecated(reason: "Use `uid` instead.")
  """
  An array containing information about the links for the downloadable product added to the cart.
  """
  links: [DownloadableProductLinks]
  """
  Contains details about the price of the item, including taxes and discounts.
  """
  prices: CartItemPrices
  """Details about an item in the cart."""
  product: ProductInterface!
  """The quantity of this item in the cart."""
  quantity: Float!
  """
  An array containing information about samples of the selected downloadable product.
  """
  samples: [DownloadableProductSamples]
  """The unique ID for a `CartItemInterface` object."""
  uid: ID!
}

"""Defines a product that the shopper downloads."""
type DownloadableProduct implements ProductInterface & RoutableInterface & CustomizableProductInterface {
  activity: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  brand: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """
  The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled.
  """
  canonical_url: String
  """The categories assigned to a product."""
  categories: [CategoryInterface]
  category_gear: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  climate: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  collar: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  colors: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  compatible_phones: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The product's country of origin."""
  country_of_manufacture: String
  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Crosssell Products"""
  crosssell_products: [ProductInterface]
  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue
  dominant_color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """
  An array containing information about the links for this downloadable product.
  """
  downloadable_product_links: [DownloadableProductLinks]
  """
  An array containing information about samples of this downloadable product.
  """
  downloadable_product_samples: [DownloadableProductSamples]
  eco_collection: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  erin_recommends: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  features_bags: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  format: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  gender: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """Indicates whether a gift message is available."""
  gift_message_available: String
  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")
  """The relative path to the main image on the product page."""
  image: ProductImage
  """
  A value of 1 indicates that each link in the array must be purchased separately.
  """
  links_purchased_separately: Int
  """The heading above the list of downloadable products."""
  links_title: String
  """A number representing the product's manufacturer."""
  manufacturer: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  material: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of media gallery objects."""
  media_gallery: [MediaGalleryInterface]
  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use `media_gallery` instead.")
  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String
  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String
  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  """The product name. Customers use this name to identify the product."""
  name: String
  new: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String
  """The end date for new product listings."""
  new_to_date: String
  """Product stock only x left count"""
  only_x_left_in_stock: Float
  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]
  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String
  pattern: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  performance_fabric: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """Indicates the price of an item."""
  price: ProductPrices @deprecated(reason: "Use `price_range` for product price information.")
  """The range of prices for the product"""
  price_range: PriceRange!
  """An array of `TierPrice` objects."""
  price_tiers: [TierPrice]
  print_art: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_holiday: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_labels: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_landmarks: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_landscape: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_mood: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_pattern_swatch: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_type: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of `ProductLinks` objects."""
  product_links: [ProductLinksInterface]
  """The average of all the ratings given to the product."""
  rating_summary: Float!
  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
  """
  redirect_code: Int!
  """An array of products to be displayed in a Related Products block."""
  related_products: [ProductInterface]
  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String
  """The total count of all the reviews given to the product."""
  review_count: Int!
  """The list of products reviews."""
  reviews(
    """The maximum number of results to return at once. The default is 20."""
    pageSize: Int = 20
    """The page of results to return. The default is 1."""
    currentPage: Int = 1
  ): ProductReviews!
  sale: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  size: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String
  sleeve: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage
  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The discounted price of the product."""
  special_price: Float
  """The end date for a product with a special price."""
  special_to_date: String
  """Stock status of the product"""
  stock_status: ProductStockStatus
  strap_bags: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  style_bags: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  style_bottom: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  style_general: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The file name of a swatch image."""
  swatch_image: String
  th_test_attribute: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage
  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum
  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use `__typename` instead.")
  """The unique ID for a `ProductInterface` object."""
  uid: ID!
  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Upsell Products"""
  upsell_products: [ProductInterface]
  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")
  """URL rewrites list"""
  url_rewrites: [UrlRewrite]
  """The part of the product URL that is appended after the url key"""
  url_suffix: String
  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
}

enum DownloadableFileTypeEnum {
  FILE @deprecated(reason: "`sample_url` serves to get the downloadable sample")
  URL @deprecated(reason: "`sample_url` serves to get the downloadable sample")
}

"""Defines characteristics of a downloadable product."""
type DownloadableProductLinks {
  id: Int @deprecated(reason: "This information should not be exposed on frontend.")
  is_shareable: Boolean @deprecated(reason: "This information should not be exposed on frontend.")
  link_type: DownloadableFileTypeEnum @deprecated(reason: "`sample_url` serves to get the downloadable sample")
  number_of_downloads: Int @deprecated(reason: "This information should not be exposed on frontend.")
  """The price of the downloadable product."""
  price: Float
  sample_file: String @deprecated(reason: "`sample_url` serves to get the downloadable sample")
  sample_type: DownloadableFileTypeEnum @deprecated(reason: "`sample_url` serves to get the downloadable sample")
  """The full URL to the downloadable sample."""
  sample_url: String
  """A number indicating the sort order."""
  sort_order: Int
  """The display name of the link."""
  title: String
  """The unique ID for a `DownloadableProductLinks` object."""
  uid: ID!
}

"""Defines characteristics of a downloadable product."""
type DownloadableProductSamples {
  id: Int @deprecated(reason: "This information should not be exposed on frontend.")
  sample_file: String @deprecated(reason: "`sample_url` serves to get the downloadable sample")
  sample_type: DownloadableFileTypeEnum @deprecated(reason: "`sample_url` serves to get the downloadable sample")
  """The full URL to the downloadable sample."""
  sample_url: String
  """A number indicating the sort order."""
  sort_order: Int
  """The display name of the sample."""
  title: String
}

"""Defines downloadable product options for `OrderItemInterface`."""
type DownloadableOrderItem implements OrderItemInterface {
  """The final discount information for the product."""
  discounts: [Discount]
  """
  A list of downloadable links that are ordered from the downloadable product.
  """
  downloadable_links: [DownloadableItemsLinks]
  """The entered option for the base product, such as a logo or image."""
  entered_options: [OrderItemOption]
  """The selected gift message for the order item"""
  gift_message: GiftMessage
  """The unique ID for an `OrderItemInterface` object."""
  id: ID!
  """The name of the base product."""
  product_name: String
  """The sale price of the base product, including selected options."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The type of product, such as simple, configurable, etc."""
  product_type: String
  """URL key of the base product."""
  product_url_key: String
  """The number of canceled items."""
  quantity_canceled: Float
  """The number of invoiced items."""
  quantity_invoiced: Float
  """The number of units ordered for this item."""
  quantity_ordered: Float
  """The number of refunded items."""
  quantity_refunded: Float
  """The number of returned items."""
  quantity_returned: Float
  """The number of shipped items."""
  quantity_shipped: Float
  """The selected options for the base product, such as color or size."""
  selected_options: [OrderItemOption]
  """The status of the order item."""
  status: String
}

"""Defines downloadable product options for `InvoiceItemInterface`."""
type DownloadableInvoiceItem implements InvoiceItemInterface {
  """
  Information about the final discount amount for the base product, including discounts on options.
  """
  discounts: [Discount]
  """
  A list of downloadable links that are invoiced from the downloadable product.
  """
  downloadable_links: [DownloadableItemsLinks]
  """The unique ID for an `InvoiceItemInterface` object."""
  id: ID!
  """Details about an individual order item."""
  order_item: OrderItemInterface
  """The name of the base product."""
  product_name: String
  """The sale price for the base product including selected options."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The number of invoiced items."""
  quantity_invoiced: Float
}

"""Defines downloadable product options for `CreditMemoItemInterface`."""
type DownloadableCreditMemoItem implements CreditMemoItemInterface {
  """
  Details about the final discount amount for the base product, including discounts on options.
  """
  discounts: [Discount]
  """
  A list of downloadable links that are refunded from the downloadable product.
  """
  downloadable_links: [DownloadableItemsLinks]
  """The unique ID for a `CreditMemoItemInterface` object."""
  id: ID!
  """The order item the credit memo is applied to."""
  order_item: OrderItemInterface
  """The name of the base product."""
  product_name: String
  """The sale price for the base product, including selected options."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The number of refunded items."""
  quantity_refunded: Float
}

"""Defines characteristics of the links for downloadable product."""
type DownloadableItemsLinks {
  """A number indicating the sort order."""
  sort_order: Int
  """The display name of the link."""
  title: String
  """The unique ID for a `DownloadableItemsLinks` object."""
  uid: ID!
}

"""A downloadable product wish list item."""
type DownloadableWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list."""
  added_at: String!
  """Custom options selected for the wish list item."""
  customizable_options: [SelectedCustomizableOption]!
  """The description of the item."""
  description: String
  """The unique ID for a `WishlistItemInterface` object."""
  id: ID!
  """An array containing information about the selected links."""
  links_v2: [DownloadableProductLinks]
  """Product details of the wish list item."""
  product: ProductInterface
  """The quantity of this wish list item."""
  quantity: Float!
  """An array containing information about the selected samples."""
  samples: [DownloadableProductSamples]
}

"""Contains a list of downloadable products."""
type CustomerDownloadableProducts {
  """An array of purchased downloadable items."""
  items: [CustomerDownloadableProduct]
}

"""Contains details about a single downloadable product."""
type CustomerDownloadableProduct {
  """The date and time the purchase was made."""
  date: String
  """The fully qualified URL to the download file."""
  download_url: String
  """The unique ID assigned to the item."""
  order_increment_id: String
  """The remaining number of times the customer can download the product."""
  remaining_downloads: String
  """
  Indicates when the product becomes available for download. Options are `Pending` and `Invoiced`.
  """
  status: String
}

"""
Deprecated. Use `TierPrice` instead. Defines a tier price, which is a quantity discount offered to a specific customer group.
"""
type ProductTierPrices {
  """The ID of the customer group."""
  customer_group_id: String @deprecated(reason: "Not relevant for the storefront.")
  """The percentage discount of the item."""
  percentage_value: Float @deprecated(reason: "Use `TierPrice.discount` instead.")
  """
  The number of items that must be purchased to qualify for tier pricing.
  """
  qty: Float @deprecated(reason: "Use `TierPrice.quantity` instead.")
  """The price of the fixed price item."""
  value: Float @deprecated(reason: "Use `TierPrice.final_price` instead.")
  """The ID assigned to the website."""
  website_id: Float @deprecated(reason: "Not relevant for the storefront.")
}

"""Defines a price based on the quantity purchased."""
type TierPrice {
  """The price discount that this tier represents."""
  discount: ProductDiscount
  """The price of the product at this tier."""
  final_price: Money
  """
  The minimum number of items that must be purchased to qualify for this price tier.
  """
  quantity: Float
}

type ConfigurableCartItem implements CartItemInterface {
  """An array containing the configuranle options the shopper selected."""
  configurable_options: [SelectedConfigurableOption]!
  """Product details of the cart item."""
  configured_variant: ProductInterface!
  """An array containing the customizable options the shopper selected."""
  customizable_options: [SelectedCustomizableOption]!
  "An array of errors encountered while loading the cart item"
  errors: [CartItemError]
  """The entered gift message for the cart item"""
  gift_message: GiftMessage
  id: String! @deprecated(reason: "Use `uid` instead.")
  """
  Contains details about the price of the item, including taxes and discounts.
  """
  prices: CartItemPrices
  """Details about an item in the cart."""
  product: ProductInterface!
  """The quantity of this item in the cart."""
  quantity: Float!
  """The unique ID for a `CartItemInterface` object."""
  uid: ID!
}

type BundleCartItem implements CartItemInterface {
  """An array containing the bundle options the shopper selected."""
  bundle_options: [SelectedBundleOption]!
  """An array containing the customizable options the shopper selected."""
  customizable_options: [SelectedCustomizableOption]!
  "An array of errors encountered while loading the cart item"
  errors: [CartItemError]
  """The entered gift message for the cart item"""
  gift_message: GiftMessage
  id: String! @deprecated(reason: "Use `uid` instead.")
  """
  Contains details about the price of the item, including taxes and discounts.
  """
  prices: CartItemPrices
  """Details about an item in the cart."""
  product: ProductInterface!
  """The quantity of this item in the cart."""
  quantity: Float!
  """The unique ID for a `CartItemInterface` object."""
  uid: ID!
}

"""Contains the text of a gift message, its sender, and recipient"""
type GiftMessage {
  """Sender name"""
  from: String!
  """Gift message text"""
  message: String!
  """Recipient name"""
  to: String!
}

"""Contains the text of a gift message, its sender, and recipient"""
input GiftMessageInput {
  """Sender name"""
  from: String!
  """Gift message text"""
  message: String!
  """Recipient name"""
  to: String!
}

type SalesItemInterface {
  """The entered gift message for the order item"""
  gift_message: GiftMessage
}

"""Contains details about each of the customer's orders."""
type CustomerOrder {
  """The billing address for the order."""
  billing_address: OrderAddress
  """The shipping carrier for the order delivery."""
  carrier: String
  """Comments about the order."""
  comments: [SalesCommentItem]
  created_at: String @deprecated(reason: "Use the `order_date` field instead.")
  """A list of credit memos."""
  credit_memos: [CreditMemo]
  """The entered gift message for the order"""
  gift_message: GiftMessage
  grand_total: Float @deprecated(reason: "Use the `totals.grand_total` field instead.")
  """The unique ID for a `CustomerOrder` object."""
  id: ID!
  increment_id: String @deprecated(reason: "Use the `id` field instead.")
  """A list of invoices for the order."""
  invoices: [Invoice]!
  """An array containing the items purchased in this order."""
  items: [OrderItemInterface]
  """The order number."""
  number: String!
  """The date the order was placed."""
  order_date: String!
  order_number: String! @deprecated(reason: "Use the `number` field instead.")
  """Payment details for the order."""
  payment_methods: [OrderPaymentMethod]
  """A list of shipments for the order."""
  shipments: [OrderShipment]
  """The shipping address for the order."""
  shipping_address: OrderAddress
  """The delivery method for the order."""
  shipping_method: String
  """The current status of the order."""
  status: String!
  """Details about the calculated totals for this order."""
  total: OrderTotal
}

"""Order item details."""
interface OrderItemInterface {
  """The final discount information for the product."""
  discounts: [Discount]
  """The entered option for the base product, such as a logo or image."""
  entered_options: [OrderItemOption]
  """The selected gift message for the order item"""
  gift_message: GiftMessage
  """The unique ID for an `OrderItemInterface` object."""
  id: ID!
  """The name of the base product."""
  product_name: String
  """The sale price of the base product, including selected options."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The type of product, such as simple, configurable, etc."""
  product_type: String
  """URL key of the base product."""
  product_url_key: String
  """The number of canceled items."""
  quantity_canceled: Float
  """The number of invoiced items."""
  quantity_invoiced: Float
  """The number of units ordered for this item."""
  quantity_ordered: Float
  """The number of refunded items."""
  quantity_refunded: Float
  """The number of returned items."""
  quantity_returned: Float
  """The number of shipped items."""
  quantity_shipped: Float
  """The selected options for the base product, such as color or size."""
  selected_options: [OrderItemOption]
  """The status of the order item."""
  status: String
}

"""Defines the bundle products to add to the cart."""
input AddBundleProductsToCartInput {
  """The ID of the cart."""
  cart_id: String!
  """An array of bundle products to add."""
  cart_items: [BundleProductCartItemInput]!
}

"""Defines a single bundle product."""
input BundleProductCartItemInput {
  """
  A mandatory array of options for the bundle product, including each chosen option and specified quantity.
  """
  bundle_options: [BundleOptionInput]!
  """The ID and value of the option."""
  customizable_options: [CustomizableOptionInput]
  """The quantity and SKU of the bundle product."""
  data: CartItemInput!
}

"""Defines the input for a bundle option."""
input BundleOptionInput {
  """The ID of the option."""
  id: Int!
  """The number of the selected item to add to the cart."""
  quantity: Float!
  """An array with the chosen value of the option."""
  value: [String]!
}

"""Contains details about the cart after adding bundle products."""
type AddBundleProductsToCartOutput {
  """The cart after adding products."""
  cart: Cart!
}

"""Contains details about a selected bundle option."""
type SelectedBundleOption {
  id: Int! @deprecated(reason: "Use `uid` instead")
  """The display name of the selected bundle product option."""
  label: String!
  """The type of selected bundle product option."""
  type: String!
  """The unique ID for a `SelectedBundleOption` object"""
  uid: ID!
  """An array of selected bundle option values."""
  values: [SelectedBundleOptionValue]!
}

"""Contains details about a value for a selected bundle option."""
type SelectedBundleOptionValue {
  """Use `uid` instead"""
  id: Int!
  """The display name of the value for the selected bundle product option."""
  label: String!
  """The price of the value for the selected bundle product option."""
  price: Float!
  """The quantity of the value for the selected bundle product option."""
  quantity: Float!
  """The unique ID for a `SelectedBundleOptionValue` object"""
  uid: ID!
}

"""Defines an individual item within a bundle product."""
type BundleItem {
  """An ID assigned to each type of item in a bundle product."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """An array of additional options for this bundle item."""
  options: [BundleItemOption]
  """
  A number indicating the sequence order of this item compared to the other bundle items.
  """
  position: Int
  """The range of prices for the product"""
  price_range: PriceRange!
  """Indicates whether the item must be included in the bundle."""
  required: Boolean
  """The SKU of the bundle product."""
  sku: String
  """The display name of the item."""
  title: String
  """
  The input type that the customer uses to select the item. Examples include radio button and checkbox.
  """
  type: String
  """The unique ID for a `BundleItem` object."""
  uid: ID
}

"""
Defines the characteristics that comprise a specific bundle item and its options.
"""
type BundleItemOption {
  """
  Indicates whether the customer can change the number of items for this option.
  """
  can_change_quantity: Boolean
  """The ID assigned to the bundled item option."""
  id: Int @deprecated(reason: "Use `uid` instead")
  """Indicates whether this option is the default option."""
  is_default: Boolean
  """The text that identifies the bundled item option."""
  label: String
  """
  When a bundle item contains multiple options, the relative position of this option compared to the other options.
  """
  position: Int
  """The price of the selected option."""
  price: Float
  """One of FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum
  """Contains details about this product option."""
  product: ProductInterface
  """Indicates the quantity of this specific bundle item."""
  qty: Float @deprecated(reason: "Use `quantity` instead.")
  """The quantity of this specific bundle item."""
  quantity: Float
  """The unique ID for a `BundleItemOption` object."""
  uid: ID!
}

"""
Defines basic features of a bundle product and contains multiple BundleItems.
"""
type BundleProduct implements ProductInterface & RoutableInterface & PhysicalProductInterface & CustomizableProductInterface {
  activity: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  brand: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """
  The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled.
  """
  canonical_url: String
  """The categories assigned to a product."""
  categories: [CategoryInterface]
  category_gear: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  climate: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  collar: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  colors: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  compatible_phones: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The product's country of origin."""
  country_of_manufacture: String
  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Crosssell Products"""
  crosssell_products: [ProductInterface]
  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue
  dominant_color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """Indicates whether the bundle product has a dynamic price."""
  dynamic_price: Boolean
  """Indicates whether the bundle product has a dynamic SKU."""
  dynamic_sku: Boolean
  """
  Indicates whether the bundle product has a dynamically calculated weight.
  """
  dynamic_weight: Boolean
  eco_collection: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  erin_recommends: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  features_bags: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  format: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  gender: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """Indicates whether a gift message is available."""
  gift_message_available: String
  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")
  """The relative path to the main image on the product page."""
  image: ProductImage
  """An array containing information about individual bundle items."""
  items: [BundleItem]
  """A number representing the product's manufacturer."""
  manufacturer: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  material: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of media gallery objects."""
  media_gallery: [MediaGalleryInterface]
  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use `media_gallery` instead.")
  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String
  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String
  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  """The product name. Customers use this name to identify the product."""
  name: String
  new: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String
  """The end date for new product listings."""
  new_to_date: String
  """Product stock only x left count"""
  only_x_left_in_stock: Float
  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]
  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String
  pattern: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  performance_fabric: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """Indicates the price of an item."""
  price: ProductPrices @deprecated(reason: "Use `price_range` for product price information.")
  """The range of prices for the product"""
  price_range: PriceRange!
  """An array of `TierPrice` objects."""
  price_tiers: [TierPrice]
  """One of PRICE_RANGE or AS_LOW_AS."""
  price_view: PriceViewEnum
  print_art: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_holiday: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_labels: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_landmarks: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_landscape: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_mood: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_pattern_swatch: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_type: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of `ProductLinks` objects."""
  product_links: [ProductLinksInterface]
  """The average of all the ratings given to the product."""
  rating_summary: Float!
  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
  """
  redirect_code: Int!
  """An array of products to be displayed in a Related Products block."""
  related_products: [ProductInterface]
  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String
  """The total count of all the reviews given to the product."""
  review_count: Int!
  """The list of products reviews."""
  reviews(
    """The maximum number of results to return at once. The default is 20."""
    pageSize: Int = 20
    """The page of results to return. The default is 1."""
    currentPage: Int = 1
  ): ProductReviews!
  sale: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """Indicates whether to ship bundle items together or individually."""
  ship_bundle_items: ShipBundleItemsEnum
  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  size: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String
  sleeve: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage
  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The discounted price of the product."""
  special_price: Float
  """The end date for a product with a special price."""
  special_to_date: String
  """Stock status of the product"""
  stock_status: ProductStockStatus
  strap_bags: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  style_bags: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  style_bottom: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  style_general: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The file name of a swatch image."""
  swatch_image: String
  th_test_attribute: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage
  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum
  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use `__typename` instead.")
  """The unique ID for a `ProductInterface` object."""
  uid: ID!
  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Upsell Products"""
  upsell_products: [ProductInterface]
  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")
  """URL rewrites list"""
  url_rewrites: [UrlRewrite]
  """The part of the product URL that is appended after the url key"""
  url_suffix: String
  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
  """The weight of the item, in units defined by the store."""
  weight: Float
}

"""
Defines whether a bundle product's price is displayed as the lowest possible value or as a range.
"""
enum PriceViewEnum {
  PRICE_RANGE @deprecated(reason: "")
  AS_LOW_AS @deprecated(reason: "")
}

"""Defines whether bundle items must be shipped together."""
enum ShipBundleItemsEnum {
  TOGETHER @deprecated(reason: "")
  SEPARATELY @deprecated(reason: "")
}

"""Defines bundle product options for `OrderItemInterface`."""
type BundleOrderItem implements OrderItemInterface {
  """A list of bundle options that are assigned to the bundle product."""
  bundle_options: [ItemSelectedBundleOption]
  """The final discount information for the product."""
  discounts: [Discount]
  """The entered option for the base product, such as a logo or image."""
  entered_options: [OrderItemOption]
  """The selected gift message for the order item"""
  gift_message: GiftMessage
  """The unique ID for an `OrderItemInterface` object."""
  id: ID!
  """The name of the base product."""
  product_name: String
  """The sale price of the base product, including selected options."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The type of product, such as simple, configurable, etc."""
  product_type: String
  """URL key of the base product."""
  product_url_key: String
  """The number of canceled items."""
  quantity_canceled: Float
  """The number of invoiced items."""
  quantity_invoiced: Float
  """The number of units ordered for this item."""
  quantity_ordered: Float
  """The number of refunded items."""
  quantity_refunded: Float
  """The number of returned items."""
  quantity_returned: Float
  """The number of shipped items."""
  quantity_shipped: Float
  """The selected options for the base product, such as color or size."""
  selected_options: [OrderItemOption]
  """The status of the order item."""
  status: String
}

"""Defines bundle product options for `InvoiceItemInterface`."""
type BundleInvoiceItem implements InvoiceItemInterface {
  """
  A list of bundle options that are assigned to an invoiced bundle product.
  """
  bundle_options: [ItemSelectedBundleOption]
  """
  Information about the final discount amount for the base product, including discounts on options.
  """
  discounts: [Discount]
  """The unique ID for an `InvoiceItemInterface` object."""
  id: ID!
  """Details about an individual order item."""
  order_item: OrderItemInterface
  """The name of the base product."""
  product_name: String
  """The sale price for the base product including selected options."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The number of invoiced items."""
  quantity_invoiced: Float
}

"""Defines bundle product options for `ShipmentItemInterface`."""
type BundleShipmentItem implements ShipmentItemInterface {
  """A list of bundle options that are assigned to a shipped product."""
  bundle_options: [ItemSelectedBundleOption]
  """The unique ID for a `ShipmentItemInterface` object."""
  id: ID!
  """The order item associated with the shipment item."""
  order_item: OrderItemInterface
  """The name of the base product."""
  product_name: String
  """The sale price for the base product."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The number of shipped items."""
  quantity_shipped: Float!
}

"""Defines bundle product options for `CreditMemoItemInterface`."""
type BundleCreditMemoItem implements CreditMemoItemInterface {
  """
  A list of bundle options that are assigned to a bundle product that is part of a credit memo.
  """
  bundle_options: [ItemSelectedBundleOption]
  """
  Details about the final discount amount for the base product, including discounts on options.
  """
  discounts: [Discount]
  """The unique ID for a `CreditMemoItemInterface` object."""
  id: ID!
  """The order item the credit memo is applied to."""
  order_item: OrderItemInterface
  """The name of the base product."""
  product_name: String
  """The sale price for the base product, including selected options."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The number of refunded items."""
  quantity_refunded: Float
}

"""A list of options of the selected bundle product."""
type ItemSelectedBundleOption {
  """The unique ID for a `ItemSelectedBundleOption` object."""
  id: ID! @deprecated(reason: "Use `uid` instead.")
  """The label of the option."""
  label: String!
  """The unique ID for a `ItemSelectedBundleOption` object."""
  uid: ID!
  """A list of products that represent the values of the parent option."""
  values: [ItemSelectedBundleOptionValue]
}

"""A list of values for the selected bundle product."""
type ItemSelectedBundleOptionValue {
  """The unique ID for a `ItemSelectedBundleOptionValue` object."""
  id: ID! @deprecated(reason: "Use `uid` instead.")
  """The price of the child bundle product."""
  price: Money!
  """The name of the child bundle product."""
  product_name: String!
  """The SKU of the child bundle product."""
  product_sku: String!
  """The number of this bundle product that were ordered."""
  quantity: Float!
  """The unique ID for a `ItemSelectedBundleOptionValue` object."""
  uid: ID!
}

"""Defines bundle product options for `WishlistItemInterface`."""
type BundleWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list."""
  added_at: String!
  """An array containing information about the selected bundle items."""
  bundle_options: [SelectedBundleOption]
  """Custom options selected for the wish list item."""
  customizable_options: [SelectedCustomizableOption]!
  """The description of the item."""
  description: String
  """The unique ID for a `WishlistItemInterface` object."""
  id: ID!
  """Product details of the wish list item."""
  product: ProductInterface
  """The quantity of this wish list item."""
  quantity: Float!
}

"""
Defines a grouped product, which consists of simple standalone products that are presented as a group.
"""
type GroupedProduct implements ProductInterface & RoutableInterface & PhysicalProductInterface {
  activity: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  brand: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """
  The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled.
  """
  canonical_url: String
  """The categories assigned to a product."""
  categories: [CategoryInterface]
  category_gear: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  climate: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  collar: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  colors: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  compatible_phones: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The product's country of origin."""
  country_of_manufacture: String
  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Crosssell Products"""
  crosssell_products: [ProductInterface]
  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue
  dominant_color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  eco_collection: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  erin_recommends: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  features_bags: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  format: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  gender: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """Indicates whether a gift message is available."""
  gift_message_available: String
  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")
  """The relative path to the main image on the product page."""
  image: ProductImage
  """An array containing grouped product items."""
  items: [GroupedProductItem]
  """A number representing the product's manufacturer."""
  manufacturer: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  material: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of media gallery objects."""
  media_gallery: [MediaGalleryInterface]
  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use `media_gallery` instead.")
  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String
  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String
  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  """The product name. Customers use this name to identify the product."""
  name: String
  new: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String
  """The end date for new product listings."""
  new_to_date: String
  """Product stock only x left count"""
  only_x_left_in_stock: Float
  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String
  pattern: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  performance_fabric: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """Indicates the price of an item."""
  price: ProductPrices @deprecated(reason: "Use `price_range` for product price information.")
  """The range of prices for the product"""
  price_range: PriceRange!
  """An array of `TierPrice` objects."""
  price_tiers: [TierPrice]
  print_art: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_holiday: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_labels: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_landmarks: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_landscape: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_mood: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_pattern_swatch: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_type: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of `ProductLinks` objects."""
  product_links: [ProductLinksInterface]
  """The average of all the ratings given to the product."""
  rating_summary: Float!
  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
  """
  redirect_code: Int!
  """An array of products to be displayed in a Related Products block."""
  related_products: [ProductInterface]
  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String
  """The total count of all the reviews given to the product."""
  review_count: Int!
  """The list of products reviews."""
  reviews(
    """The maximum number of results to return at once. The default is 20."""
    pageSize: Int = 20
    """The page of results to return. The default is 1."""
    currentPage: Int = 1
  ): ProductReviews!
  sale: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  size: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String
  sleeve: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage
  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The discounted price of the product."""
  special_price: Float
  """The end date for a product with a special price."""
  special_to_date: String
  """Stock status of the product"""
  stock_status: ProductStockStatus
  strap_bags: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  style_bags: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  style_bottom: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  style_general: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The file name of a swatch image."""
  swatch_image: String
  th_test_attribute: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage
  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum
  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use `__typename` instead.")
  """The unique ID for a `ProductInterface` object."""
  uid: ID!
  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Upsell Products"""
  upsell_products: [ProductInterface]
  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")
  """URL rewrites list"""
  url_rewrites: [UrlRewrite]
  """The part of the product URL that is appended after the url key"""
  url_suffix: String
  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
  """The weight of the item, in units defined by the store."""
  weight: Float
}

"""Contains information about an individual grouped product item."""
type GroupedProductItem {
  """The relative position of this item compared to the other group items."""
  position: Int
  """Details about this product option."""
  product: ProductInterface
  """The quantity of this grouped product item."""
  qty: Float
}

"""A grouped product wish list item."""
type GroupedProductWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list."""
  added_at: String!
  """Custom options selected for the wish list item."""
  customizable_options: [SelectedCustomizableOption]!
  """The description of the item."""
  description: String
  """The unique ID for a `WishlistItemInterface` object."""
  id: ID!
  """Product details of the wish list item."""
  product: ProductInterface
  """The quantity of this wish list item."""
  quantity: Float!
}

"""
Defines basic features of a configurable product and its simple product variants.
"""
type ConfigurableProduct implements ProductInterface & RoutableInterface & PhysicalProductInterface & CustomizableProductInterface {
  activity: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  brand: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """
  The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled.
  """
  canonical_url: String
  """The categories assigned to a product."""
  categories: [CategoryInterface]
  category_gear: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  climate: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  collar: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  colors: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  compatible_phones: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of options for the configurable product."""
  configurable_options: [ConfigurableProductOptions]
  """
  An array of media gallery items and other details about selected configurable product options as well as details about remaining selectable options.
  """
  configurable_product_options_selection(configurableOptionValueUids: [ID!]): ConfigurableProductOptionsSelection
  """The product's country of origin."""
  country_of_manufacture: String
  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Crosssell Products"""
  crosssell_products: [ProductInterface]
  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue
  dominant_color: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  eco_collection: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  erin_recommends: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  features_bags: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  format: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  gender: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """Indicates whether a gift message is available."""
  gift_message_available: String
  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")
  """The relative path to the main image on the product page."""
  image: ProductImage
  """A number representing the product's manufacturer."""
  manufacturer: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  material: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of media gallery objects."""
  media_gallery: [MediaGalleryInterface]
  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use `media_gallery` instead.")
  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String
  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String
  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  """The product name. Customers use this name to identify the product."""
  name: String
  new: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String
  """The end date for new product listings."""
  new_to_date: String
  """Product stock only x left count"""
  only_x_left_in_stock: Float
  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]
  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String
  pattern: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  performance_fabric: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """Indicates the price of an item."""
  price: ProductPrices @deprecated(reason: "Use `price_range` for product price information.")
  """The range of prices for the product"""
  price_range: PriceRange!
  """An array of `TierPrice` objects."""
  price_tiers: [TierPrice]
  print_art: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_holiday: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_labels: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_landmarks: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_landscape: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_mood: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_pattern_swatch: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  print_type: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """An array of `ProductLinks` objects."""
  product_links: [ProductLinksInterface]
  """The average of all the ratings given to the product."""
  rating_summary: Float!
  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
  """
  redirect_code: Int!
  """An array of products to be displayed in a Related Products block."""
  related_products: [ProductInterface]
  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String
  """The total count of all the reviews given to the product."""
  review_count: Int!
  """The list of products reviews."""
  reviews(
    """The maximum number of results to return at once. The default is 20."""
    pageSize: Int = 20
    """The page of results to return. The default is 1."""
    currentPage: Int = 1
  ): ProductReviews!
  sale: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  size: Int @deprecated(reason: "Use the `custom_attributes` field instead.")
  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String
  sleeve: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage
  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The discounted price of the product."""
  special_price: Float
  """The end date for a product with a special price."""
  special_to_date: String
  """Stock status of the product"""
  stock_status: ProductStockStatus
  strap_bags: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  style_bags: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  style_bottom: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  style_general: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The file name of a swatch image."""
  swatch_image: String
  th_test_attribute: String @deprecated(reason: "Use the `custom_attributes` field instead.")
  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage
  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use `price_tiers` for product tier price information.")
  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum
  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use `__typename` instead.")
  """The unique ID for a `ProductInterface` object."""
  uid: ID!
  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Upsell Products"""
  upsell_products: [ProductInterface]
  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")
  """URL rewrites list"""
  url_rewrites: [UrlRewrite]
  """The part of the product URL that is appended after the url key"""
  url_suffix: String
  """An array of simple product variants."""
  variants: [ConfigurableVariant]
  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
  """The weight of the item, in units defined by the store."""
  weight: Float
}

"""Contains all the simple product variants of a configurable product."""
type ConfigurableVariant {
  """An array of configurable attribute options."""
  attributes: [ConfigurableAttributeOption]
  """An array of linked simple products."""
  product: SimpleProduct
}

"""Contains details about a configurable product attribute option."""
type ConfigurableAttributeOption {
  """The ID assigned to the attribute."""
  code: String
  """A string that describes the configurable attribute option."""
  label: String
  """The unique ID for a `ConfigurableAttributeOption` object."""
  uid: ID!
  """A unique index number assigned to the configurable product option."""
  value_index: Int
}

"""Defines configurable attributes for the specified product."""
type ConfigurableProductOptions {
  """A string that identifies the attribute."""
  attribute_code: String
  """The ID assigned to the attribute."""
  attribute_id: String @deprecated(reason: "Use `attribute_uid` instead.")
  """The ID assigned to the attribute."""
  attribute_id_v2: Int @deprecated(reason: "Use `attribute_uid` instead.")
  """The unique ID for an `Attribute` object."""
  attribute_uid: ID!
  """The configurable option ID number assigned by the system."""
  id: Int @deprecated(reason: "Use `uid` instead.")
  """A displayed string that describes the configurable product option."""
  label: String
  """A number that indicates the order in which the attribute is displayed."""
  position: Int
  """This is the same as a product's `id` field."""
  product_id: Int @deprecated(reason: "`product_id` is not needed and can be obtained from its parent.")
  """The unique ID for a `ConfigurableProductOptions` object."""
  uid: ID!
  """Indicates whether the option is the default."""
  use_default: Boolean
  """
  An array that defines the `value_index` codes assigned to the configurable product.
  """
  values: [ConfigurableProductOptionsValues]
}

"""Contains the index number assigned to a configurable product option."""
type ConfigurableProductOptionsValues {
  """The label of the product on the default store."""
  default_label: String
  """The label of the product."""
  label: String
  """The label of the product on the current store."""
  store_label: String
  """Swatch data for a configurable product option."""
  swatch_data: SwatchDataInterface
  """The unique ID for a `ConfigurableProductOptionsValues` object."""
  uid: ID
  """Indicates whether to use the default_label."""
  use_default_value: Boolean
  """A unique index number assigned to the configurable product option."""
  value_index: Int @deprecated(reason: "Use `uid` instead.")
}

"""Defines the configurable products to add to the cart."""
input AddConfigurableProductsToCartInput {
  """The ID of the cart."""
  cart_id: String!
  """An array of configurable products to add."""
  cart_items: [ConfigurableProductCartItemInput]!
}

"""Contains details about the cart after adding configurable products."""
type AddConfigurableProductsToCartOutput {
  """The cart after adding products."""
  cart: Cart!
}

input ConfigurableProductCartItemInput {
  """The ID and value of the option."""
  customizable_options: [CustomizableOptionInput]
  """The quantity and SKU of the configurable product."""
  data: CartItemInput!
  """The SKU of the parent configurable product."""
  parent_sku: String
  """Deprecated. Use `CartItemInput.sku` instead."""
  variant_sku: String
}

"""Contains details about a selected configurable option."""
type SelectedConfigurableOption {
  """The unique ID for a `ConfigurableProductOptions` object."""
  configurable_product_option_uid: ID!
  """The unique ID for a `ConfigurableProductOptionsValues` object."""
  configurable_product_option_value_uid: ID!
  id: Int! @deprecated(reason: "Use `SelectedConfigurableOption.configurable_product_option_uid` instead.")
  """The display text for the option."""
  option_label: String!
  value_id: Int! @deprecated(reason: "Use `SelectedConfigurableOption.configurable_product_option_value_uid` instead.")
  """The display name of the selected configurable option."""
  value_label: String!
}

"""A configurable product wish list item."""
type ConfigurableWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list."""
  added_at: String!
  """
  The SKU of the simple product corresponding to a set of selected configurable options.
  """
  child_sku: String! @deprecated(reason: "Use `ConfigurableWishlistItem.configured_variant.sku` instead.")
  """An array of selected configurable options."""
  configurable_options: [SelectedConfigurableOption]
  """
  Product details of the selected variant. The value is null if some options are not configured.
  """
  configured_variant: ProductInterface
  """Custom options selected for the wish list item."""
  customizable_options: [SelectedCustomizableOption]!
  """The description of the item."""
  description: String
  """The unique ID for a `WishlistItemInterface` object."""
  id: ID!
  """Product details of the wish list item."""
  product: ProductInterface
  """The quantity of this wish list item."""
  quantity: Float!
}

"""Contains metadata corresponding to the selected configurable options."""
type ConfigurableProductOptionsSelection {
  """An array of all possible configurable options."""
  configurable_options: [ConfigurableProductOption]
  """
  Product images and videos corresponding to the specified configurable options selection.
  """
  media_gallery: [MediaGalleryInterface]
  """
  The configurable options available for further selection based on the current selection.
  """
  options_available_for_selection: [ConfigurableOptionAvailableForSelection]
  """
  A variant represented by the specified configurable options selection. The value is expected to be null until selections are made for each configurable option.
  """
  variant: SimpleProduct
}

"""
Describes configurable options that have been selected and can be selected as a result of the previous selections.
"""
type ConfigurableOptionAvailableForSelection {
  """An attribute code that uniquely identifies a configurable option."""
  attribute_code: String!
  """An array of selectable option value IDs."""
  option_value_uids: [ID]!
}

"""Contains details about configurable product options."""
type ConfigurableProductOption {
  """An attribute code that uniquely identifies a configurable option."""
  attribute_code: String!
  """The display name of the option."""
  label: String!
  """The unique ID of the configurable option."""
  uid: ID!
  """An array of values that are applicable for this option."""
  values: [ConfigurableProductOptionValue]
}

"""Defines a value for a configurable product option."""
type ConfigurableProductOptionValue {
  """Indicates whether the product is available with this selected option."""
  is_available: Boolean!
  """Indicates whether the value is the default."""
  is_use_default: Boolean!
  """The display name of the value."""
  label: String!
  """The URL assigned to the thumbnail of the swatch image."""
  swatch: SwatchDataInterface
  """The unique ID of the value."""
  uid: ID!
}

"""
AreaInput defines the parameters which will be used for filter by specified location.
"""
input AreaInput {
  """The radius for the search in KM."""
  radius: Int!
  """
  The country code where search must be performed. Required parameter together with region, city or postcode.
  """
  search_term: String!
}

"""
PickupLocationFilterInput defines the list of attributes and filters for the search.
"""
input PickupLocationFilterInput {
  """Filter by city."""
  city: FilterTypeInput
  """Filter by country."""
  country_id: FilterTypeInput
  """Filter by pickup location name."""
  name: FilterTypeInput
  """Filter by pickup location code."""
  pickup_location_code: FilterTypeInput
  """Filter by postcode."""
  postcode: FilterTypeInput
  """Filter by region."""
  region: FilterTypeInput
  """Filter by region id."""
  region_id: FilterTypeInput
  """Filter by street."""
  street: FilterTypeInput
}

"""
PickupLocationSortInput specifies attribute to use for sorting search results and indicates whether the results are sorted in ascending or descending order.
"""
input PickupLocationSortInput {
  """City where pickup location is placed."""
  city: SortEnum
  """Name of the contact person."""
  contact_name: SortEnum
  """Id of the country in two letters."""
  country_id: SortEnum
  """Description of the pickup location."""
  description: SortEnum
  """
  Distance to the address, requested by distance filter. Applicable only with distance filter. If distance sort order is present, all other sort orders will be ignored.
  """
  distance: SortEnum
  """Contact email of the pickup location."""
  email: SortEnum
  """Contact fax of the pickup location."""
  fax: SortEnum
  """Geographic latitude where pickup location is placed."""
  latitude: SortEnum
  """Geographic longitude where pickup location is placed."""
  longitude: SortEnum
  """
  The pickup location name. Customer use this to identify the pickup location.
  """
  name: SortEnum
  """Contact phone number of the pickup location."""
  phone: SortEnum
  """A code assigned to pickup location to identify the source."""
  pickup_location_code: SortEnum
  """Postcode where pickup location is placed."""
  postcode: SortEnum
  """Name of the region."""
  region: SortEnum
  """Id of the region."""
  region_id: SortEnum
  """Street where pickup location is placed."""
  street: SortEnum
}

"""Top level object returned in a pickup locations search."""
type PickupLocations {
  """An array of pickup locations that match the specific search request."""
  items: [PickupLocation]
  """
  An object that includes the page_info and currentPage values specified in the query.
  """
  page_info: SearchResultPageInfo
  """The number of products returned."""
  total_count: Int
}

"""Defines Pickup Location information."""
type PickupLocation {
  city: String
  contact_name: String
  country_id: String
  description: String
  email: String
  fax: String
  latitude: Float
  longitude: Float
  name: String
  phone: String
  pickup_location_code: String
  postcode: String
  region: String
  region_id: Int
  street: String
}

"""Product Information used for Pickup Locations search."""
input ProductInfoInput {
  """Product SKU."""
  sku: String!
}

"""
This enumeration states whether a product stock status is in stock or out of stock
"""
enum ProductStockStatus {
  IN_STOCK @deprecated(reason: "")
  OUT_OF_STOCK @deprecated(reason: "")
}

"""Identifies which customer requires remote shopping assistance."""
input GenerateCustomerTokenAsAdminInput {
  """
  The email address of the customer requesting remote shopping assistance.
  """
  customer_email: String!
}

"""Contains the generated customer token."""
type GenerateCustomerTokenAsAdminOutput {
  """The generated customer token."""
  customer_token: String!
}

"""Contains the result of the `subscribeEmailToNewsletter` operation."""
type SubscribeEmailToNewsletterOutput {
  """The status of the subscription request."""
  status: SubscriptionStatusesEnum
}

"""Indicates the status of the request."""
enum SubscriptionStatusesEnum {
  NOT_ACTIVE @deprecated(reason: "")
  SUBSCRIBED @deprecated(reason: "")
  UNSUBSCRIBED @deprecated(reason: "")
  UNCONFIRMED @deprecated(reason: "")
}

"""
Defines the attributes required to receive a payment token for Express Checkout and Payments Standard payment methods.
"""
input PaypalExpressTokenInput {
  """The unique ID that identifies the customer's cart."""
  cart_id: String!
  """The payment method code."""
  code: String!
  """
  Indicates whether the buyer selected the quick checkout button. The default value is false.
  """
  express_button: Boolean
  """
  A set of relative URLs that PayPal uses in response to various actions during the authorization process.
  """
  urls: PaypalExpressUrlsInput!
  """
  Indicates whether the buyer clicked the PayPal credit button. The default value is false.
  """
  use_paypal_credit: Boolean
}

"""Deprecated. Use `PaypalExpressTokenOutput` instead."""
type PaypalExpressToken {
  """
  A set of URLs that allow the buyer to authorize payment and adjust checkout details.
  """
  paypal_urls: PaypalExpressUrlList @deprecated(reason: "Use `PaypalExpressTokenOutput.paypal_urls` instead.")
  """The token returned by PayPal."""
  token: String @deprecated(reason: "Use `PaypalExpressTokenOutput.token` instead.")
}

"""
Contains the token returned by PayPal and a set of URLs that allow the buyer to authorize payment and adjust checkout details. Applies to Express Checkout and Payments Standard payment methods.
"""
type PaypalExpressTokenOutput {
  """
  A set of URLs that allow the buyer to authorize payment and adjust checkout details.
  """
  paypal_urls: PaypalExpressUrlList
  """The token returned by PayPal."""
  token: String
}

"""
Contains information used to generate PayPal iframe for transaction. Applies to Payflow Link and Payments Advanced payment methods.
"""
type PayflowLinkToken {
  """The mode for the Payflow transaction."""
  mode: PayflowLinkMode
  """The PayPal URL used for requesting a Payflow form."""
  paypal_url: String
  """The secure token generated by PayPal."""
  secure_token: String
  """The secure token ID generated by PayPal."""
  secure_token_id: String
}

"""
Contains the secure URL used for the Payments Pro Hosted Solution payment method.
"""
type HostedProUrl {
  """The secure URL generated by PayPal."""
  secure_form_url: String
}

"""
Contains the required input to request the secure URL for Payments Pro Hosted Solution payment.
"""
input HostedProUrlInput {
  """The unique ID that identifies the shopper's cart."""
  cart_id: String!
}

"""
Contains a set of relative URLs that PayPal uses in response to various actions during the authorization process. Magento prepends the base URL to this value to create a full URL. For example, if the full URL is https://www.example.com/path/to/page.html, the relative URL is path/to/page.html. Use this input for Payments Pro Hosted Solution payment method.
"""
input HostedProInput {
  """
  The relative URL of the page that PayPal redirects to when the buyer cancels the transaction in order to choose a different payment method. For example, if the full URL to this page is https://www.example.com/paypal/action/cancel.html, the relative URL is paypal/action/cancel.html.
  """
  cancel_url: String!
  """
  The relative URL of the final confirmation page that PayPal redirects to upon payment success. For example, if the full URL to this page is https://www.example.com/paypal/action/return.html, the relative URL is paypal/action/return.html.
  """
  return_url: String!
}

"""
Contains required input for Express Checkout and Payments Standard payments.
"""
input PaypalExpressInput {
  """The unique ID of the PayPal user."""
  payer_id: String!
  """The token returned by the `createPaypalExpressToken` mutation."""
  token: String!
}

"""Contains required input for Payflow Express Checkout payments."""
input PayflowExpressInput {
  """The unique ID of the PayPal user."""
  payer_id: String!
  """The token returned by the createPaypalExpressToken mutation."""
  token: String!
}

"""
Contains a set of relative URLs that PayPal uses in response to various actions during the authorization process. Magento prepends the base URL to this value to create a full URL. For example, if the full URL is https://www.example.com/path/to/page.html, the relative URL is path/to/page.html. Use this input for Express Checkout and Payments Standard payment methods.
"""
input PaypalExpressUrlsInput {
  """
  The relative URL of the page that PayPal redirects to when the buyer cancels the transaction in order to choose a different payment method. If the full URL to this page is https://www.example.com/paypal/action/cancel.html, the relative URL is paypal/action/cancel.html.
  """
  cancel_url: String!
  """
  The relative URL of the page that PayPal redirects to when the payment has been put on hold for additional review. This condition mostly applies to ACH transactions, and is not applicable to most PayPal solutions. If the full URL to this page is https://www.example.com/paypal/action/success_pending.html, the relative URL is paypal/action/success_pending.html.
  """
  pending_url: String
  """
  The relative URL of the final confirmation page that PayPal redirects to upon payment success. If the full URL to this page is https://www.example.com/paypal/action/return.html, the relative URL is paypal/action/return.html.
  """
  return_url: String!
  """
  The relative URL of the order confirmation page that PayPal redirects to when the payment is successful and additional confirmation is not needed. Not applicable to most PayPal solutions. If the full URL to this page is https://www.example.com/paypal/action/success.html, the relative URL is paypal/action/success.html.
  """
  success_url: String
}

"""
Contains a set of URLs that allow the buyer to authorize payment and adjust checkout details for Express Checkout and Payments Standard transactions.
"""
type PaypalExpressUrlList {
  """The PayPal URL that allows the buyer to edit their checkout details."""
  edit: String
  """The URL to the PayPal login page."""
  start: String
}

"""
A set of relative URLs that PayPal uses in response to various actions during the authorization process. Adobe Commerce prepends the base URL to this value to create a full URL. For example, if the full URL is https://www.example.com/path/to/page.html, the relative URL is path/to/page.html. Use this input for Payflow Link and Payments Advanced payment methods.
"""
input PayflowLinkInput {
  """
  The relative URL of the page that PayPal redirects to when the buyer cancels the transaction in order to choose a different payment method. If the full URL to this page is https://www.example.com/paypal/action/cancel.html, the relative URL is paypal/action/cancel.html.
  """
  cancel_url: String!
  """
  The relative URL of the transaction error page that PayPal redirects to upon payment error. If the full URL to this page is https://www.example.com/paypal/action/error.html, the relative URL is paypal/action/error.html.
  """
  error_url: String!
  """
  The relative URL of the order confirmation page that PayPal redirects to when the payment is successful and additional confirmation is not needed. If the full URL to this page is https://www.example.com/paypal/action/return.html, the relative URL is paypal/action/return.html.
  """
  return_url: String!
}

"""
Contains information required to fetch payment token information for the Payflow Link and Payments Advanced payment methods.
"""
input PayflowLinkTokenInput {
  """The unique ID that identifies the customer's cart."""
  cart_id: String!
}

"""
Indicates the mode for payment. Applies to the Payflow Link and Payments Advanced payment methods.
"""
enum PayflowLinkMode {
  TEST @deprecated(reason: "")
  LIVE @deprecated(reason: "")
}

"""
Contains input required to fetch payment token information for the Payflow Pro and Payments Pro payment methods.
"""
input PayflowProTokenInput {
  """The unique ID that identifies the shopper's cart."""
  cart_id: String!
  """A set of relative URLs that PayPal uses for callback."""
  urls: PayflowProUrlInput!
}

"""Contains input for the Payflow Pro and Payments Pro payment methods."""
input PayflowProInput {
  """Required input for credit card related information."""
  cc_details: CreditCardDetailsInput!
  """
  Indicates whether details about the shopper's credit/debit card should be tokenized for later usage. Required only if Vault is enabled for the PayPal Payflow Pro payment integration.
  """
  is_active_payment_token_enabler: Boolean
}

"""Required fields for Payflow Pro and Payments Pro credit card payments."""
input CreditCardDetailsInput {
  """The credit card expiration month."""
  cc_exp_month: Int!
  """The credit card expiration year."""
  cc_exp_year: Int!
  """The last 4 digits of the credit card."""
  cc_last_4: Int!
  """The credit card type."""
  cc_type: String!
}

"""
Contains a set of relative URLs that PayPal uses in response to various actions during the authorization process. Magento prepends the base URL to this value to create a full URL. For example, if the full URL is https://www.example.com/path/to/page.html, the relative URL is path/to/page.html. Use this input for the Payflow Pro and Payment Pro payment methods.
"""
input PayflowProUrlInput {
  """
  The relative URL of the page that PayPal redirects to when the buyer cancels the transaction in order to choose a different payment method. If the full URL to this page is https://www.example.com/paypal/action/cancel.html, the relative URL is paypal/action/cancel.html.
  """
  cancel_url: String!
  """
  The relative URL of the transaction error page that PayPal redirects to upon payment error. If the full URL to this page is https://www.example.com/paypal/action/error.html, the relative URL is paypal/action/error.html.
  """
  error_url: String!
  """
  The relative URL of the final confirmation page that PayPal redirects to upon payment success. If the full URL to this page is https://www.example.com/paypal/action/return.html, the relative URL is paypal/action/return.html.
  """
  return_url: String!
}

"""
Contains the secure information used to authorize transaction. Applies to Payflow Pro and Payments Pro payment methods.
"""
type PayflowProToken {
  """
  The RESPMSG returned by PayPal. If the `result` is `0`, then `response_message` is `Approved`.
  """
  response_message: String!
  """A non-zero value if any errors occurred."""
  result: Int!
  """
  The RESULT returned by PayPal. A value of `0` indicates the transaction was approved.
  """
  result_code: Int!
  """A secure token generated by PayPal."""
  secure_token: String!
  """A secure token ID generated by PayPal."""
  secure_token_id: String!
}

"""
Contains the secure information used to authorize transaction. Applies to Payflow Pro and Payments Pro payment methods.
"""
type CreatePayflowProTokenOutput {
  """
  The RESPMSG returned by PayPal. If the `result` is `0`, then `response_message` is `Approved`.
  """
  response_message: String!
  """A non-zero value if any errors occurred."""
  result: Int!
  """
  The RESULT returned by PayPal. A value of `0` indicates the transaction was approved.
  """
  result_code: Int!
  """A secure token generated by PayPal."""
  secure_token: String!
  """A secure token ID generated by PayPal."""
  secure_token_id: String!
}

"""
Input required to complete payment. Applies to Payflow Pro and Payments Pro payment methods.
"""
input PayflowProResponseInput {
  """The unique ID that identifies the shopper's cart."""
  cart_id: String!
  """The payload returned from PayPal."""
  paypal_payload: String!
}

type PayflowProResponseOutput {
  """The cart with the updated selected payment method."""
  cart: Cart!
}

"""Contains required input for payment methods with Vault support."""
input VaultTokenInput {
  """The public hash of the payment token."""
  public_hash: String!
}

"""Contains an array of product reviews."""
type ProductReviews {
  """An array of product reviews."""
  items: [ProductReview]!
  """Metadata for pagination rendering."""
  page_info: SearchResultPageInfo!
}

"""Contains details of a product review."""
type ProductReview {
  """The average of all ratings for this product."""
  average_rating: Float!
  """The date the review was created."""
  created_at: String!
  """The customer's nickname. Defaults to the customer name, if logged in."""
  nickname: String!
  """The reviewed product."""
  product: ProductInterface!
  """
  An array of ratings by rating category, such as quality, price, and value.
  """
  ratings_breakdown: [ProductReviewRating]!
  """The summary (title) of the review."""
  summary: String!
  """The review text."""
  text: String!
}

"""Contains data about a single aspect of a product review."""
type ProductReviewRating {
  """
  The label assigned to an aspect of a product that is being rated, such as quality or price.
  """
  name: String!
  """
  The rating value given by customer. By default, possible values range from 1 to 5.
  """
  value: String!
}

"""Contains an array of metadata about each aspect of a product review."""
type ProductReviewRatingsMetadata {
  """An array of product reviews sorted by position."""
  items: [ProductReviewRatingMetadata]!
}

"""Contains details about a single aspect of a product review."""
type ProductReviewRatingMetadata {
  """An encoded rating ID."""
  id: String!
  """
  The label assigned to an aspect of a product that is being rated, such as quality or price.
  """
  name: String!
  """List of product review ratings sorted by position."""
  values: [ProductReviewRatingValueMetadata]!
}

"""Contains details about a single value in a product review."""
type ProductReviewRatingValueMetadata {
  """A ratings scale, such as the number of stars awarded."""
  value: String!
  """An encoded rating value ID."""
  value_id: String!
}

"""Contains the completed product review."""
type CreateProductReviewOutput {
  """Product review details."""
  review: ProductReview!
}

"""Defines a new product review."""
input CreateProductReviewInput {
  """The customer's nickname. Defaults to the customer name, if logged in."""
  nickname: String!
  """
  The ratings details by category. For example, Price: 5 stars, Quality: 4 stars, etc.
  """
  ratings: [ProductReviewRatingInput]!
  """The SKU of the reviewed product."""
  sku: String!
  """The summary (title) of the review."""
  summary: String!
  """The review text."""
  text: String!
}

"""Contains the reviewer's rating for a single aspect of a review."""
input ProductReviewRatingInput {
  """An encoded rating ID."""
  id: String!
  """An encoded rating value ID."""
  value_id: String!
}

"""Contains the cart and any errors after adding products."""
type ReorderItemsOutput {
  """Detailed information about the customer's cart."""
  cart: Cart!
  """An array of reordering errors."""
  userInputErrors: [CheckoutUserInputError]!
}

"""An error encountered while adding an item to the cart."""
type CheckoutUserInputError {
  """An error code that is specific to Checkout."""
  code: CheckoutUserInputErrorCodes!
  """A localized error message."""
  message: String!
  """
  The path to the input field that caused an error. See the GraphQL specification about path errors for details: http://spec.graphql.org/draft/#sec-Errors
  """
  path: [String]!
}

"""Identifies the filter to use for filtering orders."""
input CustomerOrdersFilterInput {
  """Filters by order number."""
  number: FilterStringTypeInput
}

"""
CustomerOrderSortInput specifies the field to use for sorting search results and indicates whether the results are sorted in ascending or descending order.
"""
input CustomerOrderSortInput {
  """
  This enumeration indicates whether to return results in ascending or descending order
  """
  sort_direction: SortEnum!
  """Specifies the field to use for sorting"""
  sort_field: CustomerOrderSortableField!
}

"""Specifies the field to use for sorting"""
enum CustomerOrderSortableField {
  """Sorts customer orders by number"""
  NUMBER @deprecated(reason: "")
  """Sorts customer orders by created_at field"""
  CREATED_AT @deprecated(reason: "")
}

"""
The collection of orders that match the conditions defined in the filter.
"""
type CustomerOrders {
  """An array of customer orders."""
  items: [CustomerOrder]!
  """Contains pagination metadata."""
  page_info: SearchResultPageInfo
  """The total count of customer orders."""
  total_count: Int
}

"""
Contains detailed information about an order's billing and shipping addresses.
"""
type OrderAddress {
  """The city or town."""
  city: String!
  """The customer's company."""
  company: String
  """The customer's country."""
  country_code: CountryCodeEnum
  """The fax number."""
  fax: String
  """
  The first name of the person associated with the shipping/billing address.
  """
  firstname: String!
  """
  The family name of the person associated with the shipping/billing address.
  """
  lastname: String!
  """
  The middle name of the person associated with the shipping/billing address.
  """
  middlename: String
  """The customer's ZIP or postal code."""
  postcode: String
  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String
  """The state or province name."""
  region: String
  """The unique ID for a `Region` object of a pre-defined region."""
  region_id: ID
  """An array of strings that define the street number and name."""
  street: [String]!
  """A value such as Sr., Jr., or III."""
  suffix: String
  """The telephone number."""
  telephone: String
  """The customer's Value-added tax (VAT) number (for corporate customers)."""
  vat_id: String
}

type OrderItem implements OrderItemInterface {
  """The final discount information for the product."""
  discounts: [Discount]
  """The entered option for the base product, such as a logo or image."""
  entered_options: [OrderItemOption]
  """The selected gift message for the order item"""
  gift_message: GiftMessage
  """The unique ID for an `OrderItemInterface` object."""
  id: ID!
  """The name of the base product."""
  product_name: String
  """The sale price of the base product, including selected options."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The type of product, such as simple, configurable, etc."""
  product_type: String
  """URL key of the base product."""
  product_url_key: String
  """The number of canceled items."""
  quantity_canceled: Float
  """The number of invoiced items."""
  quantity_invoiced: Float
  """The number of units ordered for this item."""
  quantity_ordered: Float
  """The number of refunded items."""
  quantity_refunded: Float
  """The number of returned items."""
  quantity_returned: Float
  """The number of shipped items."""
  quantity_shipped: Float
  """The selected options for the base product, such as color or size."""
  selected_options: [OrderItemOption]
  """The status of the order item."""
  status: String
}

"""Represents order item options like selected or entered."""
type OrderItemOption {
  """The name of the option."""
  label: String!
  """The value of the option."""
  value: String!
}

"""Contains tax item details."""
type TaxItem {
  """The amount of tax applied to the item."""
  amount: Money!
  """The rate used to calculate the tax."""
  rate: Float!
  """A title that describes the tax."""
  title: String!
}

"""
Contains details about the sales total amounts used to calculate the final price.
"""
type OrderTotal {
  """The final base grand total amount in the base currency."""
  base_grand_total: Money!
  """The applied discounts to the order."""
  discounts: [Discount]
  """The final total amount, including shipping, discounts, and taxes."""
  grand_total: Money!
  """Details about the shipping and handling costs for the order."""
  shipping_handling: ShippingHandling
  """The subtotal of the order, excluding shipping, discounts, and taxes."""
  subtotal: Money!
  """The order tax details."""
  taxes: [TaxItem]
  """The shipping amount for the order."""
  total_shipping: Money!
  """The amount of tax applied to the order."""
  total_tax: Money!
}

"""Contains invoice details."""
type Invoice {
  """Comments on the invoice."""
  comments: [SalesCommentItem]
  """The unique ID for a `Invoice` object."""
  id: ID!
  """Invoiced product details."""
  items: [InvoiceItemInterface]
  """Sequential invoice number."""
  number: String!
  """Invoice total amount details."""
  total: InvoiceTotal
}

"""Contains detailes about invoiced items."""
interface InvoiceItemInterface {
  """
  Information about the final discount amount for the base product, including discounts on options.
  """
  discounts: [Discount]
  """The unique ID for an `InvoiceItemInterface` object."""
  id: ID!
  """Details about an individual order item."""
  order_item: OrderItemInterface
  """The name of the base product."""
  product_name: String
  """The sale price for the base product including selected options."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The number of invoiced items."""
  quantity_invoiced: Float
}

type InvoiceItem implements InvoiceItemInterface {
  """
  Information about the final discount amount for the base product, including discounts on options.
  """
  discounts: [Discount]
  """The unique ID for an `InvoiceItemInterface` object."""
  id: ID!
  """Details about an individual order item."""
  order_item: OrderItemInterface
  """The name of the base product."""
  product_name: String
  """The sale price for the base product including selected options."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The number of invoiced items."""
  quantity_invoiced: Float
}

"""Contains price details from an invoice."""
type InvoiceTotal {
  """The final base grand total amount in the base currency."""
  base_grand_total: Money!
  """The applied discounts to the invoice."""
  discounts: [Discount]
  """The final total amount, including shipping, discounts, and taxes."""
  grand_total: Money!
  """Details about the shipping and handling costs for the invoice."""
  shipping_handling: ShippingHandling
  """The subtotal of the invoice, excluding shipping, discounts, and taxes."""
  subtotal: Money!
  """The invoice tax details."""
  taxes: [TaxItem]
  """The shipping amount for the invoice."""
  total_shipping: Money!
  """The amount of tax applied to the invoice."""
  total_tax: Money!
}

"""Contains details about shipping and handling costs."""
type ShippingHandling {
  """The shipping amount, excluding tax."""
  amount_excluding_tax: Money
  """The shipping amount, including tax."""
  amount_including_tax: Money
  """The applied discounts to the shipping."""
  discounts: [ShippingDiscount]
  """Details about taxes applied for shipping."""
  taxes: [TaxItem]
  """The total amount for shipping."""
  total_amount: Money!
}

"""
Defines an individual shipping discount. This discount can be applied to shipping.
"""
type ShippingDiscount {
  """The amount of the discount."""
  amount: Money!
}

"""Contains order shipment details."""
type OrderShipment {
  """Comments added to the shipment."""
  comments: [SalesCommentItem]
  """The unique ID for a `OrderShipment` object."""
  id: ID!
  """An array of items included in the shipment."""
  items: [ShipmentItemInterface]
  """The sequential credit shipment number."""
  number: String!
  """An array of shipment tracking details."""
  tracking: [ShipmentTracking]
}

"""Contains details about a comment."""
type SalesCommentItem {
  """The text of the message."""
  message: String!
  """The timestamp of the comment."""
  timestamp: String!
}

"""Order shipment item details."""
interface ShipmentItemInterface {
  """The unique ID for a `ShipmentItemInterface` object."""
  id: ID!
  """The order item associated with the shipment item."""
  order_item: OrderItemInterface
  """The name of the base product."""
  product_name: String
  """The sale price for the base product."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The number of shipped items."""
  quantity_shipped: Float!
}

type ShipmentItem implements ShipmentItemInterface {
  """The unique ID for a `ShipmentItemInterface` object."""
  id: ID!
  """The order item associated with the shipment item."""
  order_item: OrderItemInterface
  """The name of the base product."""
  product_name: String
  """The sale price for the base product."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The number of shipped items."""
  quantity_shipped: Float!
}

"""Contains order shipment tracking details."""
type ShipmentTracking {
  """The shipping carrier for the order delivery."""
  carrier: String!
  """The tracking number of the order shipment."""
  number: String
  """The shipment tracking title."""
  title: String!
}

"""Contains details about the payment method used to pay for the order."""
type OrderPaymentMethod {
  """Additional data per payment method type."""
  additional_data: [KeyValue]
  """The label that describes the payment method."""
  name: String!
  """The payment method code that indicates how the order was paid for."""
  type: String!
}

"""Contains credit memo details."""
type CreditMemo {
  """Comments on the credit memo."""
  comments: [SalesCommentItem]
  """The unique ID for a `CreditMemo` object."""
  id: ID!
  """An array containing details about refunded items."""
  items: [CreditMemoItemInterface]
  """The sequential credit memo number."""
  number: String!
  """Details about the total refunded amount."""
  total: CreditMemoTotal
}

"""Credit memo item details."""
interface CreditMemoItemInterface {
  """
  Details about the final discount amount for the base product, including discounts on options.
  """
  discounts: [Discount]
  """The unique ID for a `CreditMemoItemInterface` object."""
  id: ID!
  """The order item the credit memo is applied to."""
  order_item: OrderItemInterface
  """The name of the base product."""
  product_name: String
  """The sale price for the base product, including selected options."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The number of refunded items."""
  quantity_refunded: Float
}

type CreditMemoItem implements CreditMemoItemInterface {
  """
  Details about the final discount amount for the base product, including discounts on options.
  """
  discounts: [Discount]
  """The unique ID for a `CreditMemoItemInterface` object."""
  id: ID!
  """The order item the credit memo is applied to."""
  order_item: OrderItemInterface
  """The name of the base product."""
  product_name: String
  """The sale price for the base product, including selected options."""
  product_sale_price: Money!
  """The SKU of the base product."""
  product_sku: String!
  """The number of refunded items."""
  quantity_refunded: Float
}

"""Contains credit memo price details."""
type CreditMemoTotal {
  """An adjustment manually applied to the order."""
  adjustment: Money!
  """The final base grand total amount in the base currency."""
  base_grand_total: Money!
  """The applied discounts to the credit memo."""
  discounts: [Discount]
  """The final total amount, including shipping, discounts, and taxes."""
  grand_total: Money!
  """Details about the shipping and handling costs for the credit memo."""
  shipping_handling: ShippingHandling
  """The subtotal of the invoice, excluding shipping, discounts, and taxes."""
  subtotal: Money!
  """The credit memo tax details."""
  taxes: [TaxItem]
  """The shipping amount for the credit memo."""
  total_shipping: Money!
  """The amount of tax applied to the credit memo."""
  total_tax: Money!
}

"""Contains a key-value pair."""
type KeyValue {
  """The name part of the key/value pair."""
  name: String
  """The value part of the key/value pair."""
  value: String
}

enum CheckoutUserInputErrorCodes {
  REORDER_NOT_AVAILABLE @deprecated(reason: "")
  PRODUCT_NOT_FOUND @deprecated(reason: "")
  NOT_SALABLE @deprecated(reason: "")
  INSUFFICIENT_STOCK @deprecated(reason: "")
  UNDEFINED @deprecated(reason: "")
}

"""This enumeration defines the scope type for customer orders."""
enum ScopeTypeEnum {
  GLOBAL @deprecated(reason: "")
  WEBSITE @deprecated(reason: "")
  STORE @deprecated(reason: "")
}

"""Contains the `uid`, `relative_url`, and `type` attributes."""
type EntityUrl {
  canonical_url: String @deprecated(reason: "Use `relative_url` instead.")
  """
  The unique ID for a `ProductInterface`, `CategoryInterface`, `CmsPage`, or similar object associated with the specified URL. This could be a product, category, or CMS page UID.
  """
  entity_uid: ID
  """
  The ID assigned to the object associated with the specified url. This could be a product ID, category ID, or page ID.
  """
  id: Int @deprecated(reason: "Use `entity_uid` instead.")
  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
  """
  redirectCode: Int
  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String
  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum
}

"""Contains URL rewrite details."""
type UrlRewrite {
  """An array of request parameters."""
  parameters: [HttpQueryParameter]
  """The request URL."""
  url: String
}

"""Contains target path parameters."""
type HttpQueryParameter {
  """A parameter name."""
  name: String
  """A parameter value."""
  value: String
}

"""Routable entities serve as the model for a rendered page."""
interface RoutableInterface {
  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
  """
  redirect_code: Int!
  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String
  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum
}

"""Defines the referenced product and the email sender and recipients."""
input SendEmailToFriendInput {
  """The ID of the product that the sender is referencing."""
  product_id: Int!
  """An array containing information about each recipient."""
  recipients: [SendEmailToFriendRecipientInput]!
  """Information about the customer and the content of the message."""
  sender: SendEmailToFriendSenderInput!
}

"""Contains details about the sender."""
input SendEmailToFriendSenderInput {
  """The email address of the sender."""
  email: String!
  """The text of the message to be sent."""
  message: String!
  """The name of the sender."""
  name: String!
}

"""Contains details about a recipient."""
input SendEmailToFriendRecipientInput {
  """The email address of the recipient."""
  email: String!
  """The name of the recipient."""
  name: String!
}

"""Contains information about the sender and recipients."""
type SendEmailToFriendOutput {
  """An array containing information about each recipient."""
  recipients: [SendEmailToFriendRecipient]
  """Information about the customer and the content of the message."""
  sender: SendEmailToFriendSender
}

"""An output object that contains information about the sender."""
type SendEmailToFriendSender {
  """The email address of the sender."""
  email: String!
  """The text of the message to be sent."""
  message: String!
  """The name of the sender."""
  name: String!
}

"""An output object that contains information about the recipient."""
type SendEmailToFriendRecipient {
  """The email address of the recipient."""
  email: String!
  """The name of the recipient."""
  name: String!
}

"""
Contains details about the configuration of the Email to a Friend feature.
"""
type SendFriendConfiguration {
  """Indicates whether the Email to a Friend feature is enabled."""
  enabled_for_customers: Boolean!
  """Indicates whether the Email to a Friend feature is enabled for guests."""
  enabled_for_guests: Boolean!
}

interface SwatchLayerFilterItemInterface {
  """Data required to render a swatch filter item."""
  swatch_data: SwatchData
}

type SwatchLayerFilterItem implements LayerFilterItemInterface & SwatchLayerFilterItemInterface {
  """The count of items per filter."""
  items_count: Int @deprecated(reason: "Use `AggregationOption.count` instead.")
  """The label for a filter."""
  label: String @deprecated(reason: "Use `AggregationOption.label` instead.")
  """Data required to render a swatch filter item."""
  swatch_data: SwatchData
  """The value of a filter request variable to be used in query."""
  value_string: String @deprecated(reason: "Use `AggregationOption.value` instead.")
}

"""Describes the swatch type and a value."""
type SwatchData {
  """The type of swatch filter item: 1 - text; 2 - image."""
  type: String
  """The value for the swatch item. It could be text or an image link."""
  value: String
}

interface SwatchDataInterface {
  """The value can be represented as color (HEX code), image link, or text."""
  value: String
}

type ImageSwatchData implements SwatchDataInterface {
  """The URL assigned to the thumbnail of the swatch image."""
  thumbnail: String
  """The value can be represented as color (HEX code), image link, or text."""
  value: String
}

type TextSwatchData implements SwatchDataInterface {
  """The value can be represented as color (HEX code), image link, or text."""
  value: String
}

type ColorSwatchData implements SwatchDataInterface {
  """The value can be represented as color (HEX code), image link, or text."""
  value: String
}

"""
Indicates whether the request succeeded and returns the remaining customer payment tokens.
"""
type DeletePaymentTokenOutput {
  """A container for the customer's remaining payment tokens."""
  customerPaymentTokens: CustomerPaymentTokens
  """Indicates whether the request succeeded."""
  result: Boolean!
}

"""Contains payment tokens stored in the customer's vault."""
type CustomerPaymentTokens {
  """An array of payment tokens."""
  items: [PaymentToken]!
}

"""The stored payment method available to the customer."""
type PaymentToken {
  """A description of the stored account details."""
  details: String
  """The payment method code associated with the token."""
  payment_method_code: String!
  """The public hash of the token."""
  public_hash: String!
  """Specifies the payment token type."""
  type: PaymentTokenTypeEnum!
}

"""The list of available payment token types."""
enum PaymentTokenTypeEnum {
  """phpcs:ignore Magento2.GraphQL.ValidArgumentName"""
  card @deprecated(reason: "")
  """phpcs:ignore Magento2.GraphQL.ValidArgumentName"""
  account @deprecated(reason: "")
}

"""A single FPT that can be applied to a product price."""
type FixedProductTax {
  """The amount of the Fixed Product Tax."""
  amount: Money
  """The display label assigned to the Fixed Product Tax."""
  label: String
}

"""Lists display settings for the Fixed Product Tax."""
enum FixedProductTaxDisplaySettings {
  """
  The displayed price includes the FPT amount without displaying the `ProductPrice.fixed_product_taxes` values. This value corresponds to 'Including FPT only'.
  """
  INCLUDE_FPT_WITHOUT_DETAILS @deprecated(reason: "")
  """
  The displayed price includes the FPT amount while displaying the values of `ProductPrice.fixed_product_taxes` separately. This value corresponds to 'Including FPT and FPT description'.
  """
  INCLUDE_FPT_WITH_DETAILS @deprecated(reason: "")
  """
  The displayed price does not include the FPT amount. The values of `ProductPrice.fixed_product_taxes` and the price including the FPT are displayed separately. This value corresponds to 'Excluding FPT, Including FPT description and final price.'
  """
  EXCLUDE_FPT_AND_INCLUDE_WITH_DETAILS @deprecated(reason: "")
  """
  The displayed price does not include the FPT amount. The values from `ProductPrice.fixed_product_taxes` are not displayed. This value corresponds to 'Excluding FPT'.
  """
  EXCLUDE_FPT_WITHOUT_DETAILS @deprecated(reason: "")
  """
  The FPT feature is not enabled. You can omit `ProductPrice.fixed_product_taxes` from your query.
  """
  FPT_DISABLED @deprecated(reason: "")
}

"""Deprecated: Use the `Wishlist` type instead."""
type WishlistOutput {
  """An array of items in the customer's wish list"""
  items: [WishlistItem] @deprecated(reason: "Use the `Wishlist.items` field instead.")
  """The number of items in the wish list."""
  items_count: Int @deprecated(reason: "Use the `Wishlist.items_count` field instead.")
  """
  When multiple wish lists are enabled, the name the customer assigns to the wishlist.
  """
  name: String @deprecated(reason: "This field is related to Commerce functionality and is always `null` in Open Source.")
  """An encrypted code that links to the wish list."""
  sharing_code: String @deprecated(reason: "Use the `Wishlist.sharing_code` field instead.")
  """The time of the last modification to the wish list."""
  updated_at: String @deprecated(reason: "Use the `Wishlist.updated_at` field instead.")
}

"""Contains a customer wish list."""
type Wishlist {
  """The unique ID for a `Wishlist` object."""
  id: ID
  items: [WishlistItem] @deprecated(reason: "Use the `items_v2` field instead.")
  """The number of items in the wish list."""
  items_count: Int
  """An array of items in the customer's wish list."""
  items_v2(currentPage: Int = 1, pageSize: Int = 20): WishlistItems
  """An encrypted code that Magento uses to link to the wish list."""
  sharing_code: String
  """The time of the last modification to the wish list."""
  updated_at: String
}

"""The interface for wish list items."""
interface WishlistItemInterface {
  """The date and time the item was added to the wish list."""
  added_at: String!
  """Custom options selected for the wish list item."""
  customizable_options: [SelectedCustomizableOption]!
  """The description of the item."""
  description: String
  """The unique ID for a `WishlistItemInterface` object."""
  id: ID!
  """Product details of the wish list item."""
  product: ProductInterface
  """The quantity of this wish list item."""
  quantity: Float!
}

"""Contains an array of items in a wish list."""
type WishlistItems {
  """A list of items in the wish list."""
  items: [WishlistItemInterface]!
  """Contains pagination metadata."""
  page_info: SearchResultPageInfo
}

"""Contains details about a wish list item."""
type WishlistItem {
  """The time when the customer added the item to the wish list."""
  added_at: String
  """The customer's comment about this item."""
  description: String
  """The unique ID for a `WishlistItem` object."""
  id: Int
  """Details about the wish list item."""
  product: ProductInterface
  """The quantity of this wish list item"""
  qty: Float
}

"""Contains the resultant wish list and any error information."""
type AddWishlistItemsToCartOutput {
  """
  An array of errors encountered while adding products to the customer's cart.
  """
  add_wishlist_items_to_cart_user_errors: [WishlistCartUserInputError]!
  """
  Indicates whether the attempt to add items to the customer's cart was successful.
  """
  status: Boolean!
  """Contains the wish list with all items that were successfully added."""
  wishlist: Wishlist!
}

"""
Contains details about errors encountered when a customer added wish list items to the cart.
"""
type WishlistCartUserInputError {
  """An error code that describes the error encountered."""
  code: WishlistCartUserInputErrorType!
  """A localized error message."""
  message: String!
  """The unique ID of the `Wishlist` object containing an error."""
  wishlistId: ID!
  """The unique ID of the wish list item containing an error."""
  wishlistItemId: ID!
}

"""A list of possible error types."""
enum WishlistCartUserInputErrorType {
  PRODUCT_NOT_FOUND @deprecated(reason: "")
  NOT_SALABLE @deprecated(reason: "")
  INSUFFICIENT_STOCK @deprecated(reason: "")
  UNDEFINED @deprecated(reason: "")
}

"""Defines the items to add to a wish list."""
input WishlistItemInput {
  """An array of options that the customer entered."""
  entered_options: [EnteredOptionInput]
  """For complex product types, the SKU of the parent product."""
  parent_sku: String
  """The amount or number of items to add."""
  quantity: Float!
  """An array of strings corresponding to options the customer selected."""
  selected_options: [ID]
  """
  The SKU of the product to add. For complex product types, specify the child product SKU.
  """
  sku: String!
}

"""Contains the customer's wish list and any errors encountered."""
type AddProductsToWishlistOutput {
  """An array of errors encountered while adding products to a wish list."""
  user_errors: [WishListUserInputError]!
  """Contains the wish list with all items that were successfully added."""
  wishlist: Wishlist!
}

"""Contains the customer's wish list and any errors encountered."""
type RemoveProductsFromWishlistOutput {
  """
  An array of errors encountered while deleting products from a wish list.
  """
  user_errors: [WishListUserInputError]!
  """Contains the wish list with after items were successfully deleted."""
  wishlist: Wishlist!
}

"""Defines updates to items in a wish list."""
input WishlistItemUpdateInput {
  """Customer-entered comments about the item."""
  description: String
  """An array of options that the customer entered."""
  entered_options: [EnteredOptionInput]
  """The new amount or number of this item."""
  quantity: Float
  """An array of strings corresponding to options the customer selected."""
  selected_options: [ID]
  """The unique ID for a `WishlistItemInterface` object."""
  wishlist_item_id: ID!
}

"""Contains the customer's wish list and any errors encountered."""
type UpdateProductsInWishlistOutput {
  """An array of errors encountered while updating products in a wish list."""
  user_errors: [WishListUserInputError]!
  """Contains the wish list with all items that were successfully updated."""
  wishlist: Wishlist!
}

"""An error encountered while performing operations with WishList."""
type WishListUserInputError {
  """A wish list-specific error code."""
  code: WishListUserInputErrorType!
  """A localized error message."""
  message: String!
}

"""A list of possible error types."""
enum WishListUserInputErrorType {
  PRODUCT_NOT_FOUND @deprecated(reason: "")
  UNDEFINED @deprecated(reason: "")
}

type PaymentMethod {
  """Available issuers for this payment method"""
  mollie_available_issuers: [MollieIssuer]
  """Retrieve meta information for this payment method (image)"""
  mollie_meta: MolliePaymentMethodMeta!
}

type MollieStoreConfig {
  """Is Mollie running in live mode?"""
  live_mode: Boolean
  """The profile ID used for this store"""
  profile_id: String
}

type MollieIssuer {
  code: String
  image: String
  name: String
  svg: String
}

type MolliePaymentMethodMeta {
  image: String
}

type MolliePaymentMethod {
  code: String
  image: String
  name: String
}

type MollieResetCartOutput {
  cart: Cart!
}

type MolliePaymentMethodsOutput {
  methods: [MolliePaymentMethod]
}

type MollieTransactionOutput {
  checkout_url: String
}

type MollieProcessTransactionOutput {
  """
  The cart is only available when the payment status is failed, canceled or expired.
  """
  cart: Cart
  paymentStatus: PaymentStatusEnum
  """Indicates if the customer should be redirected to the cart."""
  redirect_to_cart: Boolean
  """Indicates if the customer should be redirected to the success page."""
  redirect_to_success_page: Boolean
}

type MolliePaymentFee {
  """Base mollie payment fee"""
  base_fee: Money
  """Base mollie payment fee tax"""
  base_fee_tax: Money
  """Mollie payment fee"""
  fee: Money
  """Mollie payment fee tax"""
  fee_tax: Money
}

type MollieApplePayValidationOutput {
  response: String!
}

input MollieTransactionInput {
  issuer: String
  payment_token: String!
}

input MolliePaymentMethodsInput {
  amount: Float!
  currency: String!
}

input MollieResetCartInput {
  """The unique ID that identifies the customer's cart"""
  cart_id: String!
}

input MollieProcessTransactionInput {
  """
  The payment token returned from the PlaceOrder call/added to the return URL
  """
  payment_token: String!
}

enum PaymentStatusEnum {
  CREATED @deprecated(reason: "")
  PAID @deprecated(reason: "")
  AUTHORIZED @deprecated(reason: "")
  CANCELED @deprecated(reason: "")
  SHIPPING @deprecated(reason: "")
  COMPLETED @deprecated(reason: "")
  EXPIRED @deprecated(reason: "")
  PENDING @deprecated(reason: "")
  REFUNDED @deprecated(reason: "")
  ERROR @deprecated(reason: "")
  FAILED @deprecated(reason: "")
  OPEN @deprecated(reason: "")
}

input BraintreeInput {
  """
  Contains a fingerprint provided by Braintree JS SDK and should be sent with sale transaction details to the Braintree payment gateway.
  """
  device_data: String
  """
  States whether an entered by a customer credit/debit card should be tokenized for later usage. Required only if Vault is enabled for Braintree payment integration.
  """
  is_active_payment_token_enabler: Boolean!
  """
  The one-time payment token generated by Braintree payment gateway based on card details. Required field to make sale transaction.
  """
  payment_method_nonce: String!
}

input BraintreeCcVaultInput {
  device_data: String
  public_hash: String!
}

"""
# GraphCommerce configuration system

Global GraphCommerce configuration can be configured in your `graphcommerce.config.js` file
in the root of your project and are automatically validated on startup.

## Configuring with the configuration file.

The configuration file is a javascript file that exports a `GraphCommerceConfig` object. See graphcommerce.config.js.example for an example.

## Using configuration

Configuration can be accessed in your project with the `import.meta.graphCommerce` object.

```tsx
import { storefrontAll, storefrontConfig, storefrontConfigDefault, useStorefrontConfig } from '@graphcommerce/next-ui'

// Accessing a global value
const globalConf = import.meta.graphCommerce.cartDisplayPricesInclTax

function MyComponent() {
  // Configuration configured per storefront locale.
  const scopedConfig = useStorefrontConfig().cartDisplayPricesInclTax

  // Creating a fallback system
  const scopedConfigWithFallback = scopedConfig ?? globalConf

  // Or as single line
  const scopedConfigWithFallback2 =
    useStorefrontConfig().cartDisplayPricesInclTax ?? import.meta.graphCommerce.cartDisplayPricesInclTax

  return <div>{googleRecaptchaKey}</div>
}
```

You can also use the configuration in your `.meshrc.yml` by accessing
`{graphCommerce.myField}`

```yml
endpoint: '{graphCommerce.magentoEndpoint}'
```

## Environment variables to override configuration

Configuration values can be overwriten by environment variables, with the following rules:
- Convert from camelCase to `SCREAMING_SNAKE_CASE`
- Prefix with `GC_`
- Arrays can be indexed with `_0`, `_1`, `_2`, etc.
- Objects can be accessed with `_<key>`.

Examples:
- `limitSsg` -> `GC_LIMIT_SSG="1"`
- `storefront[0].locale` -> `GC_STOREFRONT_0_LOCALE="en"`
- `debug.pluginStatus` -> `GC_DEBUG_PLUGIN_STATUS="1"`


## Exporting current configuration to environment variables

You can export configuration by running `yarn graphcommerce export-config`

## Extending the configuration in your  project

Create a graphql/Config.graphqls file in your project and extend the GraphCommerceConfig, GraphCommerceStorefrontConfig inputs to add configuration.

```graphql
extend input GraphCommerceConfig {
  myConfig: String # or Boolean, or Int, or Float, make required with `!`
}
extend input GraphCommerceStorefrontConfig {
  myField: Boolean
}
```

## All configuration values

Below is a list of all possible configurations that can be set by GraphCommerce.
"""
input GraphCommerceConfig {
  """
  Enables some demo specific code that is probably not useful for a project:
  
  - Adds the "BY GC" to the product list items.
  - Adds "dominant_color" attribute swatches to the product list items.
  - Creates a big list items in the product list.
  """
  demoMode: Boolean = true
  """
  See https://support.google.com/analytics/answer/9539598?hl=en
  
  Provide a value to enable Google Analytics for your store.
  
  To override the value for a specific locale, configure in i18n config.
  """
  googleAnalyticsId: String
  """
  Google reCAPTCHA site key.
  When using reCAPTCHA, this value is required, even if you are configuring different values for each locale.
  
  Get a site key and a secret key from https://developers.google.com/recaptcha/docs/v3
  
  The secret key should be added in the Magento admin panel (Stores > Configuration > Security > Google ReCAPTCHA Storefront > reCAPTCHA v3 Invisible)
  ReCAPTCHA can then be enabled/disabled for the different forms, separately (Stores > Configuration > Security > Google ReCAPTCHA Storefront > Storefront)
  """
  googleRecaptchaKey: String
  """
  The Google Tagmanager ID to be used on the site.
  
  This value is required even if you are configuring different values for each locale.
  """
  googleTagmanagerId: String
  """
  The HyGraph endpoint.
  
  > Read-only endpoint that allows low latency and high read-throughput content delivery.
  
  Project settings -> API Access -> High Performance Read-only Content API
  """
  hygraphEndpoint: String!
  """
  Content API. **Only used for migrations.**
  
  > Regular read & write endpoint that allows querying and mutating data in your project.
  
  Project settings -> API Access -> Content API
  """
  hygraphWriteAccessEndpoint: String
  """
  Hygraph Management SDK Authorization Token. **Only used for migrations.**
  
  Project settings -> API Access -> Permanent Auth Tokens
  
  1. Click  'Add token' and give it a name, something like 'GraphCommerce Write Access Token' and keep stage on 'Published'.
  2. Under 'Management API', click 'Yes, Initialize defaults'
  3. Click 'Edit Permissions' and enable: 'Update' and 'Delete' permissions for 'models', 'enumerations', 'fields', 'components' and 'sources'
    - Update existing models
    - Delete existing models
    - Update existing fields
    - Delete existing fields
    - Update existing enumerations
    - Delete existing enumerations
    - Update existing components
    - Delete existing components
    - Update remote sources
    - Delete remote sources
    - Read existing environments
    - Read public content views
    - Create public content views
    - Update public content views
    - Delete public content views
    - Can see schema view
  
  ```
  GC_HYGRAPH_WRITE_ACCESS_ENDPOINT="https://...hygraph.com/v2/..."
  GC_HYGRAPH_WRITE_ACCESS_TOKEN="AccessTokenFromHygraph"
  yarn graphcommerce hygraph-migrate
  ```
  """
  hygraphWriteAccessToken: String
  """Hygraph Project ID. **Only used for migrations.**"""
  hygraphProjectId: String
  """
  Due to a limitation of the GraphQL API it is not possible to determine if a cart should be displayed including or excluding tax.
  
  When Magento's StoreConfig adds this value, this can be replaced.
  """
  cartDisplayPricesInclTax: Boolean
  """Use compare functionality"""
  compare: Boolean
  """
  By default the compare feature is denoted with a 'compare ICON' (2 arrows facing one another).
  This may be fine for experienced users, but for more clarity it's also possible to present the compare feature as a CHECKBOX accompanied by the 'Compare' label
  """
  compareVariant: CompareVariant = ICON
  """
  Due to a limitation in the GraphQL API of Magento 2, we need to know if the
  customer requires email confirmation.
  
  This value should match Magento 2's configuration value for
  `customer/create_account/confirm` and should be removed once we can query
  """
  customerRequireEmailConfirmation: Boolean
  """
  GraphQL Magento endpoint.
  
  Examples:
  - https://magento2.test/graphql
  """
  magentoEndpoint: String!
  """
  When a user selects a variant, it will switch the values on the configurable page with the values of the configured variant.
  
  Enabling options here will allow switching of those variants.
  """
  configurableVariantValues: MagentoConfigurableVariantValues = {url: true, content: true}
  """
  If a simple product is part of a Configurable product page, should the simple product be
  rendered as a configured option of the configurable product page?
  
  How does this work:
  
  When the `products(filters: { url_key: { eq: 'simple-product' } }) { ... }` query is ran,
  Magento also returns the Simple product and the Configurable product the simple belongs to.
  
  If that is the case we render the configurable product page instead of the simple product page but
  the options to select the simple product are pre-selected.
  """
  configurableVariantForSimple: Boolean = false
  """
  On older versions of GraphCommerce products would use a product type specific route.
  
  This should only be set to true if you use the /product/[url] AND /product/configurable/[url] routes.
  
  @deprecated Will be removed in a future version. [migration](../upgrading/graphcommerce-5-to-6.md#product-routing-changes)
  """
  legacyProductRoute: Boolean
  """Product filters with better UI for mobile and desktop."""
  productFiltersPro: Boolean
  """
  Layout how the filters are rendered.
  DEFAULT: Will be rendered as horzontal chips on desktop and mobile
  SIDEBAR: Will be rendered as a sidebar on desktop and horizontal chips on mobile
  """
  productFiltersLayout: ProductFiltersLayout = DEFAULT
  """
  By default we route products to /p/[url] but you can change this to /product/[url] if you wish.
  
  Default: '/p/'
  Example: '/product/'
  """
  productRoute: String
  """Hide the wishlist functionality for guests."""
  wishlistHideForGuests: Boolean
  """
  Ignores whether a product is already in the wishlist, makes the toggle an add only.
  """
  wishlistIgnoreProductWishlistStatus: Boolean
  """Show a message when the product is added to the wishlist."""
  wishlistShowFeedbackMessage: Boolean
  """All storefront configuration for the project"""
  storefront: [GraphCommerceStorefrontConfig!]!
  """Limit the static generation of SSG when building"""
  limitSsg: Boolean
  """
  Allow the site to be indexed by search engines.
  If false, the robots.txt file will be set to disallow all.
  """
  robotsAllow: Boolean
  """
  The canonical base URL is used for SEO purposes.
  
  Examples:
  - https://example.com
  - https://example.com/en
  - https://example.com/en-US
  """
  canonicalBaseUrl: String!
  """
  To enable next.js' preview mode, configure the secret you'd like to use.
  """
  previewSecret: String
  """Debug configuration for GraphCommerce"""
  debug: GraphCommerceDebugConfig
}

"""All storefront configuration for the project"""
input GraphCommerceStorefrontConfig {
  """
  Configure different Google Analytics IDs for different locales.
  
  To disable for a specific locale, set the value to null.
  """
  googleAnalyticsId: String
  """Locale specific google reCAPTCHA key."""
  googleRecaptchaKey: String
  """The Google Tagmanager ID to be used per locale."""
  googleTagmanagerId: String
  """
  Add a gcms-locales header to make sure queries return in a certain language, can be an array to define fallbacks.
  """
  hygraphLocales: [String!]
  """Specify a custom locale for to load translations."""
  linguiLocale: String
  """
  Due to a limitation of the GraphQL API it is not possible to determine if a cart should be displayed including or excluding tax.
  """
  cartDisplayPricesInclTax: Boolean
  """
  Magento store code.
  
  Stores => All Stores => [Store View] => Store View Code
  
  Examples:
  - default
  - en-us
  - b2b-us
  """
  magentoStoreCode: String!
  """
  There can only be one entry with defaultLocale set to true.
  - If there are more, the first one is used.
  - If there is none, the first entry is used.
  """
  defaultLocale: Boolean
  """
  Domain configuration, must be a domain https://tools.ietf.org/html/rfc3986
  """
  domain: String
  """
  Must be a locale string https://www.unicode.org/reports/tr35/tr35-59/tr35.html#Identifiers
  """
  locale: String!
  """
  The canonical base URL is used for SEO purposes.
  
  Examples:
  - https://example.com
  - https://example.com/en
  - https://example.com/en-US
  """
  canonicalBaseUrl: String
}

type CurrentCartId {
  id: String
}

input RegisterCartIdInput {
  cart_id: String!
}

enum CompareVariant {
  ICON
  CHECKBOX
}

type CurrentCompareUid {
  uid: String
}

"""
Options to configure which values will be replaced when a variant is selected on the product page.
"""
input MagentoConfigurableVariantValues {
  """
  When a variant is selected the URL of the product will be changed in the address bar.
  
  This only happens when the actual variant is can be accessed by the URL.
  """
  url: Boolean
  """
  This option enables the automatic update of product gallery images on the product page when a variant is selected,
  provided that the gallery images for the selected variant differ from the currently displayed images.
  """
  gallery: Boolean
  """
  Use the name, description, short description and meta data from the configured variant
  """
  content: Boolean
}

enum ProductFiltersLayout {
  DEFAULT
  SIDEBAR
}

type GuestWishlist {
  items: [GuestWishlistItem!]!
}

type GuestWishlistItem {
  sku: String!
  url_key: String!
  selected_options: [ID]
  quantity: Float!
}

"""Debug configuration for GraphCommerce"""
input GraphCommerceDebugConfig {
  """
  When updating packages it can happen that the same package is included with different versions in the same project.
  
  Issues that this can cause are:
  - The same package is included multiple times in the bundle, increasing the bundle size.
  - The Typescript types of the package are not compatible with each other, causing Typescript errors.
  """
  webpackDuplicatesPlugin: Boolean
  """
  Cyclic dependencies can cause memory issues and other strange bugs.
  This plugin will warn you when it detects a cyclic dependency.
  
  When running into memory issues, it can be useful to enable this plugin.
  """
  webpackCircularDependencyPlugin: Boolean
  """Reports which plugins are enabled or disabled."""
  pluginStatus: Boolean
}